<html lang="en-US">
<head>
<meta content="IE=edge" http-equiv="X-UA-Compatible" />
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
<title>Reset_and_Initialization</title>
<meta content="Reset and Initialization" name="title_original" />
<link href="../../../rhstylemapping.css" rel="stylesheet" type="text/css" />
<link href="../Reference_Guide.css" rel="stylesheet" type="text/css" />
<link href="../../../editstyle.css" rel="stylesheet" type="text/css" /><script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker v17.0" />
<script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../../..";
gCommonRootRelPath = "../../..";
gTopicId = "4.5.0_1";
</script>
 <meta name="brsprev" value="Ncore_3_Online_Documentation/Reference_Guide/SysSoftwareGuide/SysSoftwareGuide.htm">
 <meta name="brsnext" value="Ncore_3_Online_Documentation/Reference_Guide/SysSoftwareGuide/Q_channel_clock_gating_sequence.htm">
 <meta name="topic-breadcrumbs" content="Reference Guide > System Software Guidelines" />
</head>
<body dir="ltr">
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>
<div><p class="Heading1" id="1001746"><a id="1092_Heading1_1001746" name="1092_Heading1_1001746"></a>5.1 <a id="XREF_85529__5_1_Reset_and_Initialization22" name="XREF_85529__5_1_Reset_and_Initialization22">Reset and Initialization</a></p><p class="BodyAfterHead" id="1001747"><a id="1092_BodyAfterHead_1001747" name="1092_BodyAfterHead_1001747"></a>Before processing any requests, each Ncore component must be transitioned into the operational state, which is achieved once the following requirements have been met&#x3A;</p><p class="Bullet_1" id="1001748"><span class="BulletSymbol">&#x2022; </span>The supply voltage has been raised to an operational level</p><p class="Bullet_1" id="1001749"><span class="BulletSymbol">&#x2022; </span>The clock source is generating a stable clock signal</p><p class="Bullet_1" id="1001750"><span class="BulletSymbol">&#x2022; </span>The clock frequency is less than or equal to the maximum frequency allowed for the given operational voltage level</p><p class="Bullet_1" id="1001751"><span class="BulletSymbol">&#x2022; </span>The reset signal has been asserted and has been de&#x2D;asserted after the required minimum number of cycles (16 cycles of the slowest clock in the system) if any of the&#160;following conditions occurred&#x3A;</p><p class="Bullet_2" id="1001752"><span class="BulletSymbol"> &#x2D; </span>The supply voltage dropped below the logic or memory retention level</p><p class="Bullet_2" id="1001753"><span class="BulletSymbol"> &#x2D; </span>The clock source was not generating a stable clock signal</p><p class="Bullet_2" id="1001754"><span class="BulletSymbol"> &#x2D; </span>The clock frequency was greater than the maximum frequency allowed for a given operational voltage level<div align="left"><table class="note" style="max-width: 100% ;height: auto;"><col width="67.13px"/><col width="403.12px"/><tr height="22.67px"><td><p class="aaNote" id="1005739">NOTE&#x3A;</p></td><td><p class="CellBody" id="1005741">The reset is asynchronous assert and synchronous de&#x2D;assert.</p></td></tr></table></div></p><p class="BodyAfterHead" id="1001755">Ncore components may be configured to have memories. These memories are initialized by an internal state machine on de&#x2D;assertion of reset. </p><p class="BodyAfterHead" id="1001756">Once all Ncore Components are in operational state, the boot&#47;initialization processes described below need to be followed. </p><p class="Heading3" id="1001757"><span style="padding-right:18pt ;">&#8203</span>Boot&#47;Initialization</p><p class="Body" id="1001758">An agent connected to CAIU&#47;NACIU may be designated as boot agent. This agent is expected to make the first request into the Ncore system. This request is expected to be a non&#x2D;coherent request. The boot&#x2D;up sequence to be followed is&#x3A;</p><p class="Bullet_1" id="1001759"><span class="BulletSymbol">&#x2022; </span>Perform CSR access and go through the Ncore component discovery as described in <a  href="#XREF_61665__Ncore_Component_Discovery22" style="color:#0000ff;">“Ncore Component Information”</a></p><p class="Bullet_1" id="1001760"><span class="BulletSymbol">&#x2022; </span>Configure required memory and peripheral address spaces as described in <a  href="#XREF_33209__Address_space_configuration22" style="color:#0000ff;">“Address space configuration”</a></p><p class="Bullet_1" id="1004177"><span class="BulletSymbol">&#x2022; </span>Configure error registers as needed to enable required error detection and reporting as described in<a  href="#XREF_59451__Error_Detection_and_Reporting_configuration22" style="font-family : Georgia ; font-weight:normal;font-style:Italic;font-size : 10.00pt;text-decoration:none;text-transform:none;font-stretch:normal;color:#0000ff;background-color:transparent;letter-spacing : 0.00em;"> Error Detection and Reporting configuration</a>.</p><p class="Bullet_1" id="1001762"><span class="BulletSymbol">&#x2022; </span>If preset, configure and enable all needed SMCs as described in <a  href="#XREF_69419__SMC_configuration22" style="color:#0000ff;">“SMC configuration”</a>.</p><p class="Bullet_1" id="1005680"><span class="BulletSymbol">&#x2022; </span>If preset, configure and enable all needed Proxy caches as described in <a  href="#XREF_40254__Proxy_cache_configuration22" style="color:#0000ff;">“Proxy cache configuration”</a>.</p><p class="Bullet_1" id="1006522"><span class="BulletSymbol">&#x2022; </span>Read register bit DCEUSFMAR[MntOpActv] to verify the DCE Snoop Filter RAM is initialized.</p><p class="Bullet_1" id="1007004"><span class="BulletSymbol">&#x2022; </span>Enable&#47;disable EVENTI and EVENTO port as described in<a href="../Protocols_and_Interfaces/Supported_Protocols.htm#XREF_97266__2_2_10_WFE_Wakeup_Event_Signaling_Support20" style="font-family : Georgia ; font-weight:normal;font-style:Italic;font-size : 10.00pt;text-decoration:none;text-transform:none;font-stretch:normal;color:#0000ff;background-color:transparent;letter-spacing : 0.00em;"> WFE Wakeup Event Signaling Support</a>  if present with XAIUUTCR, CAIUUTCR, and DCEUTCR EventDisable field.</p><p class="Bullet_1" id="1004192"><span class="BulletSymbol">&#x2022; </span>Transition CAIUs to Coherent state by the SYSCOREQ and SYSCOACK interface if present or Ncore CSRs to trigger the internal mechanism, this is described in<a  href="#XREF_35862__CAIU_Coherence_transition_mechanism22" style="font-family : Georgia ; font-weight:normal;font-style:Italic;font-size : 10.00pt;text-decoration:none;text-transform:none;font-stretch:normal;color:#0000ff;background-color:transparent;letter-spacing : 0.00em;"> CAIU Coherence transition mechanism</a>.</p><p class="Bullet_1" id="1007030"><span class="BulletSymbol">&#x2022; </span>Optional&#x3A; the timeout has already default value but depending of the traffic and design implementation, we recommend to customize correctly the timeout register value by step of 4,&#x30;&#x30;&#x30; clocks cycles of&#x3A;</p><p class="Bullet_2" id="1007031"><span class="BulletSymbol"> &#x2D; </span>xAIUTOCR&#x3A; transaction timeout value. In case of huge AXI burst or high traffic on many agents, we recommend reviewing this value.</p><p class="Bullet_2" id="1007032"><span class="BulletSymbol"> &#x2D; </span>xAIUEHTOCR&#x3A; XAIU Event Handshake Timeout value depending on your design reaction time.</p><p class="Bullet_2" id="1007033"><span class="BulletSymbol"> &#x2D; </span>xAIUSEPTOCR &#x26; xAIUSCPTOCR are internal Ncore timeout that do not need to be updated.</p><p class="Bullet_1" id="1007026"><span class="BulletSymbol">&#x2022; </span>Optional&#x3A; Set up quality of service QOS as described in <a href="../Protocols_and_Interfaces/Supported_Protocols.htm#XREF_93589__2_2_7_Quality_of_Service_Support20" style="font-family : Georgia ; font-weight:normal;font-style:Italic;font-size : 10.00pt;text-decoration:none;text-transform:none;font-stretch:normal;color:#0000ff;background-color:transparent;letter-spacing : 0.00em;"> Quality of Service Support</a>.</p><p class="BodyAfterHead" id="1001763">If the Ncore system is configured with a Boot Region then the above steps can be part of the boot code, in this case Boot Region can be the first access to load the boot code.</p><p class="Bullet_1" id="1007174"><span class="BulletSymbol">&#x2022; </span>Restriction&#x3A; access to the Boot Region memory space only with non&#x2D;coherent transactions.</p><p class="Heading3" id="1003352"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_61665__Ncore_Component_Discovery22" name="XREF_61665__Ncore_Component_Discovery22">Ncore Component Information </a></p><p class="Body" id="1003353"><a id="1092_Body_1003353" name="1092_Body_1003353"></a>Ncore component discovery involves following steps at the designated CAIU&#47;NCAIU. All read &#x26; write operations here are at the NRS base address. Complete register map configuration is available in the reports folder when RTL is generated. </p><p class="Bullet_1" id="1003354"><span class="BulletSymbol">&#x2022; </span>Read register at RP <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>x<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> and register address offset <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>x<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>&#160;i.e., at address bits [19&#x3A;<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>] as zero; this will read xIDR register of the AIU providing the following information&#x3A;</p><p class="Bullet_2" id="1003355"><span class="BulletSymbol"> &#x2D; </span>AIUs register page number (RPN)</p><p class="Bullet_2" id="1003356"><span class="BulletSymbol"> &#x2D; </span>Ncore register region identifier (NRRI), currently set to zero </p><p class="Bullet_2" id="1003357"><span class="BulletSymbol"> &#x2D; </span>Ncore unit ID, this uniquely identifies an Ncore unit within its type </p><p class="Bullet_1" id="1003358"><span class="BulletSymbol">&#x2022; </span>Read register GRBUNRRUCR at NRRI identified in the previous register, RP <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>xFF and address offset <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>xFF8. This register will identify the number of different Ncore components which include AIUs, DCEs, DMIs, DIIs, and DVEs. RPs to Ncore component mapping is shown in (NRS section 3.2).</p><p class="Bullet_1" id="1003404"><span class="BulletSymbol">&#x2022; </span>Step through all Ncore component xIDR registers (register address offset <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>x<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>) and xINFO registers (register address offset <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>xFFC) starting form RPN <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>.</p><p class="Body" id="1007234"><div align="left"><table class="note" style="max-width: 100% ;height: auto;"><col width="67.13px"/><col width="403.12px"/><tr height="173.33px"><td><p class="aaNote" id="1007252">NOTE&#x3A;</p></td><td><p class="CellBody" id="1007254" style="font-size : 10.00pt;">Register access is restricted to NRS region access  (xAIUNRSAR[&#x30;] set to 1 the agent can access to NRS region) , only secure access (f&#x30;r AXI, ACE request, AxPROT[1] attribute set to &#x30; and for CHI request, NS attributes  attribute set to &#x30;), 4&#x2D;byte&#x2D;aligned address, 4&#x2D;byte size, non&#x2D;coherent&#x2D;address space, device&#x2D;transaction access (as per AxCache bits on AXI&#47;ACE, or SnpAttr bit on CHI). For CHI, the Order bits must indicate Endpoint order.</p><p class="CellBody" id="1007283" style="font-size : 10.00pt;">Any other access format will return an error. Access to an undefined RPN will return an error. Reserved registers within a valid RPN are treated as read as zero and write ignore.</p></td></tr></table></div></p><p class="Heading3" id="1003417"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_33209__Address_space_configuration22" name="XREF_33209__Address_space_configuration22">Address space configuration </a></p><p class="Body" id="1003419"><a id="1092_Body_1003419" name="1092_Body_1003419"></a>All AIUs and DCEs in the Ncore system must be configured with the same peripheral and memory address space configuration. This involves two main configuration steps as following&#x3A;</p><p class="Bullet_1" id="1003421"><span class="BulletSymbol">&#x2022; </span>DMI interleaving configuration, this requires configuring the following two registers.</p><p class="Bullet_2" id="1003422"><span class="BulletSymbol"> &#x2D; </span>xAMIGR must be configured to select desired MIGS, by default MIGS <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> is selected.</p><p class="Bullet_2" id="1003423"><span class="BulletSymbol"> &#x2D; </span>xMIFSR must be configured to select desired interleaving function i.e., address bits used for DMI interleaving, by default option <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> is selected.</p><p class="Bullet_1" id="1003424"><span class="BulletSymbol">&#x2022; </span>GPAS configuration, this requires configuring following 3 registers per address region&#x3A;</p><p class="Bullet_2" id="1003425"><span class="BulletSymbol"> &#x2D; </span>xGPRAR must be configured with attributes of the address region, these include.</p><p class="Bullet_1" id="1003426"><span class="BulletSymbol">&#x2022; </span>Home unit type (HUT), this specifies type of memory. System memory is mapped to a DMI and peripheral memory is mapped to a DII.</p><p class="Bullet_1" id="1003427"><span class="BulletSymbol">&#x2022; </span>Home unit identifier (HUI), this specifies target DMI or DII. In the case of DII the Nunit ID must be specified and in the case of DMI MIG number within the selected MIGS in xAMIGR must be specified.</p><p class="Bullet_1" id="1003428"><span class="BulletSymbol">&#x2022; </span>Size, this is specified as a binary number from <span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> to 4&#x30; from which the region size is calculated as (size of IG) &#x2A; 2^(size+12) bytes. Here size of IG is the number of DMIs within the selected MIG. It is always 1 for DII. </p><p class="Bullet_2" id="1003429"><span class="BulletSymbol"> &#x2D; </span>xGPRBLR must be configured with lower order address bits 43&#x3A;12 of the base address of the region.</p><p class="Bullet_2" id="1003430"><span class="BulletSymbol"> &#x2D; </span>xGPRBHR must be configured with higher order address bits of the base address of the region.</p><p class="Bullet_1" id="1004216"><span class="BulletSymbol">&#x2022; </span>ReadID&#47;WriteID, this is applicable only to NCAIUs and specifies ordering override. When these bits are set individually or together respective read or write channel Same AXI&#x2D;ID ordering is ignored when transactions are issued into the Ncore system by the AIU. AXI&#x2D;ID ordering protocol at the Native interface is honored </p><p class="Bullet_1" id="1004217"><span class="BulletSymbol">&#x2022; </span>Policy, this is applicable only to NCAUs and specifies the ordering policy followed by DMI&#47;DII at the bottom of the Ncore. For details on the policies, refer to the section,<a href="../Protocols_and_Interfaces/Supported_Protocols.htm#XREF_52825__2_2_6_Ordering_Support20" style="font-family : Georgia ; font-weight:normal;font-style:Italic;font-size : 10.00pt;text-decoration:none;text-transform:none;font-stretch:normal;color:#0000ff;background-color:transparent;letter-spacing : 0.00em;"> Ordering Support</a>.</p><p class="Bullet_1" id="1005217"><span class="BulletSymbol">&#x2022; </span>If present, configure address translation registers &#x3C;specify register name&#x3E; in DMI&#47;DII.</p><p class="Body" id="1004257">An example address space configuration is shown in Appendix A. </p><p class="Heading3" id="1004279"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_59451__Error_Detection_and_Reporting_configuration22" name="XREF_59451__Error_Detection_and_Reporting_configuration22">Error Detection and Reporting configuration</a></p><p class="BodyAfterHead" id="1004337"><a id="1092_BodyAfterHead_1004337" name="1092_BodyAfterHead_1004337"></a>Following steps must be followed to configure error detection and reporting for each Ncore unit&#47;component&#x3A;</p><p class="Bullet_1" id="1004339"><span class="BulletSymbol">&#x2022; </span>Enable uncorrectable error detection by setting the appropriate error detection enable bits in xUEDR register of all Ncore units.</p><p class="Bullet_1" id="1004361"><span class="BulletSymbol">&#x2022; </span>If desired enable uncorrectable error interrupts by setting the appropriate error interrupt enable bit in xUEIR register of all Ncore units.</p><p class="Bullet_1" id="1004366"><span class="BulletSymbol">&#x2022; </span>Configure the correctable error control register xCECR to enable correctable error detection, interrupt and update the threshold as needed.</p><p class="Bullet_1" id="1004371"><span class="BulletSymbol">&#x2022; </span>If desired timeout error threshold can be updated or disabled at xTOCR register of all Ncore units.</p><p class="Heading3" id="1003507"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_40254__Proxy_cache_configuration22" name="XREF_40254__Proxy_cache_configuration22">Proxy cache configuration</a></p><p class="Body" id="1003509"><a id="1092_Body_1003509" name="1092_Body_1003509"></a>Following steps must be followed to configure and enable proxy cache&#x3A;</p><p class="Bullet_1" id="1003510"><span class="BulletSymbol">&#x2022; </span>Read register XAIUPCISR to verify both tag and data RAM are initialized.</p><p class="Bullet_1" id="1003511"><span class="BulletSymbol">&#x2022; </span>Configure register XAIUPCTCR to enable the proxy cache in two steps&#x3A;</p><p class="Bullet_2" id="1003512"><span class="BulletSymbol"> &#x2D; </span>Enable cache look up by setting LookupEn</p><p class="Bullet_2" id="1003513"><span class="BulletSymbol"> &#x2D; </span>Enable cache allocation by setting AllocEn</p><p class="Heading3" id="1003515"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_69419__SMC_configuration22" name="XREF_69419__SMC_configuration22">SMC configuration</a></p><p class="Body" id="1003517"><a id="1092_Body_1003517" name="1092_Body_1003517"></a>Following steps must be followed to configure and enable SMC.</p><p class="Bullet_1" id="1003518"><span class="BulletSymbol">&#x2022; </span>Read register DMIUSMCISR to verify the tag RAM is initialized.</p><p class="Bullet_1" id="1003519"><span class="BulletSymbol">&#x2022; </span>Configure register DMIUSMCAPR to specify desired cache allocation policy.</p><p class="Bullet_1" id="1006846"><span class="BulletSymbol">&#x2022; </span> Perform an &quot;Initialize all entries&quot; maintenance operation for the data array by writing the appropriate values to DMIUSMCMCR.</p><p class="Bullet_1" id="1006857"><span class="BulletSymbol">&#x2022; </span> Read Maintenance Operation Active bit in DMIUSMCMAR until the bit equals zero.</p><p class="Bullet_1" id="1003520"><span class="BulletSymbol">&#x2022; </span>If the DMI was configured with scratchpad support, then as desired enable the scratchpad as described in <a  href="#XREF_64848__Scratchpad_configuration22" style="color:#0000ff;">“Scratchpad configuration”</a>.</p><p class="Bullet_1" id="1003521"><span class="BulletSymbol">&#x2022; </span>If the DMI was configured with way partitioning capability, configure registers DMIUSMCWPCRx to set&#160;up way partitioning.</p><p class="Bullet_1" id="1003522"><span class="BulletSymbol">&#x2022; </span>Configure register DMIUSMCTCR to enable the SMC in two steps&#x3A;</p><p class="Bullet_2" id="1003523"><span class="BulletSymbol"> &#x2D; </span>Enable cache look up by setting LookupEn</p><p class="Bullet_2" id="1003524"><span class="BulletSymbol"> &#x2D; </span>Enable cache allocation by setting AllocEn</p><p class="Heading3" id="1003526"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_64848__Scratchpad_configuration22" name="XREF_64848__Scratchpad_configuration22">Scratchpad configuration  </a></p><p class="Body" id="1003528"><a id="1092_Body_1003528" name="1092_Body_1003528"></a>Following steps must be followed to configure and enable the scratchpad&#x3A;</p><p class="Bullet_1" id="1003529"><span class="BulletSymbol">&#x2022; </span>Configure DMIUSMCSPBR<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span>&#47;1 with desired scratchpad base address.</p><p class="Bullet_1" id="1003530"><span class="BulletSymbol">&#x2022; </span>Configure DMIUSMCPCR<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> with desired number of ways minus 1 to be used as scratchpad. Maximum value is limited by the total number of ways configured in the cache.</p><p class="Bullet_1" id="1003531"><span class="BulletSymbol">&#x2022; </span>Configure DMIUSMCPCR1 with scratchpad size. The size must be  specified in number of cache lines and must be an integer multiple of the number of sets in the cache, times the desired number of ways for scratchpad size, minus 1.</p><p class="Bullet_1" id="1003532"><span class="BulletSymbol">&#x2022; </span>Configure DMIUSMCPCR<span style="font-family : Consolas ; font-size : 9.00pt;">&#x30;</span> to enable scratchpad by setting ScPadEn.</p><p class="Heading3" id="1003503"><span style="padding-right:18pt ;">&#8203</span><a id="XREF_35862__CAIU_Coherence_transition_mechanism22" name="XREF_35862__CAIU_Coherence_transition_mechanism22">CAIU Coherence transition mechanism</a></p><p class="BodyAfterHead" id="1004417"><a id="1092_BodyAfterHead_1004417" name="1092_BodyAfterHead_1004417"></a>There are two ways to transition an AIU into coherent state&#x3A;</p><p class="BodyAfterHead" id="1007584">CHI CAIU, ACE5 CAIU, Proxy cache AXI5 NCAIU, and DVM capable ACE5&#x2D;Lite NCAIU can transition to coherent state via the SYSCOREQ and SYSCOACK protocol signaling as specified by ARM if the property is selected.</p><p class="BodyAfterHead" id="1004421">If the coherent agent does not have the SYSCO signaling, ACE CAIU, the AIUs can transition to coherent state via the provided NCORE AIU Transaction Activity Register.</p><p class="Bullet_1" id="1004423"><span class="BulletSymbol">&#x2022; </span>Read the xTAR register to confirm the current state of the AIU.</p><p class="Bullet_1" id="1004448"><span class="BulletSymbol">&#x2022; </span>Set SysCoAttach in xTCR to start the transition of the AIU into coherent state.</p><p class="Bullet_1" id="1004453"><span class="BulletSymbol">&#x2022; </span>Poll the xTAR register SysCoAttached field to confirm that the AIU is in the coherent state. </p><p class="Body" id="1005366">Transition to the detached state using CSR must follow the following steps&#x3A;</p><p class="Bullet_1" id="1005454"><span class="BulletSymbol">&#x2022; </span>Read the xTAR register to confirm the current state of the AIU.</p><p class="Bullet_1" id="1005477"><span class="BulletSymbol">&#x2022; </span>Set SysCoAttach to &apos;&#x30;&apos; in xTCR to start the transition of the AIU into detached &#47;Non&#x2D;coherent state.</p><p class="Bullet_1" id="1005482"><span class="BulletSymbol">&#x2022; </span>Poll the xTAR register SysCoAttached field to confirm that the AIU is in the detached&#47;Non&#x2D;coherent state.</p></div>
</body>
</html>