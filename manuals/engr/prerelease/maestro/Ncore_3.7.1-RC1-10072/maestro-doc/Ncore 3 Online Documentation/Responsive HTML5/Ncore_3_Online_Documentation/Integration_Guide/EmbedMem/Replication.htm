<html lang="en-US">
<head>
<meta content="IE=edge" http-equiv="X-UA-Compatible" />
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
<title>Replication</title>
<meta content="Replication" name="title_original" />
<link href="../../../rhstylemapping.css" rel="stylesheet" type="text/css" />
<link href="../Integration_Guide.css" rel="stylesheet" type="text/css" />
<link href="../../../editstyle.css" rel="stylesheet" type="text/css" /><script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker v17.0" />
<script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../../..";
gCommonRootRelPath = "../../..";
gTopicId = "2.2.2";
</script>
 <meta name="brsprev" value="Ncore_3_Online_Documentation/Integration_Guide/EmbedMem/SRAM_Test_Signals.htm">
 <meta name="brsnext" value="Ncore_3_Online_Documentation/Integration_Guide/EmbedMem/RTL_Prefixing.htm">
 <meta name="topic-breadcrumbs" content="Integration Guide > Select Maestro Flow Considerations" />
</head>
<body dir="ltr">
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>
<div><p class="Heading1" id="1048908"><a id="966_Heading1_1048908" name="966_Heading1_1048908"></a>3.3 Replication</p><p class="Body" id="1048909">Ncore units that have identical parameters will have an identical Verilog definition. To reduce design time, the Ncore unit can be physically implemented once and then saved as a physical block. This physical block can then be replicated in the design multiple times for reuse.</p><p class="Body" id="1048910">Every Ncore unit has a routing table which it uses to determine where it needs to send messages. These routing tables are unique for every unit, even if those units have identical parameters. The routing tables are stored in the packetizers associated with each unit. </p><p class="Body" id="1048911">To replicate identical Ncore units, you need to separate the Ncore unit base logic from its packetizers and depacketizers. In the GUI, Groups is used to accomplish this task. The grouping is done during the Topology Structure phase, prior to mapping.</p><p class="Heading2" id="1048966"><a id="966_Heading2_1048966" name="966_Heading2_1048966"></a>3.3.1 Replication Steps of Ncore Units</p><p class="Step1" id="1048913"><span class="StepNumber">1.  </span>Start in the Groups pane, right&#x2D;click, and create a new group. The group name will be the module name of the newly formed Verilog.<img align="" alt="replication-1" class="imageSettings" height="auto" preserveAspectRatio="none" src="../assets/replication-1.jpg" style="max-width: 100% ;height: auto;display:block;margin:auto;" width="356.903656" x="174.047160" y="6.066732" /></p><p class="step_contd" id="1048917"><span class="StepNumber">2.  </span>In the Project Tree, display the Ncore Units. Here, under CAIUs, you can see <span class="code" style="font-family : Courier New ; font-size : 9.00pt;">chi&#x2D;b_sk_&#x30;</span>. This is an NIU, a container for the CHI unit and its packetizer&#47;depacketizer, as seen in the following.<img align="" alt="replication-2" class="imageSettings" height="auto" preserveAspectRatio="none" src="../assets/replication-2.jpg" style="max-width: 100% ;height: auto;display:block;margin:auto;" width="218.683212" x="176.047160" y="7.900065" /></p><p class="step_contd" id="1048921"><span class="StepNumber">3.  </span>Move the packetizers&#47;depacketizers into the newly created group. This can be done several ways, but it is easy to multi&#x2D;select the objects, right&#x2D;click, and choose &#x201c;Assign to Group&#x201d;.<img align="" alt="replication-3" class="imageSettings" height="auto" preserveAspectRatio="none" src="../assets/replication-3.jpg" style="max-width: 100% ;height: auto;display:block;margin:auto;" width="367.352905" x="174.380473" y="6.900045" /></p><p class="step_contd" id="1048925"><span class="StepNumber">4.  </span>These are now moved in the Groups pane to the newly created group CHI_Packetizers..<img align="" alt="replication-4" class="imageSettings" height="auto" preserveAspectRatio="none" src="../assets/replication-4.jpg" style="max-width: 100% ;height: auto;display:block;margin:auto;" width="232.657333" x="176.047160" y="6.900045" /></p><p class="step_contd" id="1048929"><span class="StepNumber">5.  </span>Complete the flow as normal, and upon collateral generation, the two CHI units will share the same RTL and can be implemented as a replicated block.</p></div>
</body>
</html>