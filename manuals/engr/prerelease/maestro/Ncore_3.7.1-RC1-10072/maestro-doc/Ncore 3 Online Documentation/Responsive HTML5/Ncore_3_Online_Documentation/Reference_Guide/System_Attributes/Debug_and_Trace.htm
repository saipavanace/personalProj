<html lang="en-US">
<head>
<meta content="IE=edge" http-equiv="X-UA-Compatible" />
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
<title>Debug_and_Trace</title>
<meta content="Debug and Trace" name="title_original" />
<link href="../../../rhstylemapping.css" rel="stylesheet" type="text/css" />
<link href="../Reference_Guide.css" rel="stylesheet" type="text/css" />
<link href="../../../editstyle.css" rel="stylesheet" type="text/css" /><script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker v17.0" />
<script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../../..";
gCommonRootRelPath = "../../..";
gTopicId = "4.3.6";
</script>
 <meta name="brsprev" value="Ncore_3_Online_Documentation/Reference_Guide/System_Attributes/Error_Management.htm">
 <meta name="brsnext" value="Ncore_3_Online_Documentation/Reference_Guide/System_Attributes/Performance_Counters.htm">
 <meta name="topic-breadcrumbs" content="Reference Guide > System Attributes" />
</head>
<body dir="ltr">
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>
<div><p class="Heading1" id="985795"><a id="1094_Heading1_985795" name="1094_Heading1_985795"></a>3.1&#x30; Debug and Trace</p><p class="Body" id="985815">Ncore implements a debug and trace capability which adds three blocks, Trace Trigger, Trace Capture, and Trace Accumulate shown in the following figure. This capability is built on top of the existing networks and does not add any additional network wires.</p><p class="Figure" id="985830">Figure&#160;16. Debug and Trace Capability<img align="" alt="debugtrace" class="imageSettings" height="auto" preserveAspectRatio="none" src="../assets/debugtrace.jpg" style="max-width: 100% ;height: auto;display:block;margin:auto;" width="614.769592" x="8.000000" y="3.833313" /></p><p class="Heading2" id="985880"><a id="1094_Heading2_985880" name="1094_Heading2_985880"></a>3.1&#x30;.1 Trace Trigger</p><p class="BodyAfterHead" id="985904">Trace trigger adds the capability of marking a Native Interface transaction that is to be traced, It is present in each AIU. There are two classifications of marking a transaction to be traced.</p><p class="Step1" id="985905"><span class="StepNumber">1.  </span>Master initiated trace, this applies to CHI and ACE5&#x2D;Lite interfaces, which have trace signal capability on the interface</p><p class="step_contd" id="985923"><span class="StepNumber">2.  </span>Ncore initiated trace, this applies to all AIUs in Ncore, here Ncore provides CSRs which can be configured to mark desired transactions as trace transactions.</p><p class="Heading3" id="985900"><span style="padding-right:18pt ;">&#8203</span>Master Initiated Trace</p><p class="BodyAfterHead" id="985958">CHI and ACE5&#x2D;Lite interfaces have trace signaling capability, the master can identify transactions that are to be traced by appropriate interface signaling. Ncore honors this signaling and meets the interface requirements. In the case of ACE5&#x2D;Lite the more conservative approach is taken where all responses on the native interface propagate the trace signal, furthermore in the case of write channel the trace signaling on W channel is ignored and trace signaling on AW is considered</p><p class="Heading3" id="985983"><span style="padding-right:18pt ;">&#8203</span>Ncore Initiated Trace</p><p class="BodyAfterHead" id="986017">All AIUs in the Ncore system including those that support trace signaling have the capability to initiate transaction tracing using internal CSRs. An incoming transaction on the native interface is compared with the trace CSR settings, if there is a match the transaction is marked to be traced. Multiple numbers of CSR sets can be present as specified at build time. Different trace options are described below. In a single set of registers, all the options below can be enabled together, and they are checked with an AND option &#x2014;&#160;i.e., all enabled options should match the incoming transaction. Between register sets it is an OR operation. </p><p class="Bullet_1" id="986018"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">Trace Signal</span>&#x3A; Trace transactions that are marked by the native interface, if trace signaling capability is available on the Native interface.</p><p class="Bullet_1" id="986019"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">Address Range</span>&#x3A; Trace transactions that match the specified address range. One address range can be specified per register set.</p><p class="Bullet_1" id="986020"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">Op Code</span>&#x3A; Trace transactions that match the specified Op codes. Up to 4 op codes can be specified at a time per register set.</p><p class="Bullet_1" id="986021"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">Memory Attribute</span>&#x3A; Trace transactions that match the specified memory attributes on the native interface. This is MemAttr for CHI and AxCache for AXI&#47;ACE&#47;ACE&#x2D;Lite&#47;ACE5&#x2D;Lite. One memory attribute can be specified per register set.</p><p class="Bullet_1" id="986022"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">User Bits</span>&#x3A; Trace transactions that match the specified user bits on the native interface. One user bit value can be specified per register set. </p><p class="Bullet_1" id="986023"><span class="BulletSymbol">&#x2022; </span><span style="font-weight:Bold;">Target Type</span>&#x3A; Trace transactions that match the specified target type DMI&#47;DII. One target type can be specified per register set.</p><p class="Heading2" id="986013"><a id="1094_Heading2_986013" name="1094_Heading2_986013"></a>3.1&#x30;.2 Trace Capture and Accumulate </p><p class="BodyAfterHead" id="986075">Trace capture samples and packages packets that are marked to be traced. These packets are accumulated in the Trace Accumulate buffer and can be read out using CSR reads. The size of accumulate buffer is configurable at build time. Contact your AE for details on how to decode captured trace information. </p><p class="Heading2" id="993798"><a id="1094_Heading2_993798" name="1094_Heading2_993798"></a>3.1&#x30;.3 Secondary APB port support for CSR network</p><p class="BodyAfterHead" id="993845">If a system hang occurs, the user cannot dump the Debug and Trace register values from the AXI Initiator via the CSR network. An APB port is implemented by default to allow alternate access to all the Ncore Configuration and Status Registers which allows analysis of the Debug and Trace registers content  in order to isolate the root cause of the system hang. This port may be restricted for debug purposes only. If the same register is accessed concurrently via this debug APB port and the AXI Initiator CSR access, then the effect on the CSR is undefined. Ncore does not guarantee any ordering between the two different access points.</p></div>
</body>
</html>