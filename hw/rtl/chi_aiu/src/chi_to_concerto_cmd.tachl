//=============================================================================
// Copyright (C) 2017 Arteris, Inc.
// All rights reserved.
//=============================================================================
\jsbegin
// This module defines single transaction table entry
//
//=============================================================================
\jsend

\jsbegin
var u = obj.lib;

var opcode_width = u.getParam('opcode_width');
var cm_type  = u.getParam('cm_type');
var chi_cmd  = u.getParam('chi_cmd');
var chi_e    = u.getParam('chi_e');

\jsend

\jsbegin
u.port('input','chi_cmd', opcode_width);
u.port('output','conc_cmd', 8, 'reg') ;
\jsend

module \=u.getModuleName()=\ (\=u.getPorts('\n    ')=\);

always @(*) 
begin

    casez(chi_cmd)

    \=chi_cmd.ReadShared=\          : conc_cmd  = \=cm_type.CmdRdVld=\  ;
    \=chi_cmd.ReadClean=\           : conc_cmd  = \=cm_type.CmdRdCln=\  ;
    \=chi_cmd.ReadOnce=\            : conc_cmd  = \=cm_type.CmdRdNitc=\ ;
    \=chi_cmd.ReadNoSnp=\           : conc_cmd  = \=cm_type.CmdRdNC=\   ;
    \=chi_cmd.ReadUnique=\          : conc_cmd  = \=cm_type.CmdRdUnq=\  ;
    \=chi_cmd.CleanShared=\         : conc_cmd  = \=cm_type.CmdClnVld=\ ;
    \=chi_cmd.CleanInvalid=\        : conc_cmd  = \=cm_type.CmdClnInv=\ ;
    \=chi_cmd.MakeInvalid=\         : conc_cmd  = \=cm_type.CmdMkInv=\  ;
    \=chi_cmd.CleanUnique=\         : conc_cmd  = \=cm_type.CmdClnUnq=\ ;
    \=chi_cmd.MakeUnique=\          : conc_cmd  = \=cm_type.CmdMkUnq=\  ;
    \=chi_cmd.Evict=\               : conc_cmd  = \=cm_type.CmdEvict=\  ;
    \=chi_cmd.DVMOp=\               : conc_cmd  = \=cm_type.CmdDvmMsg=\ ;
    \=chi_cmd.WriteEvictFull=\      : conc_cmd  = \=cm_type.CmdWrEvict=\ ;
    \=chi_cmd.WriteCleanPtl=\       : conc_cmd  = \=cm_type.CmdWrClnPtl=\;
    \=chi_cmd.WriteCleanFull=\      : conc_cmd  = \=cm_type.CmdWrClnFull=\;
    \=chi_cmd.WriteUniquePtl=\      : conc_cmd  = \=cm_type.CmdWrUnqPtl=\ ;
    \=chi_cmd.WriteUniqueFull=\     : conc_cmd  = \=cm_type.CmdWrUnqFull=\;
    \=chi_cmd.WriteBackPtl=\        : conc_cmd  = \=cm_type.CmdWrBkPtl=\  ;
    \=chi_cmd.WriteBackFull=\       : conc_cmd  = \=cm_type.CmdWrBkFull=\ ;
    \=chi_cmd.WriteNoSnpPtl=\       : conc_cmd  = \=cm_type.CmdWrNCPtl=\  ;
    \=chi_cmd.WriteNoSnpFull=\      : conc_cmd  = \=cm_type.CmdWrNCFull=\ ;
//  \=chi_cmd.WriteUniqueFullStash=\: conc_cmd  = \=cm_type.CmdWrStshFull=\;
//  \=chi_cmd.WriteUniquePtlStash=\ : conc_cmd  = \=cm_type.CmdWrStshPtl=\ ;
    \=chi_cmd.StashOnceShared=\     : conc_cmd  = \=cm_type.CmdLdCchShd=\ ;
    \=chi_cmd.StashOnceUnique=\     : conc_cmd  = \=cm_type.CmdLdCchUnq=\;
    \=chi_cmd.ReadOnceCleanInvalid=\: conc_cmd  = \=cm_type.CmdRdNitcCI=\;
    \=chi_cmd.ReadOnceMakeInvalid=\ : conc_cmd  = \=cm_type.CmdRdNitcMI=\;
    \=chi_cmd.ReadNotSharedDirty=\  : conc_cmd  = \=cm_type.CmdRdNshDty=\;
    \=chi_cmd.CleanSharedPersist=\  : conc_cmd  = \=cm_type.CmdClnShPsist=\;
    \=chi_cmd.AtomicStore_ADD=\     : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_CLR=\     : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_EOR=\     : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_SET=\     : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_SMAX=\    : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_SMIN=\    : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_UMAX=\    : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicStore_UMIN=\    : conc_cmd  = \=cm_type.CmdWrAtm=\;
    \=chi_cmd.AtomicLoad_ADD=\      : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_CLR=\      : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_EOR=\      : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_SET=\      : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_SMAX=\     : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_SMIN=\     : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_UMAX=\     : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicLoad_UMIN=\     : conc_cmd  = \=cm_type.CmdRdAtm=\;
    \=chi_cmd.AtomicSwap=\          : conc_cmd  = \=cm_type.CmdSwapAtm=\; 
    \=chi_cmd.AtomicCompare=\       : conc_cmd  = \=cm_type.CmdCompAtm=\;
    \=chi_cmd.PrefetchTgt=\         : conc_cmd  = \=cm_type.CmdPref=\;

\js if (chi_e) {
    \=chi_cmd.MakeReadUnique=\               : conc_cmd  = \=cm_type.CmdMkRdUnq=\;
    \=chi_cmd.ReadPreferUnique=\             : conc_cmd  = \=cm_type.CmdRdNshDty=\;
    \=chi_cmd.WriteUniqueZero=\              : conc_cmd  = \=cm_type.CmdWrUnqFull=\;
    \=chi_cmd.WriteNoSnpZero=\               : conc_cmd  = \=cm_type.CmdWrNCFull=\;
    \=chi_cmd.WriteNoSnpFullCleanSh=\        : conc_cmd  = \=cm_type.CmdWrNCFullClnVld=\;
    \=chi_cmd.WriteNoSnpFullCleanInv=\       : conc_cmd  = \=cm_type.CmdWrNCFullClnInv=\;
    \=chi_cmd.WriteNoSnpFullCleanShPerSep=\  : conc_cmd  = \=cm_type.CmdWrNCFullClnShPsist=\;
    \=chi_cmd.WriteBackFullCleanSh=\         : conc_cmd  = \=cm_type.CmdWrBkFullClnVld=\;
    \=chi_cmd.WriteBackFullCleanInv=\        : conc_cmd  = \=cm_type.CmdWrBkFullClnInv=\;
    \=chi_cmd.WriteBackFullCleanShPerSep=\   : conc_cmd  = \=cm_type.CmdWrBkFullClnShPsist=\;
    \=chi_cmd.WriteCleanFullCleanSh=\        : conc_cmd  = \=cm_type.CmdWrClnFullClnVld=\;
    \=chi_cmd.WriteCleanFullCleanShPerSep=\  : conc_cmd  = \=cm_type.CmdWrClnFullClnShPsist=\;
    \=chi_cmd.CleanSharedPersistSep=\        : conc_cmd  = \=cm_type.CmdClnShPsist=\;
    \=chi_cmd.WriteEvictOrEvict=\	     : conc_cmd  = \=cm_type.CmdEvict=\; 
\js }

    default                         : conc_cmd  = 8'hff ;
    endcase
end

endmodule 
