\jsbegin
//=============================================================================
// Copyright (C) 2017 Arteris, Inc.
// All rights reserved.
//=============================================================================
// CHI RX RSP channel handler
//=============================================================================
\jsend

\jsbegin

var u = obj.lib;
var bundleFunctions = obj.userLib.bundleFunctions;

//=============================================================================
// Parameters
//=============================================================================
 
var rsp_flit_interface = u.getParam('RspInterface');
var chiInterface       = u.getParam('chiInterface');
var nCredits           = u.getParam('nCredits');

//=============================================================================
// Ports
//=============================================================================

u.port('input',  'clk',     1);
u.port('input',  'reset_n', 1);

u.port('input',  'sync_reset_n',         1);
u.port('input',  'rx_state_run',         1);
u.port('input',  'rx_state_deact',       1);
u.port('input',  'pma_asleep',           1);
u.port('output', 'all_credits_returned', 1); 

obj.lib.interface('chi_rx_rsp_', 'slave',  chiInterface.rx_rsp_);

obj.lib.interface('RXRSPFLIT_',  'master', rsp_flit_interface);

u.port('output', 'rsp_valid',1);

u.port('input',  'chk_err', 1);

\jsend

module \=u.getModuleName()=\ (\=u.getPorts('\n    ')=\);

//=============================================================================
// Link Credit Counter
// update counter when receiving credit or sending credit
//=============================================================================

wire [4:0] current_credit_count ;

wire credit_counter_en = chi_rx_rsp_lcrdv | chi_rx_rsp_flitv;

wire [4:0] credit_counter_in = current_credit_count + {4'b0, chi_rx_rsp_flitv} - {4'b0, chi_rx_rsp_lcrdv} ;

\=u.dffre(5, 'current_credit_count', 'credit_counter_in',  5+"'d"+nCredits , 'credit_counter_en', 'clk', 'reset_n')=\

//=============================================================================
// Link Credit Return
//=============================================================================

assign chi_rx_rsp_lcrdv = (current_credit_count != 5'b0) & sync_reset_n & rx_state_run & ~pma_asleep;

//=============================================================================
// Unpacking CHI flit to bit fields
//=============================================================================

// reversing interfaces as CHI spec puts flit with LSB first
\jsbegin
var reversed_rsp_intf = Object.keys(rsp_flit_interface).reverse().reduce(function (acc,val){ acc[val] = rsp_flit_interface[val]; return acc ; },{});
\jsend

assign \=bundleFunctions.packetizeBundle('RXRSPFLIT_', reversed_rsp_intf, [], obj.lib.bundle)=\ = chi_rx_rsp_flit;

assign rsp_valid = chi_rx_rsp_flitv & (RXRSPFLIT_OpCode != \=reversed_rsp_intf.OpCode=\'b0) & !chk_err; 

//=============================================================================
// all_credits_returned
//=============================================================================

assign all_credits_returned = rx_state_deact & (current_credit_count == 5'd\=nCredits=\);

endmodule

