//=============================================================================
// Copyright (C) 2018 Arteris, Inc.
// All rights reserved.
//=============================================================================
\jsbegin
// Filename: ncore3_addr_mod_div_tb.tachl
// Author: Boon Chuan
// Description: Testbench (TB) for Ncore3 Non-power-of-two arithmetic modules
//=========================================================================

var u = obj.lib;

u.paramDefault('wOffset', 'int', 6); // 2 ^ (granularity block offset) = 2^6 = 64 bytes

var wOffset = u.getParam('wOffset');

u.port('output', 'clk', 1, 'reg');
u.port('output', 'reset_n', 1, 'reg');
u.port('output', 'address', 52, 'reg');
u.port('output', 'my_address_offset'+wOffset+'_mod12', 4);

u.port('output', 'golden_address_offset'+wOffset+'_mod3', 2);
u.port('output', 'address_offset'+wOffset+'_mod3', 2);
for (var m=0; m < 3; m++) {
u.port('output', 'res'+m+'_mod3_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div3_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div3_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div3_offset'+wOffset+'_address_hi', 52-wOffset);
}

u.port('output', 'golden_address_offset'+wOffset+'_mod6', 3);
u.port('output', 'address_offset'+wOffset+'_mod6', 3);
for (var m=0; m < 6; m++) {
u.port('output', 'res'+m+'_mod6_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div6_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div6_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div6_offset'+wOffset+'_address_hi', 52-wOffset);
}

u.port('output', 'golden_address_offset'+wOffset+'_mod12', 4);
u.port('output', 'address_offset'+wOffset+'_mod12', 4);
for (var m=0; m < 12; m++) {
u.port('output', 'res'+m+'_mod12_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div12_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div12_offset'+wOffset+'_address', 52);
u.port('output', 'golden_sub'+m+'_div12_offset'+wOffset+'_address_hi', 52-wOffset);
}

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

\jsbegin
    var dut_ports = {};
 
    dut_ports['address'] = 'address';

    dut_ports['address_offset'+wOffset+'_mod3'] = 'address_offset'+wOffset+'_mod3';
        for (var m=0; m < 3; m++) {
    dut_ports['res'+m+'_mod3_offset'+wOffset+'_address'] = 'res'+m+'_mod3_offset'+wOffset+'_address';
    dut_ports['sub'+m+'_div3_offset'+wOffset+'_address'] = 'sub'+m+'_div3_offset'+wOffset+'_address';
        }

    dut_ports['address_offset'+wOffset+'_mod6'] = 'address_offset'+wOffset+'_mod6';
        for (var m=0; m < 6; m++) {
    dut_ports['res'+m+'_mod6_offset'+wOffset+'_address'] = 'res'+m+'_mod6_offset'+wOffset+'_address';
    dut_ports['sub'+m+'_div6_offset'+wOffset+'_address'] = 'sub'+m+'_div6_offset'+wOffset+'_address';
        }

    dut_ports['address_offset'+wOffset+'_mod12'] = 'address_offset'+wOffset+'_mod12';
        for (var m=0; m < 12; m++) {
    dut_ports['res'+m+'_mod12_offset'+wOffset+'_address'] = 'res'+m+'_mod12_offset'+wOffset+'_address';
    dut_ports['sub'+m+'_div12_offset'+wOffset+'_address'] = 'sub'+m+'_div12_offset'+wOffset+'_address';
        }

\jsend

    \=u.instance({
        instanceName: 'u_dut',
        moduleName: 'ncore3_addr_mod_div_dut',
        params : { wOffset : wOffset },
        ports: dut_ports
    })=\

initial begin
  clk = 1'b0;
  forever begin
      #5 clk = ~clk;
  end
end

initial begin
   reset_n = 1'b0;
   #15
   reset_n = 1'b1;
end

    \=u.instance({
        instanceName: 'u_mod12_offset'+wOffset,
        moduleName: 'ncore3_addr_mod12',
        params : { wOffset : wOffset },
        ports: {
                   address          : 'address',
                   result           : 'my_address_offset'+wOffset+'_mod12'
               },
    })=\


assign golden_address_offset\=wOffset=\_mod3  = address[51:\=wOffset=\] % 3;
assign golden_address_offset\=wOffset=\_mod6  = address[51:\=wOffset=\] % 6;
assign golden_address_offset\=wOffset=\_mod12 = address[51:\=wOffset=\] % 12;

\js for (var m=0; m < 3; m++) {
assign golden_sub\=m=\_div3_offset\=wOffset=\_address_hi = (address[51:\=wOffset=\] - \=52-wOffset=\'d\=m=\) / 3;
assign golden_sub\=m=\_div3_offset\=wOffset=\_address = {golden_sub\=m=\_div3_offset\=wOffset=\_address_hi, address[\=wOffset-1=\:0]};
\js }
\js for (var m=0; m < 6; m++) {
assign golden_sub\=m=\_div6_offset\=wOffset=\_address_hi = (address[51:\=wOffset=\] - \=52-wOffset=\'d\=m=\) / 6;
assign golden_sub\=m=\_div6_offset\=wOffset=\_address = {golden_sub\=m=\_div6_offset\=wOffset=\_address_hi, address[\=wOffset-1=\:0]};
\js }
\js for (var m=0; m < 12; m++) {
assign golden_sub\=m=\_div12_offset\=wOffset=\_address_hi = (address[51:\=wOffset=\] - \=52-wOffset=\'d\=m=\) / 12;
assign golden_sub\=m=\_div12_offset\=wOffset=\_address = {golden_sub\=m=\_div12_offset\=wOffset=\_address_hi, address[\=wOffset-1=\:0]};
\js }

always @ (posedge clk, negedge reset_n)
if (~reset_n) begin
    address <= 52'b1101_000110_0100_0000;
end else begin
    address <= address + 52'h40;
end

always @ (posedge clk, negedge reset_n)
if (~reset_n) begin
end else begin
   if (address_offset\=wOffset=\_mod3 != golden_address_offset\=wOffset=\_mod3) begin
        $display("ERROR! address_offset\=wOffset=\_mod3 EXPECTED %x ACTUAL %x", golden_address_offset\=wOffset=\_mod3, address_offset\=wOffset=\_mod3);
        $finish;
   end
   if (address_offset\=wOffset=\_mod6 != golden_address_offset\=wOffset=\_mod6) begin
        $display("ERROR! address_offset\=wOffset=\_mod6 EXPECTED %x ACTUAL %x", golden_address_offset\=wOffset=\_mod6, address_offset\=wOffset=\_mod6);
        $finish;
   end
   if (address_offset\=wOffset=\_mod12 != golden_address_offset\=wOffset=\_mod12) begin
        $display("ERROR! address_offset\=wOffset=\_mod12 EXPECTED %x ACTUAL %x", golden_address_offset\=wOffset=\_mod12, address_offset\=wOffset=\_mod12);
        $finish;
   end
\js for (var m=0; m < 3; m++) {
   if (golden_address_offset\=wOffset=\_mod3 == 2'd\=m=\) begin
      if (sub\=m=\_div3_offset\=wOffset=\_address != golden_sub\=m=\_div3_offset\=wOffset=\_address) begin
        $display("ERROR! sub\=m=\_div3_offset\=wOffset=\_address EXPECTED %x ACTUAL %x", golden_sub\=m=\_div3_offset\=wOffset=\_address, sub\=m=\_div3_offset\=wOffset=\_address);
        $finish;
      end
   end
\js }
\js for (var m=0; m < 6; m++) {
   if (golden_address_offset\=wOffset=\_mod6 == 3'd\=m=\) begin
      if (sub\=m=\_div6_offset\=wOffset=\_address != golden_sub\=m=\_div6_offset\=wOffset=\_address) begin
        $display("ERROR! sub\=m=\_div6_offset\=wOffset=\_address EXPECTED %x ACTUAL %x", golden_sub\=m=\_div6_offset\=wOffset=\_address, sub\=m=\_div6_offset\=wOffset=\_address);
        $finish;
      end
   end
\js }
\js for (var m=0; m < 12; m++) {
   if (golden_address_offset\=wOffset=\_mod12 == 4'd\=m=\) begin
      if (sub\=m=\_div12_offset\=wOffset=\_address != golden_sub\=m=\_div12_offset\=wOffset=\_address) begin
        $display("ERROR! sub\=m=\_div12_offset\=wOffset=\_address EXPECTED %x ACTUAL %x", golden_sub\=m=\_div12_offset\=wOffset=\_address, sub\=m=\_div12_offset\=wOffset=\_address);
        $finish;
      end
   end
\js }

end

endmodule
