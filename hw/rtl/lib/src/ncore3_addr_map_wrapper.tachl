\jsbegin
//=============================================================================
// Copyright(C) 2019 Arteris, Inc.
// All rights reserved
//=============================================================================
// Ncore 3 Address Map
// Author: Benjamin Madon
// ============================================================================
// Ncore 3 Address Map top-level block diagram
//
//                                          +------------+
// address -------+-----------------------> |            | addressing error (multihit, nohit)
//                |       |                  |            |--------------------->
// NRSBAR  -------|-------|----------------> |            | nrs_selfidr_hit
//                |       |                  |            |--------------------->
//                |       |                  |            |
//                |       |                  |            | dii_{nid,fid,valid}
//                +->     |                  |            |--------------------->
//                |       |                  |  Ncore3    | dmi_{nid,fid,valid}
// GPRAR, GPRBAR -|-------|----------------> |            |--------------------->
//  [n]     [n]   |       |      |           | addr_map   | dce_{nid,fid,valid}
//                |       |      |           |            |--------------------->
//                |       |      |           |            |
//                |       |      |           |            | Note:
// address        +-------|----------------> |            | dii_nid=0..nDiis-1
//                        |      |           |            | dmi_nid=0..nDmis-1
// BRAR, BRBAR -----------|------|---------> |            | dce_nid=0..nDces-1
//FUnitIdArray(DMI,DII,DCE)------|---------> |            |         
//                        |      |           +------------+
//                        |      |                                              
//                        |      |                                              
//                        |      |                                              
//                        |      |                                                                                                      
//                        |      |                                                                                                      
//                        |      |           +------------+
//                        |      |           |            |
//                        |      |           |  Ncore3    |
//                        |      |           |            |
//                        |      |           | addr_map_  |
//                        |      |           | global |
//                        |      |           |            | giu{LinkId,chipletId,valid}                                                         
//                        |      +---------> |            |--------------------->
//                        |                  |            |
//                        |                  |            | 
//                        |                  |            |      
//                        +----------------> |            |
//                                           |            |
//                                           +------------+
// ============================================================================

var u = obj.lib;

var utilFunctions = obj.userLib;

// ============================================================================
// Parameters
// ============================================================================

u.paramDefault('useCsrAccess', 'int', 0);
u.paramDefault('usePcieOrder', 'int', 0);
u.paramDefault('useNc',        'int', 0);
u.paramDefault('useNsx',       'int', 0);
u.paramDefault('useAMIFR_A16W_A8W', 'int', 0);

u.paramDefault('instantiator', 'string', 'aiu'); // 'aiu', 'dce'

u.paramDefault('wSysAddr', 'int', 52);
u.paramDefault('nGPRA',    'int', 4);
u.paramDefault('wFUnitId', 'int', 6);
u.paramDefault('nDmis', 'int', 4);
u.paramDefault('nDiis', 'int', 2);
u.paramDefault('nDces', 'int', 2);
u.paramDefault("InstanciateGlobalAddrMap",'int',0);
//
// The dmiIGSV is a vector (i.e. array) of Interleave Group Set (IGS).
// Each Interleave Group Set contains one or more Interleave Groups (IG).
// Each Interleave Group is a vector of DMIIDs.
//
u.paramDefault('dmiIGSV', 'array',
    [ {IGV : [ {DMIIDV:[0]}, {DMIIDV:[1,2]}, {DMIIDV:[3,4,5]}, {DMIIDV:[6,7,8,9]} ] },
      {IGV : [ {DMIIDV:[0,1,2]}, {DMIIDV:[3,4,5,6]}, {DMIIDV:[7]}, {DMIIDV:[8,9]} ] }
    ] );

//
// The dmi2WIFV is a vector (i.e. array) of 2-Way Interleave Functions.
// Each Interleave Function comprises an array of integer for primary bits, and an array of string for secondary bits.
//
u.paramDefault('dmi2WIFV', 'array',
    [ {PrimaryBits : [7], SecondaryBits: ["'h10000000"]},
      {PrimaryBits : [9], SecondaryBits: ["'h40000000"]}
    ] );

//
// The dmi3WIFV is a vector (i.e. array) of 3-Way Interleave Functions.
// Each Interleave Function comprises an array of integer for primary bits, and an array of string for secondary bits.
//
u.paramDefault('dmi3WIFV', 'array',
    [ {PrimaryBits : [7,  8], SecondaryBits: ["'h10000000", "'h20000000"]},
      {PrimaryBits : [9, 10], SecondaryBits: ["'h40000000", "'h80000000"]}
    ] );

//
// The dmi4WIFV is a vector (i.e. array) of 4-Way Interleave Functions.
// Each Interleave Function comprises an array of integer for primary bits, and an array of string for secondary bits.
//
u.paramDefault('dmi4WIFV', 'array',
    [ {PrimaryBits : [7,  8], SecondaryBits: ["'h10000000", "'h20000000"]},
      {PrimaryBits : [9, 10], SecondaryBits: ["'h40000000", "'h80000000"]}
    ] );

//
// The dmi8WIFV is a vector (i.e. array) of 8-Way Interleave Functions.
// Each Interleave Function comprises an array of integer for primary bits, and an array of string for secondary bits.
//
u.paramDefault('dmi8WIFV', 'array',
    [ {PrimaryBits : [7,  8,  9], SecondaryBits: ["'h10000000", "'h20000000", "'h40000000"]},
      {PrimaryBits : [9, 10, 11], SecondaryBits: ["'h40000000", "'h80000000", "'h20000000"]}
    ] );

//
// The dmi16WIFV is a vector (i.e. array) of 16-Way Interleave Functions.
// Each Interleave Function comprises an array of integer for primary bits, and an array of string for secondary bits.
//
u.paramDefault('dmi16WIFV', 'array',
    [ {PrimaryBits : [6,  7,  8,  9], SecondaryBits: ["'h10000000", "'h20000000", "'h40000000", "'h04000000"]},
      {PrimaryBits : [9, 10, 11, 12], SecondaryBits: ["'h40000000", "'h80000000", "'h20000000", "'h08000000"]}
    ] );

//
// Only support one interleaved group for DCE.
// ===========================================
// Array of integers for primary bits for DCE.
//
u.paramDefault('DcePrimaryBits', 'array', [7, 8]);
//
// Array of strings for secondary bits for DCE.
//
u.paramDefault('DceSecondaryBits', 'array', ["'h80000000", "'h80000000"]);


var p = u.getParam()
var optimize_ports = u.getParam("optimize_ports");
var useNc        = u.getParam('useNc');
var useNsx       = u.getParam('useNsx');
var useCsrAccess = u.getParam('useCsrAccess');
var usePcieOrder = u.getParam('usePcieOrder');

var useAMIFR_A16W_A8W = u.getParam('useAMIFR_A16W_A8W');

var instantiator = u.getParam('instantiator');

var wSysAddr = u.getParam('wSysAddr');
var nGPRA    = u.getParam('nGPRA');
var wFUnitId = u.getParam('wFUnitId');
var nDmis    = u.getParam('nDmis');
var nDiis    = u.getParam('nDiis');
var nDces    = u.getParam('nDces');

var dmiIGSV  = u.getParam('dmiIGSV');

/* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (u.getParam('dmi2WIFV') === undefined) {
var dmi2WIFV = [];
} else {
var dmi2WIFV = u.getParam('dmi2WIFV');
}

/* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (u.getParam('dmi3WIFV') === undefined) {
var dmi3WIFV = [];
} else {
var dmi3WIFV = u.getParam('dmi3WIFV');
}

/* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (u.getParam('dmi4WIFV') === undefined) {
var dmi4WIFV = [];
} else {
var dmi4WIFV = u.getParam('dmi4WIFV');
}

/* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (u.getParam('dmi8WIFV') === undefined) {
var dmi8WIFV = [];
} else {
var dmi8WIFV = u.getParam('dmi8WIFV');
}

/* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (u.getParam('dmi16WIFV') === undefined) {
var dmi16WIFV = [];
} else {
var dmi16WIFV = u.getParam('dmi16WIFV');
}

var dce_PriSubDiagAddrBits = u.getParam('DcePrimaryBits');
var dce_SecSubRows         = u.getParam('DceSecondaryBits');

/* istanbul ignore else env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
if (dmiIGSV.length > 0) {
    for (var s=0; s < dmiIGSV.length; s++) {
        /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
        if (dmiIGSV[s].IGV.length > nDmis) {
            console.log("Error: "+u.getModuleName()+" - dmiIGSV[s].IGV.length cannot be greater than nDmis !");
            throw "ERROR - "+u.getModuleName();
        }
        for (var i=0; i < dmiIGSV[s].IGV.length; i++) {
            /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
            if (dmiIGSV[s].IGV[i].DMIIDV.length < 1) {
                console.log("Error: "+u.getModuleName()+" - dmiIGSV[s].IGV[i].DMIIDV.length cannot be less than 1 !");
                throw "ERROR - "+u.getModuleName();
            }
        }
    }
}

// ============================================================================
// Ports
// ============================================================================
u.port("input","uId_my_chiplet_id",p.wChipletId);
u.port("input","uId_my_assembly_id",p.wAssemblyId);

u.port('input',  'address_valid',   1);
u.port('input',  'address',         wSysAddr);

    if (instantiator == 'dce') {

u.port('input',  'hexDceDmiVec', nDmis);
u.port('output', 'unconnected_dmi_access', 1);

    } else {

u.port('input', 'hexAiuDceVec', nDces);
u.port('input', 'hexAiuDmiVec', nDmis);
u.port('input', 'hexAiuDiiVec', nDiis);
u.port('output', 'unconnected_dce_access', 1);
u.port('output', 'unconnected_dmi_access', 1);
u.port('output', 'unconnected_dii_access', 1);

    }

    if (useCsrAccess) {
u.port('input',  'csr_access_nrs_valid', 1);
u.port('output', 'csr_access_nrs_error', 1);
    }

    if (instantiator == 'dce') {

    } else {
u.port('input',  'NRSBAR_BaseAddr', 32);
u.port('input',  'NRSBAR_DiiId',    4);
    }

    for (var i = 0; i < nGPRA; i++) {
u.port('input',  'GPRAR'+i+'_Valid',      1);
u.port('input',  'GPRAR'+i+'_HUT',        2);
u.port('input',  'GPRAR'+i+'_Size',       6);
u.port('input',  'GPRAR'+i+'_HomeUnitId', 5);
    if (usePcieOrder) {
u.port('input',  'GPRAR'+i+'_Order_Policy', 2);
u.port('input',  'GPRAR'+i+'_Order_WriteID', 1);
u.port('input',  'GPRAR'+i+'_Order_ReadID', 1);
u.port('input',  'GPRAR'+i+'_Order_Hazard', 1);
    }
    if (useNc) {
u.port('input',  'GPRAR'+i+'_NC', 1);
    }
    if (useNsx) {
u.port('input',  'GPRAR'+i+'_NSX', 2);
    }
//u.port('input',  'GPRAR'+i+'_DIGId',      3);
u.port('input',  'GPRBAR'+i+'_AddrLo',    32);
u.port('input',  'GPRBAR'+i+'_AddrHi',    8);
    }
    if (usePcieOrder) {
u.port('output',  'Order_Policy', 2);
u.port('output',  'Order_WriteID', 1);
u.port('output',  'Order_ReadID', 1);
u.port('output',  'Order_Hazard', 1);
    }
    if (useNc) {
u.port('output',  'GPRAR_NC', 1);
    }
    if (useNsx) {
u.port('output',  'GPRAR_NSX', 2);
    }

u.port('input',  'BRAR_Valid',      1);
u.port('input',  'BRAR_Size',       6);
u.port('input',  'BRAR_HUT',        2);
u.port('input',  'BRAR_HomeUnitId', 5);
//u.port('input',  'BRAR_DIGId',      3);
u.port('input',  'BRBAR_AddrLo',    32);
u.port('input',  'BRBAR_AddrHi',    8);
if (p.InstanciateGlobalAddrMap) {
u.port('input',  'DMIAMIGR_AMIGS',     4);
u.port('input',  'DMIAMIGR_Valid',     1);
u.port('input',  'DMIAMIFR_A16WIFId',  3);
u.port('input',  'DMIAMIFR_A8WIFId',   3);
u.port('input',  'DMIAMIFR_A4WIFId',   3);
u.port('input',  'DMIAMIFR_A3WIFId',   3);
u.port('input',  'DMIAMIFR_A2WIFId',   3);

u.port('input',  'GIUAMIGR_AMIGS',     4);
u.port('input',  'GIUAMIGR_Valid',     1);
u.port('input',  'GIUAMIFR_A16WIFId',  3);
u.port('input',  'GIUAMIFR_A8WIFId',   3);
u.port('input',  'GIUAMIFR_A4WIFId',   3);
u.port('input',  'GIUAMIFR_A3WIFId',   3);
u.port('input',  'GIUAMIFR_A2WIFId',   3);
} else  {
u.port('input',  'AMIGR_AMIGS',     4);
u.port('input',  'AMIGR_Valid',     1);

if (dmi16WIFV.length > 0) {
    u.port('input',  'AMIFR_A16WIFId',    3);
    }
    if (dmi8WIFV.length > 0) {
    u.port('input',  'AMIFR_A8WIFId',     3);
    }
    if (dmi4WIFV.length > 0) {
    u.port('input',  'AMIFR_A4WIFId',     3);
    }
    if (dmi3WIFV.length > 0) {
    u.port('input',  'AMIFR_A3WIFId',     3);
    }
    if (dmi2WIFV.length > 0) {
    u.port('input',  'AMIFR_A2WIFId',     3);
    }
}
    for (var i = 0; i < nDmis; i++) {
u.port('input',  'dmi'+i+'_f_unit_id', wFUnitId);
    }

if (instantiator == 'dce') {

} else {
    for (var i = 0; i < nDiis; i++) {
u.port('input',  'dii'+i+'_f_unit_id', wFUnitId);
    }
    for (var i = 0; i < nDces; i++) {
u.port('input',  'dce'+i+'_f_unit_id', wFUnitId);
    }
}

u.port('output', 'addressing_error_hit_multi', 1);
u.port('output', 'addressing_error_hit_none',  1);

u.port('output', 'dmi_f_unit_id',    wFUnitId);
u.port('output', 'dmi_id',           5);
u.port('output', 'dmi_id_valid',     1);
u.port('output', 'dmi_mig',          5);
u.port('output', 'size_of_ig',       4);
if (p.InstanciateGlobalAddrMap) {
u.port('output', 'remote_valid',     1);
u.port('output', 'remote_chipletId',     1);
u.port('output', 'remote_linkId',     1);
u.port('input',  'GPRAR'+i+'_LinkID', 5);
u.port('input',  'GPRAR'+i+'_Interleaving', 1);
u.port('output', 'remote_dii',     1);
}
if (instantiator == 'dce') {

} else {

u.port('output', 'dii_f_unit_id',    wFUnitId);
u.port('output', 'dii_id',           5);
u.port('output', 'dii_id_valid',     1);

u.port('output', 'dce_f_unit_id',    wFUnitId);
u.port('output', 'dce_id',           5);
u.port('output', 'dce_id_valid',     1);

u.port('output', 'nrs_selfidr_hit',  1);

}
u.port('output', 'nrs_region_hit',  1);
u.port('output', 'gpr_region_hit',  1);
u.port('output', 'bra_region_hit',  1);

\jsend

module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);




\jsbegin

var local_addr_map_ports = {};

local_addr_map_ports['address_valid'] = 'address_valid';
local_addr_map_ports['address']       = 'address'

    if (instantiator == 'dce') {

local_addr_map_ports['hexDceDmiVec'] =  'hexDceDmiVec';
local_addr_map_ports['unconnected_dmi_access'] ='unconnected_dmi_access';

    } else {

local_addr_map_ports['hexAiuDceVec'] = 'hexAiuDceVec';
local_addr_map_ports['hexAiuDmiVec'] = 'hexAiuDmiVec';
local_addr_map_ports['hexAiuDiiVec'] = 'hexAiuDiiVec';
local_addr_map_ports[ 'unconnected_dce_access'] =  'unconnected_dce_access';
local_addr_map_ports[ 'unconnected_dmi_access'] =  'unconnected_dmi_access';
local_addr_map_ports[ 'unconnected_dii_access'] =  'unconnected_dii_access';

    }

    if (useCsrAccess) {
local_addr_map_ports[ 'csr_access_nrs_valid'] ='csr_access_nrs_valid';
local_addr_map_ports[ 'csr_access_nrs_error'] ='csr_access_nrs_error';
    }

    if (instantiator == 'dce') {

    } else {
local_addr_map_ports[ 'NRSBAR_BaseAddr'] ='NRSBAR_BaseAddr';
local_addr_map_ports[ 'NRSBAR_DiiId'  ]  ='NRSBAR_DiiId'  ;
    }

    for (var i = 0; i < nGPRA; i++) {
local_addr_map_ports['GPRAR'+i+'_Valid'    ] ='GPRAR'+i+'_Valid'   ; 
local_addr_map_ports['GPRAR'+i+'_HUT'    ] ='GPRAR'+i+'_HUT'   ; 
local_addr_map_ports['GPRAR'+i+'_Size'   ] ='GPRAR'+i+'_Size'   ;
local_addr_map_ports['GPRAR'+i+'_HomeUnitId'] ='GPRAR'+i+'_HomeUnitId';
    if (usePcieOrder) {
local_addr_map_ports['GPRAR'+i+'_Order_Policy'] =   'GPRAR'+i+'_Order_Policy';
local_addr_map_ports['GPRAR'+i+'_Order_WriteID'] =   'GPRAR'+i+'_Order_WriteID';
local_addr_map_ports['GPRAR'+i+'_Order_ReadID'] =   'GPRAR'+i+'_Order_ReadID';
local_addr_map_ports['GPRAR'+i+'_Order_Hazard'] =   'GPRAR'+i+'_Order_Hazard';
    }
    if (useNc) {
local_addr_map_ports['GPRAR'+i+'_NC'] ='GPRAR'+i+'_NC';
    }
    if (useNsx) {
local_addr_map_ports['GPRAR'+i+'_NSX'] = 'GPRAR'+i+'_NSX';
    }
local_addr_map_ports['GPRBAR'+i+'_AddrLo'] = 'GPRBAR'+i+'_AddrLo';
local_addr_map_ports['GPRBAR'+i+'_AddrHi'] = 'GPRBAR'+i+'_AddrHi';
    }
    if (usePcieOrder) {
local_addr_map_ports['Order_Policy'  ] =  'Order_Policy'  ;
local_addr_map_ports['Order_WriteID'  ] =  'Order_WriteID' ;
local_addr_map_ports['Order_ReadID'  ] =  'Order_ReadID'  ;
local_addr_map_ports['Order_Hazard'  ] =  'Order_Hazard'  ;
    }
    if (useNc) {
local_addr_map_ports['GPRAR_NC'] = "GPRAR_NC";
    }
    if (useNsx) {
local_addr_map_ports['GPRAR_NSX'] = "GPRAR_NSX";
    }

local_addr_map_ports['BRAR_Valid']          ='BRAR_Valid';
local_addr_map_ports['BRAR_Size']           ='BRAR_Size';
local_addr_map_ports['BRAR_HUT']            ='BRAR_HUT' ;
local_addr_map_ports['BRAR_HomeUnitId' ]    ='BRAR_HomeUnitId';
local_addr_map_ports['BRBAR_AddrLo'    ]    ='BRBAR_AddrLo'   ;
local_addr_map_ports['BRBAR_AddrHi'    ]    ='BRBAR_AddrHi'   ;
if(p.InstanciateGlobalAddrMap){       
local_addr_map_ports['AMIGR_AMIGS'    ]     ='DMIAMIGR_AMIGS'  ;
local_addr_map_ports['AMIGR_Valid'    ]     ='DMIAMIGR_Valid'  ;
local_addr_map_ports['AMIFR_A16WIFId' ]     ='DMIAMIFR_A16WIFId';
local_addr_map_ports['AMIFR_A8WIFId'  ]     ='DMIAMIFR_A8WIFId';
local_addr_map_ports['AMIFR_A4WIFId'   ]    ='DMIAMIFR_A4WIFId' ;
local_addr_map_ports['AMIFR_A3WIFId'   ]    ='DMIAMIFR_A3WIFId' ;
local_addr_map_ports['AMIFR_A2WIFId'   ]    ='DMIAMIFR_A2WIFId' ;
} else {

local_addr_map_ports['AMIGR_AMIGS'    ]     ='AMIGR_AMIGS'  ;
local_addr_map_ports['AMIGR_Valid'    ]     ='AMIGR_Valid'  ;

if (dmi16WIFV.length > 0) {
    local_addr_map_ports['AMIFR_A16WIFId' ]     ='AMIFR_A16WIFId';
}
    if (dmi8WIFV.length > 0) {
        local_addr_map_ports['AMIFR_A8WIFId'  ]     ='AMIFR_A8WIFId';
    }
    if (dmi4WIFV.length > 0) {
        local_addr_map_ports['AMIFR_A4WIFId'   ]    ='AMIFR_A4WIFId' ;
    }
    if (dmi3WIFV.length > 0) {
        local_addr_map_ports['AMIFR_A3WIFId'   ]    ='AMIFR_A3WIFId' ;
    }
    if (dmi2WIFV.length > 0) {
        local_addr_map_ports['AMIFR_A2WIFId'   ]    ='AMIFR_A2WIFId' ;
    }
}
    for (var i = 0; i < nDmis; i++) {
local_addr_map_ports['dmi'+i+'_f_unit_id'] = 'dmi'+i+'_f_unit_id';
    }

if (instantiator == 'dce') {

} else {
    for (var i = 0; i < nDiis; i++) {
local_addr_map_ports['dii'+i+'_f_unit_id']= 'dii'+i+'_f_unit_id';
    }
    for (var i = 0; i < nDces; i++) {
local_addr_map_ports['dce'+i+'_f_unit_id'] = 'dce'+i+'_f_unit_id';
    }
}

local_addr_map_ports['addressing_error_hit_multi'   ] = 'addressing_error_hit_multi';
local_addr_map_ports['addressing_error_hit_none'    ] = 'addressing_error_hit_none' ;

local_addr_map_ports['dmi_f_unit_id'  ]     = 'dmi_f_unit_id';
local_addr_map_ports['dmi_id'         ]     = 'dmi_id'       ;
local_addr_map_ports['dmi_id_valid'   ]     = 'dmi_id_valid' ;
local_addr_map_ports['dmi_mig'        ]     = 'dmi_mig'      ;
local_addr_map_ports['size_of_ig'     ]     = 'size_of_ig'   ;

if (instantiator == 'dce') {

} else {

local_addr_map_ports['dii_f_unit_id'    ] = 'dii_f_unit_id' ;            
local_addr_map_ports['dii_id'           ] = 'dii_id'        ;        
local_addr_map_ports['dii_id_valid'     ] = 'dii_id_valid'  ;        
local_addr_map_ports['dce_f_unit_id'    ] = 'dce_f_unit_id' ;            
local_addr_map_ports['dce_id'           ] = 'dce_id'        ;        
local_addr_map_ports['dce_id_valid'     ] = 'dce_id_valid'  ;            
local_addr_map_ports['nrs_selfidr_hit'   ] ='nrs_selfidr_hit';       
local_addr_map_ports['nrs_region_hit'   ] = 'nrs_region_hit';            
local_addr_map_ports['gpr_region_hit'   ] = 'gpr_region_hit';            
local_addr_map_ports['bra_region_hit'   ] = 'bra_region_hit';            
}

\jsend

\=u.instance({
    instanceName: 'ncore3_addr_map',
    moduleName: 'ncore3_addr_map',
    params: p,
    verilogParams: {},
    ports: local_addr_map_ports 
    })=\

\jsbegin 

if(p.InstanciateGlobalAddrMap) {
 
var global_addr_map_ports = {}
global_addr_map_ports['address_valid']              ="address_valid";
global_addr_map_ports['address']                ="address";

global_addr_map_ports["uId_my_chiplet_id"  ]  = "uId_my_chiplet_id" ;
global_addr_map_ports["uId_my_assembly_id"  ]  ="uId_my_assembly_id";
        for (var i = 0; i < nGPRA; i++) {
    global_addr_map_ports['GPRAR'+i+'_Valid'    ] ='GPRAR'+i+'_Valid'   ; 
    global_addr_map_ports['GPRAR'+i+'_HUT'    ] ='GPRAR'+i+'_HUT'   ; 
    global_addr_map_ports['GPRAR'+i+'_Size'   ] ='GPRAR'+i+'_Size'   ;
    global_addr_map_ports['GPRAR'+i+'_HomeUnitId'] ='GPRAR'+i+'_HomeUnitId';
   global_addr_map_ports['GPRAR'+i+'_LinkID']        = "GPRAR"+i+"_LinkID";
   global_addr_map_ports['GPRAR'+i+'_Interleaving']        = "GPRAR"+i+"_Interleaving";
        if (usePcieOrder) {
    global_addr_map_ports['GPRAR'+i+'_Order_Policy'] =   'GPRAR'+i+'_Order_Policy';
    global_addr_map_ports['GPRAR'+i+'_Order_WriteID'] =   'GPRAR'+i+'_Order_WriteID';
    global_addr_map_ports['GPRAR'+i+'_Order_ReadID'] =   'GPRAR'+i+'_Order_ReadID';
    global_addr_map_ports['GPRAR'+i+'_Order_Hazard'] =   'GPRAR'+i+'_Order_Hazard';
        }
        if (useNc) {
    global_addr_map_ports['GPRAR'+i+'_NC'] ='GPRAR'+i+'_NC';
        }
        if (useNsx) {
    global_addr_map_ports['GPRAR'+i+'_NSX'] = 'GPRAR'+i+'_NSX';
        }
    global_addr_map_ports['GPRBAR'+i+'_AddrLo'] = 'GPRBAR'+i+'_AddrLo';
    global_addr_map_ports['GPRBAR'+i+'_AddrHi'] = 'GPRBAR'+i+'_AddrHi';
        }

    global_addr_map_ports['remote_valid'      ] =  "remote_valid"  ;
    global_addr_map_ports['remote_chipletId'  ] =  "remote_chipletId"   ;
    global_addr_map_ports['remote_linkId'     ] =  "remote_linkId" ;
    global_addr_map_ports['remote_dii']         =   "remote_dii"


    global_addr_map_ports['GIUAMIGR_AMIGS'    ]     ='GIUAMIGR_AMIGS'  ;
    global_addr_map_ports['GIUAMIGR_Valid'    ]     ='GIUAMIGR_Valid'  ;
    global_addr_map_ports['GIUAMIFR_A16WIFId' ]     ='GIUAMIFR_A16WIFId';
    global_addr_map_ports['GIUAMIFR_A8WIFId'  ]     ='GIUAMIFR_A8WIFId';
    global_addr_map_ports['GIUAMIFR_A4WIFId'   ]    ='GIUAMIFR_A4WIFId' ;
    global_addr_map_ports['GIUAMIFR_A3WIFId'   ]    ='GIUAMIFR_A3WIFId' ;
    global_addr_map_ports['GIUAMIFR_A2WIFId'   ]    ='GIUAMIFR_A2WIFId' ;
\jsend



    \=u.instance({
        instanceName: 'ncore3_addr_map_global',
        moduleName: 'ncore3_addr_map_global',
        params: p,
        verilogParams: {},
        ports: global_addr_map_ports 
        })=\

\jsbegin
}
\jsend

endmodule
