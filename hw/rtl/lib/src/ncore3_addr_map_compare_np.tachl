\jsbegin
//=============================================================================
// Copyright(C) 2019 Arteris, Inc.
// All rights reserved
//=============================================================================
// Ncore 3 Address Map Compare Address
// Author: Boon Chuan
// ============================================================================

var u = obj.lib;

// ============================================================================
// Ports
// ============================================================================

u.port('input',  'HUT',             1);
u.port('input',  'SizeOfIG',        4);
u.port('input',  'Size',            6);
u.port('input',  'BAR_AddrLo',      32);
u.port('input',  'BAR_AddrHi',      8);
u.port('output', 'compare_addr_lo', 52); // inclusive
u.port('output', 'compare_addr_hi', 52); // non-inclusive

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

\jsbegin
// =======================================================
// Wires
// =======================================================
\jsend

reg  [51:0] size_mask_lo;
wire [51:0] size_mask_lo_x1;
wire [51:0] size_mask_lo_x2;
wire [51:0] size_mask_lo_x3;
wire [51:0] size_mask_lo_x4;
wire [51:0] size_mask_lo_x6;
wire [51:0] size_mask_lo_x8;
wire [51:0] size_mask_lo_x12;
wire [51:0] size_mask_lo_x16;

reg  [51:0] size_x;
wire [51:0] size_x1;
wire [51:0] size_x2;
wire [51:0] size_x3;
wire [51:0] size_x4;
wire [51:0] size_x6;
wire [51:0] size_x8;
wire [51:0] size_x12;
wire [51:0] size_x16;

\jsbegin
// =======================================================
// Compare Address
// =======================================================
\jsend

assign size_mask_lo_x1  = { {40{1'b1}}, {12{1'b0}} } << Size;
assign size_mask_lo_x2  = size_mask_lo_x1 << 1'b1;
assign size_mask_lo_x3  = size_mask_lo_x1;
assign size_mask_lo_x4  = size_mask_lo_x1 << 2'b10;
assign size_mask_lo_x6  = size_mask_lo_x2;
assign size_mask_lo_x8  = size_mask_lo_x1 << 2'b11;
assign size_mask_lo_x12 = size_mask_lo_x4;
assign size_mask_lo_x16 = size_mask_lo_x1 << 3'b100;

assign size_x1  = { 39'b0, 1'b1, 12'b0 } << Size;
assign size_x2  = size_x1 << 1'b1;
assign size_x3  = size_x2 + size_x1;
assign size_x4  = size_x1 << 2'b10;
assign size_x6  = size_x4 + size_x2;
assign size_x8  = size_x1 << 2'b11;
assign size_x12 = size_x8 + size_x4;
assign size_x16 = size_x1 << 3'b100;

always @* begin
    case ({HUT, SizeOfIG})
        5'b01111 :  size_mask_lo = size_mask_lo_x16;
        5'b01011 :  size_mask_lo = size_mask_lo_x12;
        5'b00111 :  size_mask_lo = size_mask_lo_x8;
        5'b00101 :  size_mask_lo = size_mask_lo_x6;
        5'b00011 :  size_mask_lo = size_mask_lo_x4;
        5'b00010 :  size_mask_lo = size_mask_lo_x3;
        5'b00001 :  size_mask_lo = size_mask_lo_x2;
        default:    size_mask_lo = size_mask_lo_x1;
    endcase
end

always @* begin
    case ({HUT, SizeOfIG})
        5'b01111 :  size_x = size_x16;
        5'b00111 :  size_x = size_x8;
        5'b00101 :  size_x = size_x6;
        5'b00011 :  size_x = size_x4;
        5'b00010 :  size_x = size_x3;
        5'b00001 :  size_x = size_x2;
        default:    size_x = size_x1;
    endcase
end

assign compare_addr_lo = {BAR_AddrHi[7:0], BAR_AddrLo[31:0], 12'b0} & size_mask_lo;

wire [39:0] addr_hi = compare_addr_lo[51:12] + size_x[51:12];

assign compare_addr_hi = {addr_hi, 12'b0};

endmodule
