//=============================================================================
// Copyright (C) 2018 Arteris, Inc.
// All rights reserved.
//=============================================================================
\jsbegin
// Filename: ncore3_addr_mod_div_dut.tachl
// Author: Boon Chuan
// Description: Design Under Test (DUT) for Ncore3 Non-power-of-two arithmetic modules
//=========================================================================

var u = obj.lib;

u.paramDefault('wOffset', 'int', 6); // 2 ^ (granularity block offset) = 2^6 = 64 bytes

var wOffset = u.getParam('wOffset');

u.port('input',  'address', 52);

u.port('output', 'address_offset'+wOffset+'_mod3', 2);
for (var m=0; m < 3; m++) {
u.port('output', 'res'+m+'_mod3_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div3_offset'+wOffset+'_address', 52);
}

u.port('output', 'address_offset'+wOffset+'_mod6', 3);
for (var m=0; m < 6; m++) {
u.port('output', 'res'+m+'_mod6_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div6_offset'+wOffset+'_address', 52);
}

u.port('output', 'address_offset'+wOffset+'_mod12', 4);
for (var m=0; m < 12; m++) {
u.port('output', 'res'+m+'_mod12_offset'+wOffset+'_address', 52);
u.port('output', 'sub'+m+'_div12_offset'+wOffset+'_address', 52);
}

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

//=============================================================================
//
// 12-way interleave
//
//=============================================================================

\jsbegin
    for (var m=0; m < 12; m++) {
\jsend

    \=u.instance({
        instanceName: 'u_sub'+m+'_div12_offset'+wOffset,
        moduleName: 'ncore3_addr_subn_div12',
        params : {
            wOffset : wOffset,
            nSubtract : m
        },
        ports: {
            address          : 'res'+m+'_mod12_offset'+wOffset+'_address',
            address_out      : 'sub'+m+'_div12_offset'+wOffset+'_address'
        }
    })=\

\jsbegin
    }
\jsend

    \=u.instance({
        instanceName: 'u_mod12_offset'+wOffset,
        moduleName: 'ncore3_addr_mod12',
        params : { wOffset : wOffset },
        ports: {
                   address          : 'address',
                   result           : 'address_offset'+wOffset+'_mod12'
               },
    })=\

\jsbegin
    for (var m=0; m < 12; m++) {
\jsend

    assign res\=m=\_mod12_offset\=wOffset=\_address = (address_offset\=wOffset=\_mod12 == 4'd\=m=\) ? address : 52'h0;

\jsbegin
    }
\jsend

//=============================================================================
//
// 6-way interleave
//
//=============================================================================

\jsbegin
    for (var m=0; m < 6; m++) {
\jsend

    \=u.instance({
        instanceName: 'u_sub'+m+'_div6_offset'+wOffset,
        moduleName: 'ncore3_addr_subn_div6',
        params : {
            wOffset : wOffset,
            nSubtract : m
        },
        ports: {
            address          : 'res'+m+'_mod6_offset'+wOffset+'_address',
            address_out      : 'sub'+m+'_div6_offset'+wOffset+'_address'
        }
    })=\

\jsbegin
    }
\jsend

    \=u.instance({
        instanceName: 'u_mod6_offset'+wOffset,
        moduleName: 'ncore3_addr_mod6',
        params : { wOffset : wOffset },
        ports: {
                   address          : 'address',
                   result           : 'address_offset'+wOffset+'_mod6'
               },
    })=\

\jsbegin
    for (var m=0; m < 6; m++) {
\jsend

    assign res\=m=\_mod6_offset\=wOffset=\_address = (address_offset\=wOffset=\_mod6 == 3'd\=m=\) ? address : 52'h0;

\jsbegin
    }
\jsend

//=============================================================================
//
// 3-way interleave
//
//=============================================================================

\jsbegin
    for (var m=0; m < 3; m++) {
\jsend

    \=u.instance({
        instanceName: 'u_sub'+m+'_div3_offset'+wOffset,
        moduleName: 'ncore3_addr_subn_div3',
        params : {
            wOffset : wOffset,
            nSubtract : m
        },
        ports: {
            address          : 'res'+m+'_mod3_offset'+wOffset+'_address',
            address_out      : 'sub'+m+'_div3_offset'+wOffset+'_address'
        }
    })=\

\jsbegin
    }
\jsend

    \=u.instance({
        instanceName: 'u_mod3_offset'+wOffset,
        moduleName: 'ncore3_addr_mod3',
        params : { wOffset : wOffset },
        ports: {
                   address          : 'address',
                   result           : 'address_offset'+wOffset+'_mod3'
               },
    })=\

\jsbegin
    for (var m=0; m < 3; m++) {
\jsend

    assign res\=m=\_mod3_offset\=wOffset=\_address = (address_offset\=wOffset=\_mod3 == 2'd\=m=\) ? address : 52'h0;

\jsbegin
    }
\jsend

endmodule
