\jsbegin
//=============================================================================
// Copyright(C) 2024 Arteris, Inc.
// All rights reserved
//=============================================================================
//giu_credit_return
//Interfaces :
// - Valid/ready flit interface input
// - current_beat input
// - Credit_return output
// Author: Benjamin Madon
//=============================================================================

var m = obj.userLib;
var utilFunctions   = m.lib_utils;
var newToOldStyleInterface	= m.newToOldStyleInterface.bind( null, m );

var u=obj.lib;

var p =u.getParam();


u.nInterfaces(p.interfaces);
\jsend


module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);


\jsbegin
for (var vc=0;vc<p.vc_descriptor["nVC"];vc++){
\jsend
       reg [\=p.interfaces["message_credit_return_VC_"+vc].params["wData"]-1=\ : 0]   message_credit_return_VC_\=vc=\_data_reg;
       reg  message_credit_return_VC_\=vc=\_valid_reg ;
\jsbegin
}
\jsend

always@ (*) begin
case (current_beat_in)
\jsbegin
for(var b = 0; b<p.packet_descriptor["NumberOfBeatPerContainer"];b++){
\jsend

\=p.interfaces.current_beat_.params["wIn"]=\'d\=b=\ : begin
\jsbegin
for (var vc=0;vc<p.vc_descriptor["nVC"];vc++){

    if (p.packet_descriptor["CreditReturnBits"][vc]["values"][0]==b){
    \jsend
        message_credit_return_VC_\=vc=\_data_reg = \=p.interfaces.cxs_out_deframer_in_["name"]=\data [\=p.packet_descriptor["CreditReturnBits"][vc]["values"][1]+p.interfaces["message_credit_return_VC_"+vc].params["wData"]-1=\:\=p.packet_descriptor["CreditReturnBits"][vc]["values"][1]=\];
        message_credit_return_VC_\=vc=\_valid_reg = \=p.interfaces.cxs_out_deframer_in_["name"]=\valid ;
    \jsbegin
    } else {
    \jsend
        message_credit_return_VC_\=vc=\_data_reg = \=p.interfaces["message_credit_return_VC_"+vc].params["wData"]=\'d0;
        message_credit_return_VC_\=vc=\_valid_reg = 1'b0;
    \jsbegin
    }
}
\jsend
end

\jsbegin
}
\jsend

default : begin
\jsbegin
for (var vc=0;vc<p.vc_descriptor["nVC"];vc++){
\jsend
        message_credit_return_VC_\=vc=\_data_reg = \=p.interfaces["message_credit_return_VC_"+vc].params["wData"]=\'d0;
        message_credit_return_VC_\=vc=\_valid_reg = 1'b0;
\jsbegin
}
\jsend
end
endcase
end
\jsbegin
for (var vc=0;vc<p.vc_descriptor["nVC"];vc++){
\jsend
    assign message_credit_return_VC_\=vc=\_data = message_credit_return_VC_\=vc=\_data_reg;
    assign message_credit_return_VC_\=vc=\_valid = message_credit_return_VC_\=vc=\_valid_reg;
\jsbegin
}
\jsend


endmodule