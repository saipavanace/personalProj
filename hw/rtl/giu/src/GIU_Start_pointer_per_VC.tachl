\jsbegin
//=============================================================================
// Copyright(C) 2024 Arteris, Inc.
// All rights reserved
//=============================================================================
//GIU
// Author: Benjamin Madon
//=============================================================================


var utilFunctions   = obj.userLib.lib_utils;
var m = obj.userLib;
var u=obj.lib;

var p =u.getParam();
u.nInterfaces(p.interfaces);
\jsend


module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);

\jsbegin
for (var i=0;i<p.NumberOfGranulePerBeat;i++){
\jsend
    
reg \=p.interfaces["start_ptr_vc_"+i].name=\out_int;

\jsbegin
}
\jsend

always@(*) begin
case (\=p.interfaces.current_beat_.name=\in) 
\jsbegin
for(var j=0;j<p.NumberOfBeatPerContainer;j++){
\jsend

    \=p.interfaces.current_beat_.params.wIn=\'d\=j=\ : begin
        \jsbegin
        for (var i=0;i<p.NumberOfGranulePerBeat;i++){
        \jsend
        
                                                            \=p.interfaces["start_ptr_vc_"+i].name=\out_int = \=p.interfaces["start_ptr_"+i].name=\out & \=m.log2ceil(p.nVC)=\'d\=p.VC=\ == \=p.interfaces["cxs_out_deframer_in_"].name=\data[ \=p.PayloadBits[j]+m.log2ceil(p.nVC)+i*p.GranuleSizeInBytes*8-1=\ :\=p.PayloadBits[j]+i*p.GranuleSizeInBytes*8=\ ];  
        \jsbegin
        }
        \jsend
                                                        end
\jsbegin
}
\jsend
endcase
end
\jsbegin
for (var i=0;i<p.NumberOfGranulePerBeat;i++){
\jsend
    
assign \=p.interfaces["start_ptr_vc_"+i].name=\out = \=p.interfaces["start_ptr_vc_"+i].name=\out_int;

\jsbegin
}
\jsend


endmodule