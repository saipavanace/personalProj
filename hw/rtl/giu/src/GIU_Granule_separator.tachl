\jsbegin
//=============================================================================
// Copyright(C) 2024 Arteris, Inc.
// All rights reserved
//=============================================================================
//GIU
// Author: Benjamin Madon
//=============================================================================


var utilFunctions   = obj.userLib.lib_utils;
var m = obj.userLib;
var u=obj.lib;

var p =u.getParam();
u.nInterfaces(p.interfaces);
\jsend


module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);


\jsbegin
 for (var j=0;j<p.NumberOfGranulePerBeat;j++){
\jsend                                                            
reg [\=p.GranuleSizeInBytes*8-1=\ : 0]   push_\=j=\_data_int;
\jsbegin                                                        
}
\jsend



always@(*) begin

case (\=p.interfaces.current_beat_.name=\in)

\jsbegin
for(var i=0;i<p.NumberOfBeatPerContainer;i++){
\jsend

    \=p.interfaces.current_beat_.params.wIn=\'d\=i=\ : begin

\jsbegin
                                                        for (var j=0;j<p.NumberOfGranulePerBeat;j++){
\jsend                                                            
                                                            push_\=j=\_data_int = \=p.interfaces.cxs_out_deframer_in_.name=\data [\=p.PayloadBits[i]+p.GranuleSizeInBytes*8*(j+1)-1=\ : \=p.PayloadBits[i]+p.GranuleSizeInBytes*8*j=\];
\jsbegin                                                        
                                                        }
\jsend
                                                        end
\jsbegin
}
\jsend
    endcase
end


\jsbegin
 for (var j=0;j<p.NumberOfGranulePerBeat;j++){
\jsend                                                            
assign push_\=j=\_data = push_\=j=\_data_int;
\jsbegin                                                        
}
\jsend




endmodule
