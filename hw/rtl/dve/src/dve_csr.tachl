\jsbegin
//=============================================================================
// Copyright(C) 2018 Arteris, Inc.
// All rights reserved
//=============================================================================
// DVE Control Status Registers
// Author: Boon Chuan
// Filename: dve_csr.tachl
//=============================================================================
\jsend

\jsbegin

var u = obj.lib;

var utilFunctions = obj.userLib;
var log2ceil = function(n) { return Math.ceil(Math.log(n)/Math.LN2); };

var nChiplets        = obj.lib.getParam('nChiplets');

var clkInterface               = obj.lib.getParam('clkInterface');
var clkInterfaceName           = obj.lib.getParam('clkInterfaceName');
var apbInterface               = obj.lib.getParam('apbInterface');
var apbInterfaceName           = obj.lib.getParam('apbInterfaceName');
var regProtectionInterface     = obj.lib.getParam('regProtectionInterface');
var regProtectionInterfaceName = obj.lib.getParam('regProtectionInterfaceName');
var regProtectionStyle         = obj.lib.getParam('regProtectionStyle');

var pmonCsrInputInterface          = obj.lib.getParam('pmonCsrInputInterface');
var nPerfCounters              = obj.lib.getParam('nPerfCounters');

var useSysEvtCoh     = obj.lib.getParam('useSysEvtCoh');
var wSnoopEnables    = obj.lib.getParam('wSnoopEnables');

var wResThreshold    = obj.lib.getParam('wResThreshold');
var CSR              = obj.lib.getParam('csr');
var useResiliency    = obj.lib.getParam('useResiliency');
var nDveAgents       = obj.lib.getParam('nDveAgents');
var nAius            = obj.lib.getParam('nAius');
var wFUnitId         = obj.lib.getParam('wFUnitId');
var wNUnitId         = obj.lib.getParam('wNUnitId');
var wRpn             = obj.lib.getParam('wRpn');
var wNrri            = obj.lib.getParam('wNrri');
var nMainTraceBufSize= obj.lib.getParam('nMainTraceBufSize');
var nTraceBanks        = obj.lib.getParam('nTraceBanks');
var wMainTraceBufSize  = Math.max(1, log2ceil(nMainTraceBufSize));
var wTraceBanks        = Math.max(1, log2ceil(nTraceBanks));

var nNUnitId         = Math.pow(2, wNUnitId);

var nDVEUSER         = Math.ceil(nAius / 32); // Number of DVEUSER registers

//
// generate csrHwPorts
//
var dveCSR           = new utilFunctions.CreateCSRObj(CSR);
var AWIDTH           = dveCSR.addressWidth;

var regs             = dveCSR.spaceBlock[0].registers;
var csrHwPorts       = dveCSR.getHWPorts();
var regFldsIn        = dveCSR.getRegFldsIn();
var regFldsOut       = dveCSR.getRegFldsOut();

var DVEUSER0_addr;
var DVEUSER1_addr;
var DVEUSER2_addr;
var DVEUSER3_addr;
var DVEUCRTR_ResThreshold_width;

var wEventTimeout    = u.getParam('wEventTimeout');
var wProtocolTimeout = u.getParam('wProtocolTimeout');
var nEventAgentsForSender = u.getParam('nEventAgentsForSender');

var rfSwWdata = {};
regs.forEach( function (r) {
    r.fields.forEach( function (f) {
    var rf        = r.name+"_"+f.name+"_"+"sw_wdata";
    if ( rf.includes("Rsv") ) {
    } else {
        rfSwWdata[rf] = f.bitWidth;
    }
    if (r.name == 'DVEUSER0') {
        DVEUSER0_addr = r.addressOffset;
    }
    // Ncore3.2 always has between 1 and 32 aius
    /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (r.name == 'DVEUSER1') {
        DVEUSER1_addr = r.addressOffset;
    }
    // Ncore3.2 always has between 1 and 32 aius
    /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (r.name == 'DVEUSER2') {
        DVEUSER2_addr = r.addressOffset;
    }
    // Ncore3.2 always has between 1 and 32 aius
    /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (r.name == 'DVEUSER3') {
        DVEUSER3_addr = r.addressOffset;
    }
    if (r.name == "DVEUCRTR" && f.name == "ResThreshold") {
        DVEUCRTR_ResThreshold_width = f.bitWidth;
    }

    });
});
var rfSwWr = regs.map( r => r.name+"_sw_wr");
var rfSwRd = regs.map( r => r.name+"_sw_rd");

Object.keys(rfSwWdata).forEach(rf => { csrHwPorts[rf] = rf; });

rfSwWr.forEach(r => { csrHwPorts[r] = r; });
rfSwRd.forEach(r => { csrHwPorts[r] = r; });

\jsend

\jsbegin
//=============================================================================
// Ports
//=============================================================================

obj.lib.port('input',  'clk',     1);
obj.lib.port('input',  'reset_n', 1);

obj.lib.port('input', 'my_n_unit_id', wNUnitId);
obj.lib.port('input', 'my_f_unit_id', wFUnitId);
obj.lib.port('input', 'my_csr_rpn',   wRpn);
obj.lib.port('input', 'my_csr_nrri',  wNrri);
    for (let i=0; i < nDveAgents; i++) {
obj.lib.port('input', 'dvm_aiu'+i+'_n_unit_id', wNUnitId);
    }

if (nChiplets > 1) {

obj.lib.port('input',  'csr_Chiplet0DvmDomain', 1);
obj.lib.port('input',  'csr_Chiplet1DvmDomain', 1);
obj.lib.port('input',  'csr_Chiplet2DvmDomain', 1);
obj.lib.port('input',  'csr_Chiplet3DvmDomain', 1);
obj.lib.port('input',  'csr_DvmDomain_DefaultConfigNumber', 3);
obj.lib.port('input',  'csr_Chiplet0CohDomain', 1);
obj.lib.port('input',  'csr_Chiplet1CohDomain', 1);
obj.lib.port('input',  'csr_Chiplet2CohDomain', 1);
obj.lib.port('input',  'csr_Chiplet3CohDomain', 1);
obj.lib.port('input',  'csr_CohDomain_DefaultConfigNumber', 3);

obj.lib.port('output', 'csr_Chiplet0DveFUnitId', 8);
obj.lib.port('output', 'csr_Chiplet1DveFUnitId', 8);
obj.lib.port('output', 'csr_Chiplet2DveFUnitId', 8);
obj.lib.port('output', 'csr_Chiplet3DveFUnitId', 8);

obj.lib.port('output', 'csr_Chiplet0DvmEn', 1);
obj.lib.port('output', 'csr_Chiplet1DvmEn', 1);
obj.lib.port('output', 'csr_Chiplet2DvmEn', 1);
obj.lib.port('output', 'csr_Chiplet3DvmEn', 1);

obj.lib.port('output', 'csr_RemoteDvmLinkIdChiplet0', 2);
obj.lib.port('output', 'csr_RemoteDvmLinkIdChiplet1', 2);
obj.lib.port('output', 'csr_RemoteDvmLinkIdChiplet2', 2);
obj.lib.port('output', 'csr_RemoteDvmLinkIdChiplet3', 2);

obj.lib.port('output', 'csr_Chiplet0CohEn', 1);
obj.lib.port('output', 'csr_Chiplet1CohEn', 1);
obj.lib.port('output', 'csr_Chiplet2CohEn', 1);
obj.lib.port('output', 'csr_Chiplet3CohEn', 1);

obj.lib.port('output', 'csr_RemoteSysCoLinkIdChiplet0', 2);
obj.lib.port('output', 'csr_RemoteSysCoLinkIdChiplet1', 2);
obj.lib.port('output', 'csr_RemoteSysCoLinkIdChiplet2', 2);
obj.lib.port('output', 'csr_RemoteSysCoLinkIdChiplet3', 2);

obj.lib.port('output', 'csr_Chiplet0EventEn', 1);
obj.lib.port('output', 'csr_Chiplet1EventEn', 1);
obj.lib.port('output', 'csr_Chiplet2EventEn', 1);
obj.lib.port('output', 'csr_Chiplet3EventEn', 1);

obj.lib.port('output', 'csr_RemoteSysEvLinkIdChiplet0', 2);
obj.lib.port('output', 'csr_RemoteSysEvLinkIdChiplet1', 2);
obj.lib.port('output', 'csr_RemoteSysEvLinkIdChiplet2', 2);
obj.lib.port('output', 'csr_RemoteSysEvLinkIdChiplet3', 2);

}

// APB interface

obj.lib.interface(apbInterfaceName, 'slave', apbInterface);

// CSR interface

obj.lib.port('input',  'csr_DvmTransActive',   1);
obj.lib.port('output', 'csr_DvmSnoopDisable',  nDveAgents);
obj.lib.port('output', 'csr_MaxOneSyncDVMOp',  1);
obj.lib.port('output', 'csr_DeallocEarly',  1);
obj.lib.port('output', 'csr_AceDvmOrder',  1);
obj.lib.port('output', 'csr_RelaxDvmSnoopPairs', 1);

obj.lib.port('output', 'csr_sys_evt_receiver_enable', 1);
obj.lib.port('input',  'csr_sys_evt_receiver_err_vld', 1);
obj.lib.port('input',  'csr_sys_evt_receiver_err_event_timeout', 1);

obj.lib.port('output', 'csr_event_timeout_value', wEventTimeout);
obj.lib.port('output', 'csr_protocol_timeout_value', wProtocolTimeout);
obj.lib.port('output', 'csr_sys_evt_sender_enable', 1);
obj.lib.port('input',  'csr_sys_evt_sender_err_vld', 1);
obj.lib.port('input',  'csr_sys_evt_sender_err_protocol_timeout', 1);
obj.lib.port('input',  'csr_sys_evt_sender_err_event_timeout', 1);


// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
if (nMainTraceBufSize>0) {
obj.lib.port('output', 'dve_trace_mem_UCE',   1);
obj.lib.port('output', 'dve_trace_mem_CE',   1);

obj.lib.port('output', 'csr_DVETASCR_BufferIsCircular',   1);
obj.lib.port('output', 'csr_DVETASCR_BufferClear',        1);
obj.lib.port('output', 'csr_DVETASCR_BufferRead',         1);

obj.lib.port('input',  'dve_trace_buffer_empty',              1);
obj.lib.port('input',  'dve_trace_buffer_full',               1);
obj.lib.port('input',  'dve_trace_funit_id',                  8);
obj.lib.port('input',  'dve_trace_read_data_valid',           1);
obj.lib.port('input',  'dve_trace_timestamp',                32);
for (let i=0;i<16;i++) {
obj.lib.port('input',  'dve_trace_capture_data_valid'+i,      1);
obj.lib.port('input',  'dve_trace_capture_data'+i,           32);
}
obj.lib.port('input', 'dve_trace_hdr_ecc_sb_error',          1);
obj.lib.port('input', 'dve_trace_hdr_ecc_db_error',          1);

obj.lib.port('input', 'dve_trace_hdr_ecc_addr',          wMainTraceBufSize);

obj.lib.port('input', 'dve_trace_data_ecc_sb_error',          1);
obj.lib.port('input', 'dve_trace_data_ecc_db_error',          1);

obj.lib.port('input', 'dve_trace_data_ecc_addr',          wMainTraceBufSize+wTraceBanks);
}

obj.lib.port('input',  'dve_uncorr_err_vld',   1);
obj.lib.port('input',  'dve_uncorr_err_type',  4);
obj.lib.port('input',  'dve_uncorr_err_info',  20);

obj.lib.port('input',  'dve_corr_err_vld',   1);
obj.lib.port('input',  'dve_corr_err_type',  4);
obj.lib.port('input',  'dve_corr_err_info',  16);

obj.lib.port('output', 'IRQ_uc', 1);
obj.lib.port('output', 'IRQ_c',  1);

obj.lib.port('output', 'dve_res_cerr_threshold', wResThreshold);

// Ncore3.2 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
if (useSysEvtCoh) {
obj.lib.port('input',  'csr_sys_coh_receiver_err_vld', 1);
obj.lib.port('input',  'snoop_enables', wSnoopEnables);
obj.lib.port('input',  'snoop_enables_update', 1);
obj.lib.port('output', 'csr_snoop_enables', wSnoopEnables);
obj.lib.port('output', 'csr_snoop_enables_update', 1);
}

obj.lib.interface(pmonCsrInputInterface.name, 'master', pmonCsrInputInterface.signals);

for (var rf in regFldsOut) {
    if ( rf.match(/DVECNTCR|DVECNTSR|DVECNTVR|DVEMCNTCR/g) ) {
u.port('output', rf , regFldsOut[rf]) ;
    }
}

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

    \js Object.keys(rfSwWdata).forEach(rf => {
\js if (rfSwWdata[rf]>1) {
wire [\=rfSwWdata[rf]-1=\:0] \=rf=\;
\js } else {
wire \=rf=\;
\js }
    \js });
    \js rfSwWr.forEach(r => {
wire \=r=\;
    \js });
    \js rfSwRd.forEach(r => {
wire \=r=\;
    \js });

    \js for (var rf in regFldsIn) {
\js if (rf.match(/DVECNTCR|DVECNTSR|DVECNTVR|DVEMCNTCR/g) === null) {
\js if (regFldsIn[rf]>1) {
wire [\=regFldsIn[rf]-1=\:0] \=rf=\;
\js } else {
wire \=rf=\;
\js }
\js }
    \js }

    \js for (var rf in regFldsOut) {
\js if (rf.match(/DVECNTCR|DVECNTSR|DVECNTVR|DVEMCNTCR/g) === null) {
\js if (regFldsOut[rf]>1) {
wire [\=regFldsOut[rf]-1=\:0] \=rf=\;
\js } else {
wire \=rf=\;
\js }
\js }
    \js }

    \js for (let i=0; i < nDveAgents; i++) {
wire [\=nNUnitId-1=\:0] dvm_aiu\=i=\_n_unit_id_vec;
    \js }
wire [\=nNUnitId-1=\:0] dvm_aiu_n_unit_id_vec;
wire [\=nAius-1=\:0] DVEUSER_SnpsEnb;
wire [\=nDveAgents-1=\:0] csr_DvmSnoopDisable_sig;

wire IRQ_c_sig;
wire IRQ_uc_sig;
wire IRQ_c_q;
wire IRQ_uc_q;
\js if (nPerfCounters>0) {
wire [\=nPerfCounters-1=\:0] pmon_ovf_vec;
wire [\=nPerfCounters-1=\:0] pmon_ovf_en_vec;
\js }

wire [31:0] \=apbInterfaceName=\pwdata_mux;

wire dff_enable;

\jsbegin
//=============================================================================
// Logic
//=============================================================================
\jsend

assign dff_enable = 1'b1;

assign csr_MaxOneSyncDVMOp = DVEUENGDBR_MaxOneSyncDVMOp_out;

\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore if env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize==0) { \jsend
wire dve_trace_hdr_ecc_sb_error = 1'b0;
wire dve_trace_hdr_ecc_db_error = 1'b0;
wire dve_trace_data_ecc_sb_error = 1'b0;
wire dve_trace_data_ecc_db_error = 1'b0;
\js }
\jsbegin
//=============================================================================
// CSR port connections for Snoop Enable Registers
//=============================================================================
\jsend

    \js for (let i=0; i < nDveAgents; i++) {
assign dvm_aiu\=i=\_n_unit_id_vec = \=nNUnitId=\'b1 << dvm_aiu\=i=\_n_unit_id;
    \js }

assign dvm_aiu_n_unit_id_vec = dvm_aiu0_n_unit_id_vec
    \js for (let i=1; i < nDveAgents; i++) {
        | dvm_aiu\=i=\_n_unit_id_vec
    \js }
        ;


\jsbegin
// useSysEvtCoh always present on 3.4
/* istanbul ignore else env ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend

wire csr_snoop_enables_update_in = 1'b0
        \js for (var i=0; i < nDVEUSER; i++) {
                               | DVEUSER\=i=\_sw_wr
        \js }
                               ;

\=u.dffre(1, 'csr_snoop_enables_update', 'csr_snoop_enables_update_in', "1'b0", 'dff_enable', 'clk', 'reset_n')=\

assign csr_snoop_enables = DVEUSER_SnpsEnb[\=wSnoopEnables-1=\:0];

\js }

    \js for (let i=0; i < nDveAgents; i++) {
assign csr_DvmSnoopDisable_sig[\=i=\] = ~{|{dvm_aiu\=i=\_n_unit_id_vec[\=nAius-1=\:0] & DVEUSER_SnpsEnb[\=nAius-1=\:0]}};
    \js }

\=u.dffre(nDveAgents, 'csr_DvmSnoopDisable', 'csr_DvmSnoopDisable_sig', nDveAgents+"'b0", 'dff_enable', 'clk', 'reset_n')=\

    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore else env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if ((nAius > 0) && (nAius <= 32)) {
    \jsend
assign DVEUSER_SnpsEnb[\=nAius-1=\:0]     = DVEUSER0_SnpsEnb_out[\=nAius-1=\:0];
        \jsbegin
            // Ncore3.2 always has between 1 and 32 aius
            /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
            if (nAius == 32) {
        \jsend
assign \=apbInterfaceName=\pwdata_mux = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER0_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[\=nAius-1=\:0] :
        \js } else {
assign \=apbInterfaceName=\pwdata_mux = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER0_addr=\) ? \=apbInterfaceName=\pwdata & {\=32-nAius=\'d0, dvm_aiu_n_unit_id_vec[\=nAius-1=\:0]} :
        \js }
                                                                                                        \=apbInterfaceName=\pwdata;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if ((nAius > 32) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 64)) {
    \jsend
assign DVEUSER_SnpsEnb[31:0]              = DVEUSER0_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[\=nAius-1=\:32]    = DVEUSER1_SnpsEnb_out[\=nAius-1-32=\:0];
        \jsbegin
            // Ncore3.2 always has between 1 and 32 aius
            /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
            if (nAius == 64) {
        \jsend
assign \=apbInterfaceName=\pwdata_mux = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER1_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[\=nAius-1=\:32] :
        \js } else {
assign \=apbInterfaceName=\pwdata_mux = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER1_addr=\) ? \=apbInterfaceName=\pwdata & {\=64-nAius=\'d0, dvm_aiu_n_unit_id_vec[\=nAius-1=\:32]} :
        \js }
                                        (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER0_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[31:0] :
                                                                                                       \=apbInterfaceName=\pwdata;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if ((nAius > 64) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 96)) {
    \jsend
assign DVEUSER_SnpsEnb[31:0]              = DVEUSER0_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[63:32]             = DVEUSER1_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[\=nAius-1=\:64]    = DVEUSER2_SnpsEnb_out[\=nAius-1-64=\:0];
        \jsbegin
            // Ncore3.2 always has between 1 and 32 aius
            /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
            if (nAius == 96) {
        \jsend
assign \=apbInterfaceName=\pwdata_mux     = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER2_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[\=nAius-1=\:64] :
        \js } else {
assign \=apbInterfaceName=\pwdata_mux     = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER2_addr=\) ? \=apbInterfaceName=\pwdata & {\96-nAius=\'d0, dvm_aiu_n_unit_id_vec[\=nAius-1=\:64]} :
        \js }
                                            (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER1_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[63:32] :
                                            (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER0_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[31:0] :
                                                                                                           \=apbInterfaceName=\pwdata;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if ((nAius > 96) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 128)) {
    \jsend
assign DVEUSER_SnpsEnb[31:0]              = DVEUSER0_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[63:32]             = DVEUSER1_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[95:64]             = DVEUSER2_SnpsEnb_out[31:0];
assign DVEUSER_SnpsEnb[\=nAius-1=\:96]    = DVEUSER3_SnpsEnb_out[\=nAius-1-96=\:0];
        \jsbegin
            // Ncore3.2 always has between 1 and 32 aius
            /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
            if (nAius == 128) {
        \jsend
assign \=apbInterfaceName=\pwdata_mux     = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER3_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[\=nAius-1=\:96] :
        \js } else {
assign \=apbInterfaceName=\pwdata_mux     = (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER3_addr=\) ? \=apbInterfaceName=\pwdata & {\128-nAius=\'d0, dvm_aiu_n_unit_id_vec[\=nAius-1=\:96]} :
        \js }
                                            (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER2_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[95:64] :
                                            (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER1_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[63:32] :
                                            (\=apbInterfaceName=\paddr == \=AWIDTH=\'d\=DVEUSER0_addr=\) ? \=apbInterfaceName=\pwdata & dvm_aiu_n_unit_id_vec[31:0] :
                                                                                                           \=apbInterfaceName=\pwdata;
    \js }


\jsbegin
// Ncore3.2 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend

\js if (wSnoopEnables < nAius) {
wire [\=nAius-1=\:0] snoop_enables_ext = { {\=nAius-wSnoopEnables=\{1'b0}}, snoop_enables };
\js } else {
wire [\=nAius-1=\:0] snoop_enables_ext = { snoop_enables };
\js }

    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore else env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if ((nAius > 0) && (nAius <= 32)) { \jsend
assign DVEUSER0_SnpsEnb_in = snoop_enables_ext[\=nAius-1=\:0];
assign DVEUSER0_SnpsEnb_wr = snoop_enables_update & ~csr_snoop_enables_update_in;
    \js }
    \jsbegin
// Ncore3.2 always has between 1 and 32 aius
/* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 32) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 64)) { \jsend
assign DVEUSER0_SnpsEnb_in = snoop_enables_ext[31:0];
assign DVEUSER0_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER1_SnpsEnb_in = snoop_enables_ext[\=nAius-1=\:32];
assign DVEUSER1_SnpsEnb_wr = snoop_enables_update & ~csr_snoop_enables_update_in;
    \js }
    \jsbegin
// Ncore3.2 always has between 1 and 32 aius
/* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 64) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 96)) { \jsend
assign DVEUSER0_SnpsEnb_in = snoop_enables_ext[31:0];
assign DVEUSER0_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER1_SnpsEnb_in = snoop_enables_ext[63:32];
assign DVEUSER1_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER2_SnpsEnb_in = snoop_enables_ext[\=nAius-1=\:64];
assign DVEUSER2_SnpsEnb_wr = snoop_enables_update & ~csr_snoop_enables_update_in;
    \js }
    \jsbegin
// Ncore3.2 always has between 1 and 32 aius
/* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 96) && /* istanbul ignore next env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */ (nAius <= 128)) { \jsend
assign DVEUSER0_SnpsEnb_in = snoop_enables_ext[31:0];
assign DVEUSER0_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER1_SnpsEnb_in = snoop_enables_ext[63:32];
assign DVEUSER1_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER2_SnpsEnb_in = snoop_enables_ext[95:64];
assign DVEUSER2_SnpsEnb_wr = snoop_enables_update;
assign DVEUSER3_SnpsEnb_in = snoop_enables_ext[\=nAius-1=\:96];
assign DVEUSER3_SnpsEnb_wr = snoop_enables_update & ~csr_snoop_enables_update_in;
    \js }

\js } else {

    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore else env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 0) && (nAius <= 32)) {
    \jsend
assign DVEUSER0_SnpsEnb_in = \=nAius=\'b0;
assign DVEUSER0_SnpsEnb_wr = 1'b0;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 32) && (nAius <= 64)) {
    \jsend
assign DVEUSER0_SnpsEnb_in = 32'b0;
assign DVEUSER0_SnpsEnb_wr = 1'b0;
assign DVEUSER1_SnpsEnb_in = \=nAius=\'b0;
assign DVEUSER1_SnpsEnb_wr = 1'b0;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 64) && (nAius <= 96)) {
    \jsend
assign DVEUSER0_SnpsEnb_in = 32'b0;
assign DVEUSER0_SnpsEnb_wr = 1'b0;
assign DVEUSER1_SnpsEnb_in = 32'b0;
assign DVEUSER1_SnpsEnb_wr = 1'b0;
assign DVEUSER2_SnpsEnb_in = \=nAius=\'b0;
assign DVEUSER2_SnpsEnb_wr = 1'b0;
    \js }
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if ((nAius > 96) && (nAius <= 128)) {
    \jsend
assign DVEUSER0_SnpsEnb_in = 32'b0;
assign DVEUSER0_SnpsEnb_wr = 1'b0;
assign DVEUSER1_SnpsEnb_in = 32'b0;
assign DVEUSER1_SnpsEnb_wr = 1'b0;
assign DVEUSER2_SnpsEnb_in = 32'b0;
assign DVEUSER2_SnpsEnb_wr = 1'b0;
assign DVEUSER3_SnpsEnb_in = \=nAius=\'b0;
assign DVEUSER3_SnpsEnb_wr = 1'b0;
    \js }

\js }

\jsbegin
//=============================================================================
// CSR port connections for Die-to-Die Registers
//=============================================================================
\jsend

\js if (nChiplets > 1) {

assign DVEUDVMDCR_Chiplet0DvmDomain_in     = csr_Chiplet0DvmDomain;
assign DVEUDVMDCR_Chiplet1DvmDomain_in     = csr_Chiplet1DvmDomain;
assign DVEUDVMDCR_Chiplet2DvmDomain_in     = csr_Chiplet2DvmDomain;
assign DVEUDVMDCR_Chiplet3DvmDomain_in     = csr_Chiplet3DvmDomain;
assign DVEUDVMDCR_DefaultConfigNumber_in   = csr_DvmDomain_DefaultConfigNumber;

assign DVEUCDCR_Chiplet0CohDom_in          = csr_Chiplet0CohDomain;
assign DVEUCDCR_Chiplet1CohDom_in          = csr_Chiplet1CohDomain;
assign DVEUCDCR_Chiplet2CohDom_in          = csr_Chiplet2CohDomain;
assign DVEUCDCR_Chiplet3CohDom_in          = csr_Chiplet3CohDomain;
assign DVEUCDCR_DefaultConfigNumber_in     = csr_CohDomain_DefaultConfigNumber;

assign csr_Chiplet0DveFUnitId              = DVEURDVEFUIDR_Chiplet0DveFUnitId_out;
assign csr_Chiplet1DveFUnitId              = DVEURDVEFUIDR_Chiplet1DveFUnitId_out;
assign csr_Chiplet2DveFUnitId              = DVEURDVEFUIDR_Chiplet2DveFUnitId_out;
assign csr_Chiplet3DveFUnitId              = DVEURDVEFUIDR_Chiplet3DveFUnitId_out;

assign csr_Chiplet0DvmEn                   = DVEUDRSER_Chiplet0DvmEn_out;
assign csr_Chiplet1DvmEn                   = DVEUDRSER_Chiplet1DvmEn_out;
assign csr_Chiplet2DvmEn                   = DVEUDRSER_Chiplet2DvmEn_out;
assign csr_Chiplet3DvmEn                   = DVEUDRSER_Chiplet3DvmEn_out;

assign csr_RemoteDvmLinkIdChiplet0         = DVEUDVMLIR_RemoteDvmLinkIdChiplet0_out;
assign csr_RemoteDvmLinkIdChiplet1         = DVEUDVMLIR_RemoteDvmLinkIdChiplet1_out;
assign csr_RemoteDvmLinkIdChiplet2         = DVEUDVMLIR_RemoteDvmLinkIdChiplet2_out;
assign csr_RemoteDvmLinkIdChiplet3         = DVEUDVMLIR_RemoteDvmLinkIdChiplet3_out;

assign csr_Chiplet0CohEn                   = DVEUCAER_Chiplet0CohEn_out;
assign csr_Chiplet1CohEn                   = DVEUCAER_Chiplet1CohEn_out;
assign csr_Chiplet2CohEn                   = DVEUCAER_Chiplet2CohEn_out;
assign csr_Chiplet3CohEn                   = DVEUCAER_Chiplet3CohEn_out;

assign csr_RemoteSysCoLinkIdChiplet0       = DVEUSCALR_RemoteSysCoLinkIdChiplet0_out;
assign csr_RemoteSysCoLinkIdChiplet1       = DVEUSCALR_RemoteSysCoLinkIdChiplet1_out;
assign csr_RemoteSysCoLinkIdChiplet2       = DVEUSCALR_RemoteSysCoLinkIdChiplet2_out;
assign csr_RemoteSysCoLinkIdChiplet3       = DVEUSCALR_RemoteSysCoLinkIdChiplet3_out;

assign csr_Chiplet0EventEn                 = DVEURSEE_Chiplet0EventEn_out;
assign csr_Chiplet1EventEn                 = DVEURSEE_Chiplet1EventEn_out;
assign csr_Chiplet2EventEn                 = DVEURSEE_Chiplet2EventEn_out;
assign csr_Chiplet3EventEn                 = DVEURSEE_Chiplet3EventEn_out;

assign csr_RemoteSysEvLinkIdChiplet0       = DVEURSELR_RemoteSysEvLinkIdChiplet0_out;
assign csr_RemoteSysEvLinkIdChiplet1       = DVEURSELR_RemoteSysEvLinkIdChiplet1_out;
assign csr_RemoteSysEvLinkIdChiplet2       = DVEURSELR_RemoteSysEvLinkIdChiplet2_out;
assign csr_RemoteSysEvLinkIdChiplet3       = DVEURSELR_RemoteSysEvLinkIdChiplet3_out;

\js }

\jsbegin
//=============================================================================
// CSR port connections for ID Registers and INFO Registers
//=============================================================================
\jsend

assign DVEUIDR_RPN_in     = my_csr_rpn;
assign DVEUIDR_NRRI_in    = my_csr_nrri;
    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore else env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if (wNUnitId < 12) {
    \jsend
assign DVEUIDR_NUnitId_in = {\=12-wNUnitId=\'d0, my_n_unit_id};
    \js } else {
assign DVEUIDR_NUnitId_in = my_n_unit_id;
    \js }
assign DVEUIDR_Valid_in   = 1'b0; \js //apb_csr will XOR this with the value from the JSON file.

    \jsbegin
        // Ncore3.2 always has between 1 and 32 aius
        /* istanbul ignore else env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
        if (wFUnitId < 16) {
    \jsend
assign DVEUFUIDR_FUnitId_in = {\=16-wFUnitId=\'d0, my_f_unit_id};
    \js } else {
assign DVEUFUIDR_FUnitId_in = my_f_unit_id;
    \js }


assign DVEUENGIDR_EngVerId_in = 32'd0; \js //apb_csr will XOR this with the value from the JSON file.

assign DVEUINFOR_ImplVer_in = 16'd0;   \js //apb_csr will XOR this with the value from the JSON file.
assign DVEUINFOR_UT_in      = 4'b0;    \js //apb_csr will XOR this with the value from the JSON file.
assign DVEUINFOR_Valid_in   = 1'b0;    \js //apb_csr will XOR this with the value from the JSON file.

\jsbegin
//=============================================================================
// Tie-offs for DVM Revision Register reset value control
//=============================================================================
\jsend
assign DVEUDVMRR_Ver_in    = 8'h0;     //apb_csr will XOR this with the value from the JSON file.

\jsbegin
//=============================================================================
// Correctable Error Registers
//=============================================================================
\jsend

\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
assign dve_trace_mem_CE = dve_trace_hdr_ecc_sb_error | dve_trace_data_ecc_sb_error;
\js }

wire corr_err_exceed_threshold = (DVECESR_ErrCount_out == DVECECR_ErrThreshold_out);

assign DVECESR_ErrVld_in   = DVECESAR_sw_wr                                                   ?  DVECESAR_ErrVld_sw_wdata                         :
                             (DVECESR_sw_wr & DVECESR_ErrVld_out)                             ?(~DVECESR_ErrVld_sw_wdata & DVECESR_ErrVld_out)   :
                             (dve_corr_err_vld & corr_err_exceed_threshold & DVECECR_ErrDetEn_out)                                       ? 1'b1 :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                             (dve_trace_hdr_ecc_sb_error & corr_err_exceed_threshold & DVECECR_ErrDetEn_out) ?  1'b1                                              : 
                             (dve_trace_data_ecc_sb_error & corr_err_exceed_threshold & DVECECR_ErrDetEn_out) ?  1'b1                                              : 
\js }
			      DVECESR_ErrVld_out;

assign DVECESR_ErrType_in  = DVECESAR_sw_wr                                                   ? DVECESAR_ErrType_sw_wdata    :
                             (dve_corr_err_vld & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)                ? dve_corr_err_type :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                             (dve_trace_hdr_ecc_sb_error & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)      ? 4'b0                 : 
                             (dve_trace_data_ecc_sb_error & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)      ? 4'b0                 : 
\js }
                                                                                                               DVECESR_ErrType_out;

assign DVECESR_ErrInfo_in  = DVECESAR_sw_wr                                                   ? DVECESAR_ErrInfo_sw_wdata    :
                             (dve_corr_err_vld & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)                ? dve_corr_err_info :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                             (dve_trace_hdr_ecc_sb_error & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)      ? 16'h4                 : 
                             (dve_trace_data_ecc_sb_error & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out)      ? 16'h4                 : 
\js }
                                                                                                               DVECESR_ErrInfo_out;
                              
assign DVECESR_ErrVld_wr         = DVECESAR_sw_wr | DVECESR_sw_wr | (dve_corr_err_vld & corr_err_exceed_threshold & DVECECR_ErrDetEn_out) |
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                                                    (dve_trace_mem_CE & corr_err_exceed_threshold & DVECECR_ErrDetEn_out);
\js } else {
                                                                    1'b0;
\js }
assign DVECESR_ErrType_wr        = DVECESAR_sw_wr | (dve_corr_err_vld & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out) |
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                                    (dve_trace_mem_CE & ~DVECESR_ErrVld_out & DVECECR_ErrDetEn_out);
\js } else {
                                                    1'b0;
\js }
assign DVECESR_ErrInfo_wr        = DVECESR_ErrType_wr;

\js // error count
assign DVECESR_ErrCount_in = DVECESAR_sw_wr                        ? DVECESAR_ErrCount_sw_wdata :
                             (DVECESR_sw_wr & DVECESR_ErrVld_sw_wdata) ? 8'b0 : (DVECESR_ErrCount_out + 1'b1); 
assign DVECESR_ErrCount_wr = DVECESAR_sw_wr |
                             (DVECESR_sw_wr & DVECESR_ErrVld_sw_wdata & DVECESR_ErrVld_out) |
                             (dve_corr_err_vld & DVECECR_ErrDetEn_out & ~corr_err_exceed_threshold) |
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                             (dve_trace_mem_CE & DVECECR_ErrDetEn_out & ~corr_err_exceed_threshold);
\js } else {
                             1'b0;
\js }
assign DVECESR_ErrCountOverflow_in = DVECESAR_sw_wr                        ? DVECESAR_ErrCountOverflow_sw_wdata :
                             (DVECESR_sw_wr & DVECESR_ErrVld_sw_wdata) ? 1'b0 : 1'b1;
assign DVECESR_ErrCountOverflow_wr =DVECESAR_sw_wr |
                             (DVECESR_sw_wr & DVECESR_ErrVld_sw_wdata) | (dve_corr_err_vld & ~DVECESR_ErrCountOverflow_out & DVECECR_ErrDetEn_out & DVECESR_ErrVld_out) |
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                                                          (dve_trace_mem_CE & ~DVECESR_ErrCountOverflow_out & DVECECR_ErrDetEn_out & DVECESR_ErrVld_out);
\js } else {
                                                                          1'b0;
\js }

assign DVECELR0_ErrAddr_in =
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                  (dve_trace_hdr_ecc_sb_error  & DVECECR_ErrDetEn_out) ? { 6'b0, 6'b0, \=20-wMainTraceBufSize=\'b0,dve_trace_hdr_ecc_addr } :
                                  (dve_trace_data_ecc_sb_error & DVECECR_ErrDetEn_out) ? { 6'b0, 6'b0, \=20-wMainTraceBufSize-wTraceBanks=\'b0,dve_trace_data_ecc_addr } :
\js }
                                 32'b0; 
assign DVECELR1_ErrAddr_in   =
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                (dve_trace_hdr_ecc_sb_error  & DVECECR_ErrDetEn_out) ? 20'b0 :
                                (dve_trace_data_ecc_sb_error & DVECECR_ErrDetEn_out) ? 20'b0 :
\js }
                                20'b0;

assign DVECELR0_ErrAddr_wr  =
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                              ((dve_trace_hdr_ecc_sb_error | dve_trace_data_ecc_sb_error) & DVECECR_ErrDetEn_out & ~DVECESR_ErrVld_out) |
\js }
                               (dve_corr_err_vld & DVECECR_ErrDetEn_out & ~DVECESR_ErrVld_out);
assign DVECELR1_ErrAddr_wr = DVECELR0_ErrAddr_wr;

\jsbegin
//=============================================================================
// Uncorrectable Error Registers
//=============================================================================
\jsend

\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize > 0) { \jsend
assign dve_trace_mem_UCE = DVEUUEDR_MemErrDetEn_out & (dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error);
\js }

assign DVEUUESR_ErrVld_in = DVEUUESAR_sw_wr                                 ? DVEUUESAR_ErrVld_sw_wdata :
                            (DVEUUESR_sw_wr & DVEUUESR_ErrVld_out)          ? (~DVEUUESR_ErrVld_sw_wdata & DVEUUESR_ErrVld_out) :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                            ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out) ? 1'b1 :
\js }
                            (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out) ? 1'b1 :
                            (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & (csr_sys_evt_sender_err_protocol_timeout | csr_sys_evt_sender_err_event_timeout))) & DVEUUEDR_TimeoutErrDetEn_out) ? 1'b1 :
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                            (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out) ? 1'b1 :
\js }
                                                                              DVEUUESR_ErrVld_out;

assign DVEUUESR_ErrType_in = DVEUUESAR_sw_wr                                                        ? DVEUUESAR_ErrType_sw_wdata :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                            ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) ? 4'b0 :
\js }
                             (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out & ~DVEUUESR_ErrVld_out) ? dve_uncorr_err_type :
                            ((csr_sys_evt_receiver_err_vld | csr_sys_evt_sender_err_vld) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) ? 4'ha :
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                            (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) ? 4'hb :
\js }
                                                                                                      DVEUUESR_ErrType_out;

assign DVEUUESR_ErrInfo_in = DVEUUESAR_sw_wr                                                        ? DVEUUESAR_ErrInfo_sw_wdata :
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                             (dve_trace_hdr_ecc_db_error  & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) ? 20'h4 :
                             (dve_trace_data_ecc_db_error & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) ? 20'h4 :
\js }
                             (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out & ~DVEUUESR_ErrVld_out) ? dve_uncorr_err_info :
                             (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & csr_sys_evt_sender_err_event_timeout)) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) ? {19'b0, 1'b1} :
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                            (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) ? {19'b0, 1'b1} :
\js }
                                                                                                      DVEUUESR_ErrInfo_out;

assign DVEUUESR_ErrVld_wr   = DVEUUESAR_sw_wr | 
                              DVEUUESR_sw_wr | 
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                              ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out) |
\js }
                              (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & csr_sys_evt_sender_err_event_timeout)) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                              (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out);

assign DVEUUESR_ErrType_wr  = DVEUUESAR_sw_wr | 
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                              ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & csr_sys_evt_sender_err_event_timeout)) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                              (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out & ~DVEUUESR_ErrVld_out);

assign DVEUUESR_ErrInfo_wr  = DVEUUESAR_sw_wr |
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                              ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & csr_sys_evt_sender_err_event_timeout)) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                              (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out & ~DVEUUESR_ErrVld_out);

assign   DVEUUELR0_ErrAddr_in =
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                                  (dve_trace_hdr_ecc_db_error  & DVEUUEDR_MemErrDetEn_out) ? { 6'b0, 6'b0, \=20-wMainTraceBufSize=\'b0,dve_trace_hdr_ecc_addr } :
                                  (dve_trace_data_ecc_db_error & DVEUUEDR_MemErrDetEn_out) ? { 6'b0, 6'b0, \=20-wMainTraceBufSize-wTraceBanks=\'b0,dve_trace_data_ecc_addr } :
\js }
                                  32'b0;
assign DVEUUELR1_ErrAddr_in   = 20'b0;

assign DVEUUELR0_ErrAddr_wr  =
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                              ((dve_trace_hdr_ecc_db_error | dve_trace_data_ecc_db_error) & DVEUUEDR_MemErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                              (((csr_sys_evt_receiver_err_vld & csr_sys_evt_receiver_err_event_timeout) | (csr_sys_evt_sender_err_vld & csr_sys_evt_sender_err_event_timeout)) & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                              (csr_sys_coh_receiver_err_vld & DVEUUEDR_TimeoutErrDetEn_out & ~DVEUUESR_ErrVld_out) |
\js }
                               (dve_uncorr_err_vld & DVEUUEDR_TransErrDetEn_out & ~DVEUUESR_ErrVld_out);
assign DVEUUELR1_ErrAddr_wr = DVEUUELR0_ErrAddr_wr;

\js //TOCR register
wire [30:0] csr_timeout_threshold;
wire csr_timeout_ref_en, csr_timeout_count_reset;

assign csr_timeout_threshold = DVEUTOCR_TimeOutThreshold_out;
assign csr_timeout_ref_en = DVEUTOCR_TimeOutRefEn_out;
assign csr_timeout_count_reset = DVEUTOCR_sw_wr;

assign csr_protocol_timeout_value  = {|{csr_timeout_threshold}} ? ({|{csr_timeout_threshold[30:8]}} ? {\=wProtocolTimeout=\{1'b1}} : {csr_timeout_threshold[7:0], {12{1'b0}}}) : {\=wProtocolTimeout=\{1'b0}};
assign csr_event_timeout_value     = csr_protocol_timeout_value;
assign csr_sys_evt_sender_enable   = ~DVEUTCR_EventDisable_out; 
assign csr_sys_evt_receiver_enable = ~DVEUTCR_EventDisable_out; 


\jsbegin
//=============================================================================
// TAR register                              
//=============================================================================
\jsend

assign DVEUTAR_TransActv_in = csr_DvmTransActive;
assign DVEUTAR_TransActv_wr = DVEUTAR_TransActv_in ^ DVEUTAR_TransActv_out;

\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
\jsbegin
//=============================================================================
// Trace and Debug
//=============================================================================
\jsend

assign csr_DVETASCR_BufferIsCircular  = DVETASCR_BufferIsCircular_out;
assign csr_DVETASCR_BufferClear       = DVETASCR_BufferClear_out;
assign     DVETASCR_BufferClear_in    = 1'b0;
assign     DVETASCR_BufferClear_wr    = DVETASCR_BufferClear_out;
assign csr_DVETASCR_BufferRead        = DVETASCR_BufferRead_out;
assign     DVETASCR_BufferRead_in     = 1'b0;
assign     DVETASCR_BufferRead_wr     = DVETASCR_BufferRead_out;

assign DVETADHR_valid_in = dve_trace_read_data_valid | ~DVETADHR_sw_rd;
assign DVETADHR_valid_wr = dve_trace_read_data_valid | (DVETADHR_sw_rd & DVETADHR_valid_out);

assign DVETADHR_fid_in = dve_trace_funit_id;
assign DVETADHR_fid_wr = DVETAD0R_data_wr;

assign DVETADTSR_timestamp_in = dve_trace_timestamp;
assign DVETADTSR_timestamp_wr = DVETAD0R_data_wr;

\js for (let i=0;i<16;i++) {
assign DVETAD\=i=\R_data_wr = dve_trace_capture_data_valid\=i=\;
assign DVETAD\=i=\R_data_in = dve_trace_capture_data\=i=\;
\js }

assign DVETASCR_BufferIsEmpty_in = dve_trace_buffer_empty;
assign DVETASCR_BufferIsEmpty_wr = 1'b1;

assign DVETASCR_BufferIsFull_in  = dve_trace_buffer_full;
assign DVETASCR_BufferIsFull_wr  = 1'b1;

\js } else {

assign DVETASCR_BufferClear_in = 1'b0;
assign DVETASCR_BufferClear_wr = 1'b0;
assign DVETASCR_BufferRead_in = 1'b0;
assign DVETASCR_BufferRead_wr = 1'b0;

assign DVETADHR_valid_in = 1'b0;
assign DVETADHR_valid_wr = 1'b0;

assign DVETADHR_fid_in = 8'b0;
assign DVETADHR_fid_wr = 1'b0;

assign DVETADTSR_timestamp_in = 32'b0;
assign DVETADTSR_timestamp_wr = 1'b0;

\js for (let i=0;i<16;i++) {
assign DVETAD\=i=\R_data_wr = 1'b0;
assign DVETAD\=i=\R_data_in = 32'b0;
\js }

assign DVETASCR_BufferIsEmpty_in = 1'b0;
assign DVETASCR_BufferIsEmpty_wr = 1'b0;

assign DVETASCR_BufferIsFull_in = 1'b0;
assign DVETASCR_BufferIsFull_wr = 1'b0;

\js }

\jsbegin
//=============================================================================
// Resiliency Correctable Error Threshold
//=============================================================================
\jsend

assign dve_res_cerr_threshold[\=wResThreshold-1=\:0] = DVEUCRTR_ResThreshold_out[\=wResThreshold-1=\:0];

\jsbegin
//=============================================================================
// IRQ
//=============================================================================
\jsend

\js for(let i=0; i<nPerfCounters; i++) {
assign pmon_ovf_vec[\=i=\] = DVECNTCR\=i=\_OverFlowStatus_out;
assign pmon_ovf_en_vec[\=i=\] = DVECNTCR\=i=\_InterruptEn_out;
\js }

assign IRQ_c  = IRQ_c_q;
assign IRQ_uc = IRQ_uc_q;

\js if (nPerfCounters>0) {
assign IRQ_c_sig = |(pmon_ovf_vec & pmon_ovf_en_vec);
\js } else {
assign IRQ_c_sig = 1'b0;
\js }

assign IRQ_uc_sig = (DVEUUEIR_TransErrIntEn_out & DVEUUESR_ErrVld_out & (DVEUUESR_ErrType_out==4'h8)) |
                    (DVEUUEIR_TimeoutErrIntEn_out & DVEUUESR_ErrVld_out & (DVEUUESR_ErrType_out==4'ha)) |
\jsbegin
// Ncore3.6 always has SysCo present
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (useSysEvtCoh) { \jsend
                    (DVEUUEIR_TimeoutErrIntEn_out & DVEUUESR_ErrVld_out & (DVEUUESR_ErrType_out==4'hb)) |
\js }
\jsbegin
// Ncore3.2 always has a trace buffer
/* istanbul ignore else env ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
    if (nMainTraceBufSize>0) { \jsend
                    (DVEUUEIR_MemErrIntEn_out & DVEUUESR_ErrVld_out &  (DVEUUESR_ErrType_out==4'b0));
\js } else {
                    1'b0;
\js };

\=obj.lib.dffre(1, 'IRQ_c_q', 'IRQ_c_sig', "1'b0", 'dff_enable', 'clk', 'reset_n')=\
\=obj.lib.dffre(1, 'IRQ_uc_q', 'IRQ_uc_sig', "1'b0", 'dff_enable', 'clk', 'reset_n')=\

\jsbegin
//=============================================================================
// Symphony Stuff
//=============================================================================
\jsend

\js // Instantiate CSR registers:

\jsbegin
var reg_interfaces = [];

reg_interfaces.push({
        modulePrefix: '',
        localPrefix: '',
        interface: clkInterface
});

//reg_interfaces.push({
//        modulePrefix: apbInterfaceName,
//        localPrefix:apbInterfaceName,
//        interface: apbInterface
//});
 
// Ncore3.2 does not use register protection
/* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
if(regProtectionStyle != null) {
  /* istanbul ignore if env ncore_3p0,ncore_3p2,ncore_3p4,ncore_3p6,ncore_3p7 */
  if(regProtectionStyle.protection != "none") {
    reg_interfaces.push({
        modulePrefix: regProtectionInterfaceName,
        localPrefix: regProtectionInterfaceName,
        interface: regProtectionInterface
    });
  }
}

Object.keys(apbInterface).forEach(function(key) {
    if (key == 'pwdata') {
csrHwPorts[apbInterfaceName+'pwdata']  = apbInterfaceName+'pwdata_mux';
    } else /* istanbul ignore next env ncore_3p6,ncore_3p7 */ if (Math.abs((apbInterface[key]))) {
csrHwPorts[apbInterfaceName+key]       = apbInterfaceName+key;
    }
});

\jsend

\=obj.lib.instance({
        instanceName: 'u_apb_csr',
        moduleName: 'apb_csr',
        params: {
          clkInterface          : {"name" : '',                         "signals" : clkInterface},
          cfgInterface          : {"name" : apbInterfaceName,           "signals" : apbInterface},
          protectionInterface   : {"name" : regProtectionInterfaceName, "signals" : regProtectionInterface},
          protectionStyle       : regProtectionStyle,
          flopAPB               : "yes",
          enSwReadPorts         : "1",
          csr                   : CSR
        },
        ports: csrHwPorts,
        interfaces: reg_interfaces
})=\

assign csr_DeallocEarly = DVEUENGDBR_DeallocEarly_out;
assign csr_AceDvmOrder  = DVEUENGDBR_AceDvmOrder_out;
assign csr_RelaxDvmSnoopPairs = DVEUENGDBR_RelaxDvmSnoopPairs_out;

endmodule
