\jsbegin
//=============================================================================
// Copyright(C) 2021 Arteris, Inc.
// All rights reserved
//=============================================================================
// System Event and Coherency Concerto Wrapper
//
// Author: Boon Chuan
//=============================================================================
\jsend

\jsbegin

var u = obj.lib;


u.paramDefault('useOldPortsForDV', 'boolean', false);

u.paramDefault('assertOn','int',0);

var assertOn = u.getParam('assertOn');

var useOldPortsForDV    = u.getParam('useOldPortsForDV');

var concParams          = u.getParam('concParams');
var cmType              = u.getParam('cmType');

var sysReqTxInterface   = u.getParam('sysReqTxInterface');
var sysRspRxInterface   = u.getParam('sysRspRxInterface');
var wTM_sys_req         = sysReqTxInterface.tm;

var sysReqRxInterface   = u.getParam('sysReqRxInterface');
var sysRspTxInterface   = u.getParam('sysRspTxInterface');
var wTM_sys_rsp         = sysRspTxInterface.tm;

var wSnoopEnables       = u.getParam('wSnoopEnables');
var nSnoopAgents        = u.getParam('nSnoopAgents');

var useSysEvtBroadcaster    = u.getParam('useSysEvtBroadcaster');
var nEventAgentsForSender   = u.getParam('nEventAgentsForSender');
var nEventAgentsForReceiver = u.getParam('nEventAgentsForReceiver');

var wEventTimeout       = u.getParam('wEventTimeout');
var wProtocolTimeout    = u.getParam('wProtocolTimeout');

var wFUnitId            = u.getParam('wFUnitId');
var wFPortId            = u.getParam('wFPortId');
var wNUnitId            = u.getParam('wNUnitId');
var wInitiatorId        = concParams.hdrParams.wInitiatorId;
var wTargetId           = concParams.hdrParams.wTargetId;
var wMessageId          = concParams.hdrParams.wMsgId;
var wSysReqOp           = concParams.sysReqParams.wSysReqOp;

var nLocalCAgents       = u.getParam('nLocalCAgents');
var nLocalDCEs          = u.getParam('nLocalDCEs');
var nGlobalDVEs         = u.getParam('nGlobalDVEs');

var wChipletId          = u.getParam('wChipletId');
var wLinkId             = u.getParam('wLinkId');

var wGlobalFUnitId      = wChipletId + wFUnitId;

var wHProt    = concParams.hdrParams.wHProt;
var wTTier    = concParams.hdrParams.wTTier;
var wSteering = concParams.hdrParams.wSteering;
var wPriority = concParams.hdrParams.wPriority;
var wQl       = concParams.hdrParams.wQl;



var wMProt_sysReq = sysReqTxInterface.hasOwnProperty('m_prot') ? Math.abs(u.getParam('sysReqTxInterface', 'm_prot')) : /* istanbul ignore next env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */ 0;



var wMProt_sysRsp = sysRspTxInterface.hasOwnProperty('m_prot') ? Math.abs(u.getParam('sysRspTxInterface', 'm_prot')) : /* istanbul ignore next env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */ 0;


\jsend

\jsbegin
//=============================================================================
// Ports
//=============================================================================
\jsend

\jsbegin

u.port('input',  'clk',      1);
u.port('input',  'reset_n',  1);
        if (wChipletId > 0) {
u.port('input',  'my_chiplet_id', wChipletId);
        }
u.port('input',  'my_f_unit_id', wFUnitId);

u.port('output', 'busy',     1);



u.port('input',  'csr_event_timeout_value', wEventTimeout);


u.port('input',  'csr_sys_evt_protocol_timeout_value', wProtocolTimeout);

if(useOldPortsForDV) {
u.port('input',  'csr_protocol_timeout_value', wProtocolTimeout);   // Unused port, only retained because DV TB still looks for it
}


u.port('input',  'csr_sys_evt_sender_enable', 1);
u.port('output', 'csr_sys_evt_sender_err_vld', 1);
u.port('output', 'csr_sys_evt_sender_err_f_unit_id', wFUnitId);
u.port('output', 'csr_sys_evt_sender_err_protocol_sys', 1);
u.port('output', 'csr_sys_evt_sender_err_protocol_timeout', 1);
u.port('output', 'csr_sys_evt_sender_err_event_timeout', 1);
        for (var i=0; i < nEventAgentsForSender; i++) {
u.port('input', 'event'+i+'_f_unit_id', wFUnitId);
        }


u.port('input',  'csr_sys_evt_receiver_enable', 1);
u.port('output', 'csr_sys_evt_receiver_err_vld', 1);
u.port('output', 'csr_sys_evt_receiver_err_event_timeout', 1);
u.port('output', 'csr_sys_evt_receiver_err_f_unit_id', wFUnitId);



u.port('output', 'csr_sys_coh_receiver_err_vld', 1);
u.port('output', 'csr_sys_coh_receiver_err_f_unit_id', wFUnitId);
u.port('output', 'snoop_enables', wSnoopEnables);
u.port('output', 'snoop_enables_update', 1);
u.port('input',  'csr_snoop_enables', wSnoopEnables);
u.port('input',  'csr_snoop_enables_update', 1);
        for (var i=0; i < nSnoopAgents; i++) {
u.port('input', 'aiu'+i+'_f_unit_id', wFUnitId);
u.port('input', 'aiu'+i+'_n_unit_id', wNUnitId);
        }



u.port('input',  'outstanding_snoop_count_zero', nSnoopAgents);

        for (var i=0; i < nLocalCAgents; i++) {
u.port('input', 'caching_agent'+i+'_f_unit_id', wFUnitId);
        }

        for (var i=0; i < nLocalDCEs; i++) {
u.port('input', 'dce'+i+'_f_unit_id', wFUnitId);
        }

        for (var i=0; i < nGlobalDVEs; i++) {
u.port('input', 'dve'+i+'_f_unit_id', wFUnitId);
        }
u.port('input', 'dve_enables_for_sysco', nGlobalDVEs);
u.port('input', 'dve_enables_for_sysev', nGlobalDVEs);


u.interface('sys_req_tx_', 'master', sysReqTxInterface);
u.interface('sys_rsp_rx_', 'slave',  sysRspRxInterface);


u.interface('sys_req_rx_', 'slave',  sysReqRxInterface);
u.interface('sys_rsp_tx_', 'master', sysRspTxInterface);


\jsend

module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);

\jsbegin
//=============================================================================
// Wires
//=============================================================================
\jsend

wire dff_enable = 1'b1;

    \js if (wChipletId > 0) {
wire [\=wGlobalFUnitId-1=\:0] my_target_global_f_unit_id = {my_chiplet_id, my_f_unit_id};
    \js } else {
wire [\=wGlobalFUnitId-1=\:0] my_target_global_f_unit_id = my_f_unit_id;
    \js }

 
wire sender_sysreq_valid;
wire sender_sysreq_ready;
wire [\=wGlobalFUnitId-1=\:0] sender_sysreq_requestor_global_f_unit_id;
wire [\=wGlobalFUnitId-1=\:0] sender_sysreq_target_global_f_unit_id;
wire [\=wMessageId-1=\:0] sender_sysreq_message_id;
wire [\=wSysReqOp-1=\:0] sender_sysreq_op;

wire sender_sysrsp_valid;
wire sender_sysrsp_ready;
wire [\=wMessageId-1=\:0] sender_sysrsp_rmessage_id;
wire [7:0] sender_sysrsp_cmstatus;
wire [\=wGlobalFUnitId-1=\:0] sender_sysrsp_initiator_global_f_unit_id;








wire receiver_sysreq_valid;
wire receiver_sysreq_ready;
wire [\=wGlobalFUnitId-1=\:0] receiver_sysreq_initiator_global_f_unit_id;
wire [\=wGlobalFUnitId-1=\:0] receiver_sysreq_requestor_global_f_unit_id;
wire [\=wMessageId-1=\:0] receiver_sysreq_message_id;
wire [7:0] receiver_sysreq_cmstatus;
wire [\=wSysReqOp-1=\:0] receiver_sysreq_op;

wire receiver_sysrsp_valid;
wire receiver_sysrsp_ready;
wire [\=wGlobalFUnitId-1=\:0] receiver_sysrsp_target_global_f_unit_id;
wire [\=wMessageId-1=\:0] receiver_sysrsp_rmessage_id;
wire [7:0] receiver_sysrsp_cmstatus;

    \js if (wChipletId > 0) {

        \js for (var i=0; i < nEventAgentsForSender; i++) {
wire [\=wGlobalFUnitId-1=\:0] event\=i=\_target_global_f_unit_id = {my_chiplet_id, event\=i=\_f_unit_id};
        \js }
        \js for (var i=0; i < nLocalCAgents; i++) {
wire [\=wGlobalFUnitId-1=\:0] local_caching_agent\=i=\_target_global_f_unit_id = {my_chiplet_id, caching_agent\=i=\_f_unit_id};
        \js }
        \js for (var i=0; i < nLocalDCEs; i++) {
wire [\=wGlobalFUnitId-1=\:0] local_dce\=i=\_target_global_f_unit_id = {my_chiplet_id, dce\=i=\_f_unit_id};
        \js }
        \js for (var i=0; i < nGlobalDVEs; i++) {
wire [\=wGlobalFUnitId-1=\:0] global_dve\=i=\_target_global_f_unit_id = {\=wChipletId=\'d\=i=\, dve\=i=\_f_unit_id};
        \js }

    \js } else {

        \js for (var i=0; i < nEventAgentsForSender; i++) {
wire [\=wGlobalFUnitId-1=\:0] event\=i=\_target_global_f_unit_id = event\=i=\_f_unit_id;
        \js }
        \js for (var i=0; i < nLocalCAgents; i++) {
wire [\=wGlobalFUnitId-1=\:0] local_caching_agent\=i=\_target_global_f_unit_id = caching_agent\=i=\_f_unit_id;
        \js }
        \js for (var i=0; i < nLocalDCEs; i++) {
wire [\=wGlobalFUnitId-1=\:0] local_dce\=i=\_target_global_f_unit_id = dce\=i=\_f_unit_id;
        \js }
        \js for (var i=0; i < nGlobalDVEs; i++) {
wire [\=wGlobalFUnitId-1=\:0] global_dve\=i=\_target_global_f_unit_id = dve\=i=\_f_unit_id;
        \js }

    \js }


wire [\=wGlobalFUnitId-1=\:0] csr_sys_evt_sender_err_global_f_unit_id;
wire [\=wGlobalFUnitId-1=\:0] csr_sys_evt_receiver_err_global_f_unit_id;


assign csr_sys_evt_sender_err_f_unit_id   = csr_sys_evt_sender_err_global_f_unit_id[\=wFUnitId-1=\:0];
assign csr_sys_evt_receiver_err_f_unit_id = csr_sys_evt_receiver_err_global_f_unit_id[\=wFUnitId-1=\:0];

\jsbegin
//=============================================================================
// Module instantiation
//=============================================================================
\jsend

    \jsbegin
        var params = {};

        params['assertOn']          = assertOn;

        params['nLocalCAgents']     = nLocalCAgents;
        params['nLocalDCEs']        = nLocalDCEs;
        params['nGlobalDVEs']       = nGlobalDVEs;

        params['wSnoopEnables']     = wSnoopEnables;
        params['nSnoopAgents']      = nSnoopAgents;

	params['useSysEvtBroadcaster'] = useSysEvtBroadcaster;
        params['nEventAgentsForSender'] = nEventAgentsForSender;
        params['nEventAgentsForReceiver'] = nEventAgentsForReceiver;

        params['wEventTimeout'] = wEventTimeout;
        params['wProtocolTimeout'] = wProtocolTimeout;

        params['wChipletId']     = wChipletId;
        params['wGlobalFUnitId'] = wGlobalFUnitId;
        params['wFUnitId']    = wFUnitId;
        params['wNUnitId']    = wNUnitId;
        params['wMessageId']  = wMessageId;
        params['wSysReqOp']   = wSysReqOp;

        var ports = {};

        ports['clk']                        = 'clk';
        ports['reset_n']                    = 'reset_n';

        if (wChipletId > 0) {
        ports['my_chiplet_id']              = 'my_chiplet_id';
        }

        ports['busy']                       = 'busy';

        ports['my_target_id'] = 'my_target_global_f_unit_id';

            for (var i=0; i < nLocalCAgents; i++) {
        ports['local_caching_agent'+i+'_target_id'] = 'local_caching_agent'+i+'_target_global_f_unit_id';
            }
            for (var i=0; i < nLocalDCEs; i++) {
        ports['local_dce'+i+'_target_id'] = 'local_dce'+i+'_target_global_f_unit_id';
            }
            for (var i=0; i < nGlobalDVEs; i++) {
        ports['global_dve'+i+'_target_id'] = 'global_dve'+i+'_target_global_f_unit_id';
            }
        ports['dve_enables_for_sysco'] = 'dve_enables_for_sysco';
        ports['dve_enables_for_sysev'] = 'dve_enables_for_sysev';

        ports['csr_event_timeout_value']    = 'csr_event_timeout_value';


        ports['csr_sys_evt_protocol_timeout_value'] = 'csr_sys_evt_protocol_timeout_value';

        ports['csr_sys_evt_sender_enable']  = 'csr_sys_evt_sender_enable';
        ports['csr_sys_evt_sender_err_vld'] = 'csr_sys_evt_sender_err_vld';
        ports['csr_sys_evt_sender_err_global_f_unit_id'] = 'csr_sys_evt_sender_err_global_f_unit_id';
        ports['csr_sys_evt_sender_err_protocol_sys']     = 'csr_sys_evt_sender_err_protocol_sys';
        ports['csr_sys_evt_sender_err_protocol_timeout'] = 'csr_sys_evt_sender_err_protocol_timeout';
        ports['csr_sys_evt_sender_err_event_timeout']    = 'csr_sys_evt_sender_err_event_timeout';
            for (var i=0; i < nEventAgentsForSender; i++) {
        ports['event'+i+'_target_id'] = 'event'+i+'_target_global_f_unit_id';
            }


        ports['csr_sys_evt_receiver_enable']  = 'csr_sys_evt_receiver_enable';
        ports['csr_sys_evt_receiver_err_vld'] = 'csr_sys_evt_receiver_err_vld';
        ports['csr_sys_evt_receiver_err_event_timeout'] = 'csr_sys_evt_receiver_err_event_timeout';
        ports['csr_sys_evt_receiver_err_global_f_unit_id'] = 'csr_sys_evt_receiver_err_global_f_unit_id';



        ports['csr_sys_coh_receiver_err_vld'] = 'csr_sys_coh_receiver_err_vld';
        ports['csr_sys_coh_receiver_err_f_unit_id'] = 'csr_sys_coh_receiver_err_f_unit_id';
        ports['snoop_enables'] = 'snoop_enables';
        ports['snoop_enables_update'] = 'snoop_enables_update';
        ports['csr_snoop_enables'] = 'csr_snoop_enables';
        ports['csr_snoop_enables_update'] = 'csr_snoop_enables_update';
                for (var i=0; i < nSnoopAgents; i++) {
        ports['aiu'+i+'_f_unit_id'] = 'aiu'+i+'_f_unit_id';
        ports['aiu'+i+'_n_unit_id'] = 'aiu'+i+'_n_unit_id';
                }


        ports['outstanding_snoop_count_zero'] = 'outstanding_snoop_count_zero';


        ports['sender_sysreq_valid'] = 'sender_sysreq_valid';
        ports['sender_sysreq_ready'] = 'sender_sysreq_ready';
        ports['sender_sysreq_requestor_id']  = 'sender_sysreq_requestor_global_f_unit_id';
        ports['sender_sysreq_target_id']     = 'sender_sysreq_target_global_f_unit_id';
        ports['sender_sysreq_message_id'] = 'sender_sysreq_message_id';
        ports['sender_sysreq_op'] = 'sender_sysreq_op';

        ports['sender_sysrsp_valid'] = 'sender_sysrsp_valid';
        ports['sender_sysrsp_ready'] = 'sender_sysrsp_ready';
        ports['sender_sysrsp_rmessage_id'] = 'sender_sysrsp_rmessage_id';
        ports['sender_sysrsp_cmstatus'] = 'sender_sysrsp_cmstatus';
        ports['sender_sysrsp_initiator_id'] = 'sender_sysrsp_initiator_global_f_unit_id';



        ports['receiver_sysreq_valid'] = 'receiver_sysreq_valid';
        ports['receiver_sysreq_ready'] = 'receiver_sysreq_ready';
        ports['receiver_sysreq_initiator_id'] = 'receiver_sysreq_initiator_global_f_unit_id';
        ports['receiver_sysreq_requestor_id'] = 'receiver_sysreq_requestor_global_f_unit_id';
        ports['receiver_sysreq_message_id'] = 'receiver_sysreq_message_id';
        ports['receiver_sysreq_cmstatus'] = 'receiver_sysreq_cmstatus';
        ports['receiver_sysreq_op'] = 'receiver_sysreq_op';

        ports['receiver_sysrsp_valid'] = 'receiver_sysrsp_valid';
        ports['receiver_sysrsp_ready'] = 'receiver_sysrsp_ready';
        ports['receiver_sysrsp_target_id'] = 'receiver_sysrsp_target_global_f_unit_id';
        ports['receiver_sysrsp_rmessage_id'] = 'receiver_sysrsp_rmessage_id';
        ports['receiver_sysrsp_cmstatus'] = 'receiver_sysrsp_cmstatus';

    \jsend
        \=obj.lib.instance({
            instanceName: 'u_sys_evt_coh_wrapper',
            moduleName: 'dve_sys_evt_coh_wrapper',
            params: params,
            ports: ports
        })=\

\jsbegin
//=============================================================================
// Sender
//=============================================================================
/* istanbul ignore else env ncore_3p6, ncore_3p7 */
\jsend
assign sys_req_tx_cm_status  = \=sysReqTxInterface["cm_status"]=\'b0;
assign sys_req_tx_r_message_id = \=sysReqTxInterface["r_message_id"]=\'b0;

    \js if (wChipletId > 0) {

wire [\=wChipletId-1=\:0] sender_sysreq_target_chiplet_id;
wire [\=wFUnitId-1=\:0] sender_sysreq_target_f_unit_id;

assign { sender_sysreq_target_chiplet_id, sender_sysreq_target_f_unit_id } = sender_sysreq_target_global_f_unit_id;

assign sys_req_tx_target_id = {
            \js if (wTargetId == (wChipletId+wLinkId+wFUnitId+wFPortId)) {
        sender_sysreq_target_chiplet_id,
                \js if (wLinkId > 0) {
        \=wLinkId=\'h0,
                \js }
            \js }
        sender_sysreq_target_f_unit_id,
        \=wFPortId=\'b0
                              };

        \js if (sysReqTxInterface.requestor_id > 0) {
assign sys_req_tx_requestor_id = sender_sysreq_requestor_global_f_unit_id;
        \js }

assign sys_req_tx_initiator_id = {
            \js if (wInitiatorId == (wChipletId+wLinkId+wFUnitId+wFPortId)) {
        my_chiplet_id,
                \js if (wLinkId > 0) {
        \=wLinkId=\'h0,
                \js }
            \js }
        my_f_unit_id,
        \=wFPortId=\'d0
                                 };

    \js } else {

assign sys_req_tx_target_id  = {sender_sysreq_target_global_f_unit_id, \=wFPortId=\'b0};

        \js if (sysReqTxInterface.requestor_id > 0) {
assign sys_req_tx_requestor_id  = sender_sysreq_requestor_global_f_unit_id;
        \js }

assign sys_req_tx_initiator_id = {my_f_unit_id, \=wFPortId=\'d0};

    \js }

assign sys_req_tx_cm_type = \=cmType.SysReq=\;
assign sys_req_tx_message_id = sender_sysreq_message_id;
assign sys_req_tx_sys_req_op = sender_sysreq_op;

assign sys_req_tx_valid = sender_sysreq_valid;
assign sender_sysreq_ready = sys_req_tx_ready;

wire sys_rsp_rx_cm_status_transport_err = sys_rsp_rx_valid & (sys_rsp_rx_cm_status[7:6] == 2'b11);

wire sys_rsp_rx_target_id_mismatch = sys_rsp_rx_valid & (sys_rsp_rx_target_id[\=wFUnitId+wFPortId-1=\:\=wFPortId=\] != my_f_unit_id);

assign sender_sysrsp_valid = sys_rsp_rx_valid & ~(sys_rsp_rx_cm_status_transport_err | sys_rsp_rx_target_id_mismatch);
assign sys_rsp_rx_ready = sender_sysrsp_ready | (sys_rsp_rx_cm_status_transport_err | sys_rsp_rx_target_id_mismatch);

assign sender_sysrsp_rmessage_id = sys_rsp_rx_r_message_id;
assign sender_sysrsp_cmstatus = sys_rsp_rx_cm_status;

wire [\=wFUnitId-1=\:0] sys_rsp_rx_initiator_f_unit_id = sys_rsp_rx_initiator_id[\=wFUnitId+wFPortId-1=\:\=wFPortId=\];

    \js if (wChipletId > 0) {

wire [\=wChipletId-1=\:0] sys_rsp_rx_initiator_chiplet_id = sys_rsp_rx_initiator_id[\=wTargetId-1=\:\=wTargetId-wChipletId=\];

assign sender_sysrsp_initiator_global_f_unit_id = {sys_rsp_rx_initiator_chiplet_id, sys_rsp_rx_initiator_f_unit_id};

    \js } else {

assign sender_sysrsp_initiator_global_f_unit_id = sys_rsp_rx_initiator_f_unit_id;

    \js }

    \js if (wHProt) {
assign sys_req_tx_h_prot = \=wHProt=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wTTier) {
    \jsend
assign sys_req_tx_t_tier = \=wTTier=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wSteering) {
    \jsend
assign sys_req_tx_steering = \=wSteering=\'b0;
    \js }
    \js if (wPriority) {
assign sys_req_tx_priority = \=wPriority=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wQl) {
    \jsend
assign sys_req_tx_ql = \=wQl=\'b0;
    \js }
    \js if (wMProt_sysReq) {
assign sys_req_tx_m_prot = \=wMProt_sysReq=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore else env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wTM_sys_req) {
    \jsend
assign sys_req_tx_tm = \=wTM_sys_req=\'b0;
    \js }



\jsbegin
//=============================================================================
// Receiver
//=============================================================================
\jsend

wire sys_req_rx_cm_status_transport_err = sys_req_rx_valid & (sys_req_rx_cm_status[7:6] == 2'b11);

wire sys_req_rx_target_id_mismatch = sys_req_rx_valid & (sys_req_rx_target_id[\=wFUnitId+wFPortId-1=\:\=wFPortId=\] != my_f_unit_id);

assign receiver_sysreq_valid = sys_req_rx_valid & ~(sys_req_rx_cm_status_transport_err | sys_req_rx_target_id_mismatch);
assign sys_req_rx_ready = receiver_sysreq_ready | (sys_req_rx_cm_status_transport_err | sys_req_rx_target_id_mismatch);


wire [\=wFUnitId-1=\:0] sys_req_rx_initiator_f_unit_id = sys_req_rx_initiator_id[\=wFUnitId+wFPortId-1=\:\=wFPortId=\];





\js if (wChipletId > 0) {

wire [\=wChipletId-1=\:0] sys_req_rx_initiator_chiplet_id = sys_req_rx_initiator_id[\=wInitiatorId-1=\:\=wInitiatorId-wChipletId=\];

assign receiver_sysreq_initiator_global_f_unit_id = {sys_req_rx_initiator_chiplet_id, sys_req_rx_initiator_f_unit_id};
        \js if (sysReqRxInterface.requestor_id > 0) {
assign receiver_sysreq_requestor_global_f_unit_id = sys_req_rx_requestor_id;
        \js } else {
assign receiver_sysreq_requestor_global_f_unit_id = {sys_req_rx_initiator_chiplet_id, sys_req_rx_initiator_f_unit_id};
        \js }

\js } else {

assign receiver_sysreq_initiator_global_f_unit_id = sys_req_rx_initiator_f_unit_id;
        \js if (sysReqRxInterface.requestor_id > 0) {
assign receiver_sysreq_requestor_global_f_unit_id = sys_req_rx_requestor_id;
        \js } else {
assign receiver_sysreq_requestor_global_f_unit_id = sys_req_rx_initiator_f_unit_id;
        \js }

\js }

assign receiver_sysreq_message_id = sys_req_rx_message_id;
assign receiver_sysreq_cmstatus = sys_req_rx_cm_status;
assign receiver_sysreq_op = sys_req_rx_sys_req_op;


assign sys_rsp_tx_valid = receiver_sysrsp_valid;
assign receiver_sysrsp_ready = sys_rsp_tx_ready;

\js if (wChipletId > 0) {
wire [\=wChipletId-1=\:0] receiver_sysrsp_target_chiplet_id;
\js }
wire [\=wFUnitId-1=\:0] receiver_sysrsp_target_f_unit_id;

assign {
            \js if (wChipletId > 0) {
       receiver_sysrsp_target_chiplet_id,
            \js }

       receiver_sysrsp_target_f_unit_id

       } = receiver_sysrsp_target_global_f_unit_id;

\js if (wChipletId > 0) {

assign sys_rsp_tx_target_id = {
            \js if (wTargetId == (wChipletId+wLinkId+wFUnitId+wFPortId)) {
       receiver_sysrsp_target_chiplet_id,
                \js if (wLinkId > 0) {
       \=wLinkId=\'h0,
                \js }
            \js }
       receiver_sysrsp_target_f_unit_id,
       \=wFPortId=\'b0
                              };

\js } else {

assign sys_rsp_tx_target_id = {receiver_sysrsp_target_f_unit_id, \=wFPortId=\'b0};

\js }

assign sys_rsp_tx_r_message_id = receiver_sysrsp_rmessage_id;
assign sys_rsp_tx_cm_status = receiver_sysrsp_cmstatus;

\js if (wChipletId > 0) {

assign sys_rsp_tx_initiator_id = {
            \js if (wInitiatorId == (wChipletId+wLinkId+wFUnitId+wFPortId)) {
       my_chiplet_id,
                \js if (wLinkId > 0) {
       \=wLinkId=\'h0,
                \js }
            \js }
       my_f_unit_id,
       \=wFPortId=\'d0
                                 };

\js } else {

assign sys_rsp_tx_initiator_id = {my_f_unit_id, \=wFPortId=\'d0};

\js }

assign sys_rsp_tx_cm_type = \=cmType.SysRsp=\;
assign sys_rsp_tx_message_id = \=sysRspTxInterface["message_id"]=\'b0;

    \js if (wHProt) {
assign sys_rsp_tx_h_prot = \=wHProt=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wTTier) {
    \jsend
assign sys_rsp_tx_t_tier = \=wTTier=\'b0;
    \js }
    \js if (wPriority) {
assign sys_rsp_tx_priority = \=wPriority=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore if env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wQl) {
    \jsend
assign sys_rsp_tx_ql = \=wQl=\'b0;
    \js }
    \js if (wMProt_sysRsp) {
assign sys_rsp_tx_m_prot = \=wMProt_sysRsp=\'b0;
    \js }
    \jsbegin
    /* istanbul ignore else env ncore_3p2, ncore_3p4, ncore_3p6, ncore_3p7 */
    if (wTM_sys_rsp) {
    \jsend
assign sys_rsp_tx_tm = \=wTM_sys_rsp=\'b0;
    \js }



endmodule
