\jsbegin
//=============================================================================
// Copyright(C) 2021 Arteris, Inc.
// All rights reserved
//=============================================================================
// System Event and Coherency Wrapper
//
// Author: Boon Chuan
//=============================================================================
\jsend

\jsbegin

var u = obj.lib;

u.paramDefault('assertOn','int',0);

var assertOn = u.getParam('assertOn');

var wSnoopEnables       = u.getParam('wSnoopEnables');
var nSnoopAgents        = u.getParam('nSnoopAgents');

var useSysEvtBroadcaster    = u.getParam('useSysEvtBroadcaster');
var nEventAgentsForSender   = u.getParam('nEventAgentsForSender');
var nEventAgentsForReceiver = u.getParam('nEventAgentsForReceiver');

var wEventTimeout       = u.getParam('wEventTimeout');
var wProtocolTimeout    = u.getParam('wProtocolTimeout');

var wChipletId          = u.getParam('wChipletId');
var wGlobalFUnitId      = u.getParam('wGlobalFUnitId');
var wFUnitId            = u.getParam('wFUnitId');
var wNUnitId            = u.getParam('wNUnitId');
var wMessageId          = u.getParam('wMessageId');
var wSysReqOp           = u.getParam('wSysReqOp');

var nGlobalDVEs         = u.getParam('nGlobalDVEs');
var nLocalDCEs          = u.getParam('nLocalDCEs');
var nLocalCAgents       = u.getParam('nLocalCAgents');

\jsend

\jsbegin
//=============================================================================
// Ports
//=============================================================================
\jsend

\jsbegin

u.port('input',  'clk',      1);
u.port('input',  'reset_n',  1);

    if (wChipletId > 0) {
u.port('input',  'my_chiplet_id', wChipletId);
    }

u.port('output', 'busy',     1);

u.port('input',  'my_target_id', wGlobalFUnitId);

    for (var i=0; i < nLocalCAgents; i++) {
u.port('input',  'local_caching_agent'+i+'_target_id', wGlobalFUnitId);
    }
    for (var i=0; i < nLocalDCEs; i++) {
u.port('input',  'local_dce'+i+'_target_id', wGlobalFUnitId);
    }
    for (var i=0; i < nGlobalDVEs; i++) {
u.port('input',  'global_dve'+i+'_target_id', wGlobalFUnitId);
    }
u.port('input',  'dve_enables_for_sysco', nGlobalDVEs);
u.port('input',  'dve_enables_for_sysev', nGlobalDVEs);

u.port('input',  'csr_event_timeout_value', wEventTimeout);
u.port('input',  'csr_sys_evt_protocol_timeout_value', wProtocolTimeout);

u.port('input',  'csr_sys_evt_sender_enable', 1);
u.port('output', 'csr_sys_evt_sender_err_vld', 1);
u.port('output', 'csr_sys_evt_sender_err_global_f_unit_id', wGlobalFUnitId);
u.port('output', 'csr_sys_evt_sender_err_protocol_sys', 1);
u.port('output', 'csr_sys_evt_sender_err_protocol_timeout', 1);
u.port('output', 'csr_sys_evt_sender_err_event_timeout', 1);
        for (var i=0; i < nEventAgentsForSender; i++) {
u.port('input', 'event'+i+'_target_id', wGlobalFUnitId);
        }


u.port('input',  'csr_sys_evt_receiver_enable', 1);
u.port('output', 'csr_sys_evt_receiver_err_vld', 1);
u.port('output', 'csr_sys_evt_receiver_err_event_timeout', 1);
u.port('output', 'csr_sys_evt_receiver_err_global_f_unit_id', wGlobalFUnitId);


u.port('output', 'csr_sys_coh_receiver_err_vld', 1);
u.port('output', 'csr_sys_coh_receiver_err_f_unit_id', wFUnitId);
u.port('output', 'snoop_enables', wSnoopEnables);
u.port('output', 'snoop_enables_update', 1);
u.port('input',  'csr_snoop_enables', wSnoopEnables);
u.port('input',  'csr_snoop_enables_update', 1);
        for (var i=0; i < nSnoopAgents; i++) {
u.port('input', 'aiu'+i+'_f_unit_id', wFUnitId);
u.port('input', 'aiu'+i+'_n_unit_id', wNUnitId);
        }

u.port('input',  'outstanding_snoop_count_zero', nSnoopAgents);


u.port('output', 'sender_sysreq_valid', 1);
u.port('input',  'sender_sysreq_ready', 1);
u.port('output', 'sender_sysreq_requestor_id', wGlobalFUnitId);
u.port('output', 'sender_sysreq_target_id', wGlobalFUnitId);
u.port('output', 'sender_sysreq_message_id', wMessageId);
u.port('output', 'sender_sysreq_op', wSysReqOp); // 0=NOP 1=Attach 2=Detach 3=Event

u.port('input',  'sender_sysrsp_valid', 1);
u.port('output', 'sender_sysrsp_ready', 1);
u.port('input',  'sender_sysrsp_rmessage_id', wMessageId);
u.port('input',  'sender_sysrsp_cmstatus', 8);
u.port('input',  'sender_sysrsp_initiator_id', wGlobalFUnitId);


u.port('input',  'receiver_sysreq_valid', 1);
u.port('output', 'receiver_sysreq_ready', 1);
u.port('input',  'receiver_sysreq_initiator_id', wGlobalFUnitId);
u.port('input',  'receiver_sysreq_requestor_id', wGlobalFUnitId);
u.port('input',  'receiver_sysreq_message_id', wMessageId);
u.port('input',  'receiver_sysreq_cmstatus', 8);
u.port('input',  'receiver_sysreq_op', wSysReqOp); // 0=NOP 1=Attach 2=Detach 3=Event

u.port('output', 'receiver_sysrsp_valid', 1);
u.port('input',  'receiver_sysrsp_ready', 1);
u.port('output', 'receiver_sysrsp_target_id', wGlobalFUnitId);
u.port('output', 'receiver_sysrsp_rmessage_id', wMessageId);
u.port('output', 'receiver_sysrsp_cmstatus', 8);


\jsend

module \=u.getModuleName()=\ (\=u.getPorts('\n')=\);

\jsbegin
//=============================================================================
// Wires
//=============================================================================
\jsend

wire [\=wSysReqOp-1=\:0] SYSREQ_OP_NOP    = \=wSysReqOp=\'d0;
wire [\=wSysReqOp-1=\:0] SYSREQ_OP_ATTACH = \=wSysReqOp=\'d1;
wire [\=wSysReqOp-1=\:0] SYSREQ_OP_DETACH = \=wSysReqOp=\'d2;
wire [\=wSysReqOp-1=\:0] SYSREQ_OP_EVENT  = \=wSysReqOp=\'d3;

wire [\=wMessageId-1=\:0] EVT_SENDER_MESSAGE_ID = \=wMessageId=\'d0;
wire [\=wMessageId-1=\:0] BCT_SENDER_MESSAGE_ID = \=wMessageId=\'d1;


wire evt_sender_busy;
wire csr_sys_evt_protocol_timeout_err;
wire csr_sys_evt_event_timeout_err;
wire csr_sys_evt_protocol_cmstatus_err;
wire [7:0] csr_sys_evt_protocol_cmstatus;
wire evt_sender_sysreq_valid;
wire evt_sender_sysreq_ready;
wire [\=wGlobalFUnitId-1=\:0] evt_sender_sysreq_requestor_id;
wire [\=wGlobalFUnitId-1=\:0] evt_sender_sysreq_target_id;
wire [\=wSysReqOp-1=\:0] evt_sender_sysreq_op;
wire evt_sender_sysrsp_valid;
wire evt_sender_sysrsp_ready;
wire [7:0] evt_sender_sysrsp_cmstatus;
wire [\=wGlobalFUnitId-1=\:0] evt_sender_sysrsp_initiator_id;


wire evt_receiver_busy;
wire evt_receiver_sysreq_valid;
wire evt_receiver_sysreq_ready;
wire [\=wGlobalFUnitId-1=\:0] evt_receiver_sysreq_initiator_id;
wire [\=wGlobalFUnitId-1=\:0] evt_receiver_sysreq_requestor_id;
wire [\=wMessageId-1=\:0] evt_receiver_sysreq_message_id;
wire [7:0] evt_receiver_sysreq_cmstatus;
wire [\=wSysReqOp-1=\:0] evt_receiver_sysreq_op;
wire evt_receiver_sysrsp_valid;
wire evt_receiver_sysrsp_ready;
wire [\=wGlobalFUnitId-1=\:0] evt_receiver_sysrsp_target_id;
wire [\=wMessageId-1=\:0] evt_receiver_sysrsp_rmessage_id;
wire [7:0] evt_receiver_sysrsp_cmstatus;


wire coh_receiver_busy;
wire coh_receiver_sysreq_valid;
wire coh_receiver_sysreq_ready;
wire [\=wFUnitId-1=\:0] coh_receiver_sysreq_requestor_f_unit_id;
wire [\=wMessageId-1=\:0] coh_receiver_sysreq_message_id;
wire [7:0] coh_receiver_sysreq_cmstatus;
wire [\=wSysReqOp-1=\:0] coh_receiver_sysreq_op;
wire coh_receiver_sysrsp_valid;
wire coh_receiver_sysrsp_ready;
wire [\=wFUnitId-1=\:0] coh_receiver_sysrsp_target_f_unit_id;
wire [\=wMessageId-1=\:0] coh_receiver_sysrsp_rmessage_id;
wire [7:0] coh_receiver_sysrsp_cmstatus;

wire [\=wGlobalFUnitId-1=\:0] coh_receiver_sysrsp_target_id;


wire bct_busy;

wire bct_receiver_sysreq_valid;
wire bct_receiver_sysreq_ready;
wire [\=wFUnitId-1=\:0] bct_receiver_sysreq_initiator_f_unit_id;
wire [\=wGlobalFUnitId-1=\:0] bct_receiver_sysreq_initiator_id;
wire [\=wGlobalFUnitId-1=\:0] bct_receiver_sysreq_requestor_id;
wire [\=wMessageId-1=\:0] bct_receiver_sysreq_message_id;
wire [7:0] bct_receiver_sysreq_cmstatus;
wire [\=wSysReqOp-1=\:0] bct_receiver_sysreq_op;
wire bct_receiver_sysrsp_valid;
wire bct_receiver_sysrsp_ready;
wire [\=wFUnitId-1=\:0] bct_receiver_sysrsp_target_f_unit_id;
wire [\=wGlobalFUnitId-1=\:0] bct_receiver_sysrsp_target_id;
wire [\=wMessageId-1=\:0] bct_receiver_sysrsp_rmessage_id;
wire [7:0] bct_receiver_sysrsp_cmstatus;

wire bct_sender_sysreq_valid;
wire bct_sender_sysreq_ready;
wire [\=wGlobalFUnitId-1=\:0] bct_sender_sysreq_requestor_id;
wire [\=wGlobalFUnitId-1=\:0] bct_sender_sysreq_target_id;
wire [\=wSysReqOp-1=\:0] bct_sender_sysreq_op;
wire [7:0] bct_sender_sysreq_cmstatus;
wire bct_sender_sysrsp_valid;
wire bct_sender_sysrsp_ready;
wire [7:0] bct_sender_sysrsp_cmstatus;
wire [\=wGlobalFUnitId-1=\:0] bct_sender_sysrsp_initiator_id;
wire [\=wMessageId-1=\:0] bct_sender_sysrsp_rmessage_id;

wire bct_sender_sysreq_target_id_is_me;

\jsbegin
//=============================================================================
// Sys.Event Broadcaster
//=============================================================================
\jsend

    \jsbegin
        var sysev_broadcast_params = {
            wChipletId              : wChipletId,
            wGlobalFUnitId          : wGlobalFUnitId,
            wFUnitId                : wFUnitId,
            wMessageId              : wMessageId,
            wSysReqOp               : wSysReqOp,
            wEventTimeout           : wEventTimeout,
            nEventAgentsForReceiver : nEventAgentsForReceiver,
	    useSysEvtBroadcaster    : useSysEvtBroadcaster,
            nEventAgentsForSender   : nEventAgentsForSender,
            nGlobalDVEs             : nGlobalDVEs,
            wProtocolTimeout        : wProtocolTimeout
        };
        var instance_ports_for_sysev_broadcast = {
            clk                           : 'clk',
            reset_n                       : 'reset_n',
            my_target_id                  : 'my_target_id',
            evt_receiver_busy             : 'evt_receiver_busy',
            csr_sys_evt_receiver_enable   : 'csr_sys_evt_receiver_enable',
            csr_sys_evt_receiver_err_vld  : 'csr_sys_evt_receiver_err_vld',
            csr_sys_evt_receiver_err_event_timeout : 'csr_sys_evt_receiver_err_event_timeout',
            csr_sys_evt_receiver_err_global_f_unit_id : 'csr_sys_evt_receiver_err_global_f_unit_id',
            csr_event_timeout_value       : 'csr_event_timeout_value',
            in_sysreq_valid               : 'evt_receiver_sysreq_valid',
            in_sysreq_ready               : 'evt_receiver_sysreq_ready',
            in_sysreq_initiator_id        : 'evt_receiver_sysreq_initiator_id',
            in_sysreq_requestor_id        : 'evt_receiver_sysreq_requestor_id',
            in_sysreq_message_id          : 'evt_receiver_sysreq_message_id',
            in_sysreq_cmstatus            : 'evt_receiver_sysreq_cmstatus',
            in_sysreq_op                  : 'evt_receiver_sysreq_op',
            in_sysrsp_valid               : 'evt_receiver_sysrsp_valid',
            in_sysrsp_ready               : 'evt_receiver_sysrsp_ready',
            in_sysrsp_target_id           : 'evt_receiver_sysrsp_target_id',
            in_sysrsp_rmessage_id         : 'evt_receiver_sysrsp_rmessage_id',
            in_sysrsp_cmstatus            : 'evt_receiver_sysrsp_cmstatus',

            evt_sender_busy                   : 'evt_sender_busy',
            csr_protocol_timeout_value        : 'csr_sys_evt_protocol_timeout_value',
            csr_sys_evt_sender_enable         : 'csr_sys_evt_sender_enable',
            csr_sys_evt_sender_err_vld        : 'csr_sys_evt_sender_err_vld',
            csr_sys_evt_sender_err_global_f_unit_id : 'csr_sys_evt_sender_err_global_f_unit_id',
            csr_sys_evt_sender_err_protocol_sys     : 'csr_sys_evt_sender_err_protocol_sys',
            csr_sys_evt_sender_err_protocol_timeout : 'csr_sys_evt_sender_err_protocol_timeout',
            csr_sys_evt_sender_err_event_timeout    : 'csr_sys_evt_sender_err_event_timeout',
            out_sysreq_valid                  : 'evt_sender_sysreq_valid',
            out_sysreq_ready                  : 'evt_sender_sysreq_ready',
            out_sysreq_target_id              : 'evt_sender_sysreq_target_id',
            out_sysreq_requestor_id           : 'evt_sender_sysreq_requestor_id',
            out_sysreq_op                     : 'evt_sender_sysreq_op',
            out_sysrsp_valid                  : 'evt_sender_sysrsp_valid',
            out_sysrsp_ready                  : 'evt_sender_sysrsp_ready',
            out_sysrsp_cmstatus               : 'evt_sender_sysrsp_cmstatus',
            out_sysrsp_initiator_id           : 'evt_sender_sysrsp_initiator_id'
        };
        for (var i=0; i < nEventAgentsForSender; i++) {
            instance_ports_for_sysev_broadcast['event'+i+'_target_id'] = 'event'+i+'_target_id';
        }

            instance_ports_for_sysev_broadcast['global_dve_enables'] = 'dve_enables_for_sysev';
        for (var i=0; i < nGlobalDVEs; i++) {
            instance_ports_for_sysev_broadcast['global_dve'+i+'_target_id'] = 'global_dve'+i+'_target_id';
        }

        if (wChipletId > 0) {
            instance_ports_for_sysev_broadcast['my_chiplet_id'] = 'my_chiplet_id';
        }
    \jsend
        \=obj.lib.instance({
            instanceName: 'u_sysev_broadcast',
            moduleName: 'dve_sysev_broadcast',
            params: sysev_broadcast_params,
            verilogParams: {},
            ports: instance_ports_for_sysev_broadcast,
            portsDelimiter: '\n    '
        })=\

\jsbegin
//=============================================================================
// SysCo Broadcaster
//=============================================================================
\jsend

    \jsbegin
        var sysco_broadcast_params = {
            assertOn           : assertOn,
            wChipletId         : wChipletId,
            wGlobalFUnitId     : wGlobalFUnitId,
            wFUnitId           : wFUnitId,
            wMessageId         : wMessageId,
            wSysReqOp          : wSysReqOp,
            nSnoopAgents       : nSnoopAgents,
            nGlobalDVEs        : nGlobalDVEs,
            nLocalCAgents      : nLocalCAgents,
            nLocalDCEs         : nLocalDCEs
        };
        var instance_ports_for_sysco_broadcast = {
            clk                             : 'clk',
            reset_n                         : 'reset_n',
            busy                            : 'bct_busy',
            in_sysreq_valid                 : 'bct_receiver_sysreq_valid',
            in_sysreq_ready                 : 'bct_receiver_sysreq_ready',
            in_sysreq_cmstatus              : 'bct_receiver_sysreq_cmstatus',
            in_sysreq_initiator_id          : 'bct_receiver_sysreq_initiator_id',
            in_sysreq_requestor_id          : 'bct_receiver_sysreq_requestor_id',
            in_sysreq_msgid                 : 'bct_receiver_sysreq_message_id',
            in_sysreq_op                    : 'bct_receiver_sysreq_op',
            out_sysreq_valid                : 'bct_sender_sysreq_valid',
            out_sysreq_ready                : 'bct_sender_sysreq_ready',
            out_sysreq_cmstatus             : 'bct_sender_sysreq_cmstatus',
            out_sysreq_target_id            : 'bct_sender_sysreq_target_id',
            out_sysreq_requestor_id         : 'bct_sender_sysreq_requestor_id',
            out_sysreq_op                   : 'bct_sender_sysreq_op',
            out_sysrsp_valid                : 'bct_sender_sysrsp_valid',
            out_sysrsp_ready                : 'bct_sender_sysrsp_ready',
            out_sysrsp_initiator_id         : 'bct_sender_sysrsp_initiator_id',
            out_sysrsp_cmstatus             : 'bct_sender_sysrsp_cmstatus',
            in_sysrsp_valid                 : 'bct_receiver_sysrsp_valid',
            in_sysrsp_ready                 : 'bct_receiver_sysrsp_ready',
            in_sysrsp_target_id             : 'bct_receiver_sysrsp_target_id',
            in_sysrsp_msgid                 : 'bct_receiver_sysrsp_rmessage_id',
            in_sysrsp_cmstatus              : 'bct_receiver_sysrsp_cmstatus'
        };
            instance_ports_for_sysco_broadcast['global_dve_enables'] = 'dve_enables_for_sysco';
        for (var i=0; i < nGlobalDVEs; i++) {
            instance_ports_for_sysco_broadcast['global_dve'+i+'_target_id'] = 'global_dve'+i+'_target_id';
        }
        for (var i=0; i < nLocalCAgents; i++) {
            instance_ports_for_sysco_broadcast['local_caching_agent'+i+'_target_id'] = 'local_caching_agent'+i+'_target_id';
        }
        for (var i=0; i < nLocalDCEs; i++) {
            instance_ports_for_sysco_broadcast['local_dce'+i+'_target_id'] = 'local_dce'+i+'_target_id';
        }
        if (wChipletId > 0) {
            instance_ports_for_sysco_broadcast['my_chiplet_id'] = 'my_chiplet_id';
        }
    \jsend
        \=obj.lib.instance({
            instanceName: 'u_sysco_broadcast',
            moduleName: 'dve_sysco_broadcast',
            params: sysco_broadcast_params,
            verilogParams: {},
            ports: instance_ports_for_sysco_broadcast,
            portsDelimiter: '\n    '
        })=\

\jsbegin
//=============================================================================
// Sys.Coh Receiver
//=============================================================================
\jsend

    \jsbegin
        var sys_coh_receiver_params = {
            useSysEvtSender     : 1, //FIXME: should be 0
            wFUnitId            : wFUnitId,
            wNUnitId            : wNUnitId,
            wMessageId          : wMessageId,
            wSysReqOp           : wSysReqOp,
            nSnoopAgents        : nSnoopAgents,
            wSnoopEnables       : wSnoopEnables
        };
        var instance_ports_for_sys_coh_receiver = {
            clk                           : 'clk',
            reset_n                       : 'reset_n',
            coh_receiver_busy             : 'coh_receiver_busy',
            csr_sys_coh_receiver_err_vld  : 'csr_sys_coh_receiver_err_vld',
            csr_sys_coh_receiver_err_f_unit_id  : 'csr_sys_coh_receiver_err_f_unit_id',
            snoop_enables                 : 'snoop_enables',
            snoop_enables_update          : 'snoop_enables_update',
            csr_snoop_enables             : 'csr_snoop_enables',
            csr_snoop_enables_update      : 'csr_snoop_enables_update',
            outstanding_snoop_count_zero  : 'outstanding_snoop_count_zero',
            sysreq_valid                  : 'coh_receiver_sysreq_valid',
            sysreq_ready                  : 'coh_receiver_sysreq_ready',
            sysreq_initiator_f_unit_id    : 'coh_receiver_sysreq_requestor_f_unit_id',
            sysreq_message_id             : 'coh_receiver_sysreq_message_id',
            sysreq_cmstatus               : 'coh_receiver_sysreq_cmstatus',
            sysreq_op                     : 'coh_receiver_sysreq_op',
            sysrsp_valid                  : 'coh_receiver_sysrsp_valid',
            sysrsp_ready                  : 'coh_receiver_sysrsp_ready',
            sysrsp_target_f_unit_id       : 'coh_receiver_sysrsp_target_f_unit_id',
            sysrsp_rmessage_id            : 'coh_receiver_sysrsp_rmessage_id',
            sysrsp_cmstatus               : 'coh_receiver_sysrsp_cmstatus'
        };
        for (var i=0; i < nSnoopAgents; i++) {
            instance_ports_for_sys_coh_receiver['aiu'+i+'_f_unit_id'] = 'aiu'+i+'_f_unit_id';
            instance_ports_for_sys_coh_receiver['aiu'+i+'_n_unit_id'] = 'aiu'+i+'_n_unit_id';
        }
            instance_ports_for_sys_coh_receiver['sysrsp_detach_to_wait'] = 'evt_sender_busy';

    \jsend
        \=obj.lib.instance({
            instanceName: 'u_sys_coh_receiver',
            moduleName: 'sys_coh_receiver',
            params: sys_coh_receiver_params,
            verilogParams: {},
            ports: instance_ports_for_sys_coh_receiver,
            portsDelimiter: '\n    '
        })=\

    \js if (wChipletId > 0) {
assign coh_receiver_sysrsp_target_id = {my_chiplet_id, coh_receiver_sysrsp_target_f_unit_id};
    \js } else {
assign coh_receiver_sysrsp_target_id = coh_receiver_sysrsp_target_f_unit_id;
    \js }

\jsbegin
//=============================================================================
// Sender SysReq, SysRsp
//=============================================================================
\jsend

wire [1:0] sender_sysreq_arb__sink_ready;
wire [1:0] sender_sysreq_arb__sink_valid;
wire [1:0] sender_sysreq_arb__sink_last;
wire [1:0] sender_sysreq_arb__sink_grant;
wire sender_sysreq_arb__source_ready;
wire sender_sysreq_arb__source_valid;
wire sender_sysreq_arb__source_last;

\jsbegin
    var senderSysReqArbParams = {
        num_inputs  : 2
    };
    var instance_ports_for_sender_sysreq_arb = {
        clk                 : 'clk',
        reset_n             : 'reset_n',
        sink_ready          : 'sender_sysreq_arb__sink_ready',
        sink_valid          : 'sender_sysreq_arb__sink_valid',
        sink_last           : 'sender_sysreq_arb__sink_last',
        sink_grant          : 'sender_sysreq_arb__sink_grant',
        source_ready        : 'sender_sysreq_arb__source_ready',
        source_valid        : 'sender_sysreq_arb__source_valid',
        source_last         : 'sender_sysreq_arb__source_last'
    };
\jsend
    \=u.instance({
        instanceName: 'sender_sysreq_arb',
        moduleName: 'rr_arb_comb_mux',
        params : senderSysReqArbParams,
        verilogParams: {},
        ports: instance_ports_for_sender_sysreq_arb,
        portsDelimiter: '\n    '
    })=\

assign bct_sender_sysreq_target_id_is_me = (bct_sender_sysreq_target_id == my_target_id);

assign sender_sysreq_arb__sink_valid[0] = evt_sender_sysreq_valid;
assign sender_sysreq_arb__sink_valid[1] = bct_sender_sysreq_valid & ~bct_sender_sysreq_target_id_is_me;

assign coh_receiver_sysreq_valid        = bct_sender_sysreq_valid &  bct_sender_sysreq_target_id_is_me;

assign coh_receiver_sysreq_requestor_f_unit_id = bct_sender_sysreq_requestor_id[\=wFUnitId-1=\:0];
assign coh_receiver_sysreq_message_id          = BCT_SENDER_MESSAGE_ID;
assign coh_receiver_sysreq_cmstatus            = bct_sender_sysreq_cmstatus;
assign coh_receiver_sysreq_op                  = bct_sender_sysreq_op;

assign evt_sender_sysreq_ready = sender_sysreq_arb__sink_ready[0];
assign bct_sender_sysreq_ready = (sender_sysreq_arb__sink_ready[1] & ~bct_sender_sysreq_target_id_is_me)
                               | (coh_receiver_sysreq_ready        &  bct_sender_sysreq_target_id_is_me);

assign sender_sysreq_arb__sink_last[0] = 1'b1;
assign sender_sysreq_arb__sink_last[1] = 1'b1;

assign sender_sysreq_valid             = sender_sysreq_arb__source_valid;
assign sender_sysreq_arb__source_ready = sender_sysreq_ready;

assign sender_sysreq_requestor_id     = sender_sysreq_arb__sink_grant[0] ? evt_sender_sysreq_requestor_id : bct_sender_sysreq_requestor_id;
assign sender_sysreq_target_id        = sender_sysreq_arb__sink_grant[0] ? evt_sender_sysreq_target_id    : bct_sender_sysreq_target_id;
assign sender_sysreq_message_id       = sender_sysreq_arb__sink_grant[0] ? EVT_SENDER_MESSAGE_ID          : BCT_SENDER_MESSAGE_ID;
assign sender_sysreq_op               = sender_sysreq_arb__sink_grant[0] ? evt_sender_sysreq_op           : bct_sender_sysreq_op;

\jsbegin
//=============================================================================
// Sender SysRsp
//=============================================================================
\jsend

wire [1:0] sender_sysrsp_arb__sink_ready;
wire [1:0] sender_sysrsp_arb__sink_valid;
wire [1:0] sender_sysrsp_arb__sink_last;
wire [1:0] sender_sysrsp_arb__sink_grant;
wire sender_sysrsp_arb__source_ready;
wire sender_sysrsp_arb__source_valid;
wire sender_sysrsp_arb__source_last;

\jsbegin
    var senderSysRspArbParams = {
        num_inputs  : 2
    };
    var instance_ports_for_sender_sysrsp_arb = {
        clk                 : 'clk',
        reset_n             : 'reset_n',
        sink_ready          : 'sender_sysrsp_arb__sink_ready',
        sink_valid          : 'sender_sysrsp_arb__sink_valid',
        sink_last           : 'sender_sysrsp_arb__sink_last',
        sink_grant          : 'sender_sysrsp_arb__sink_grant',
        source_ready        : 'sender_sysrsp_arb__source_ready',
        source_valid        : 'sender_sysrsp_arb__source_valid',
        source_last         : 'sender_sysrsp_arb__source_last'
    };
\jsend
    \=u.instance({
        instanceName: 'sender_sysrsp_arb',
        moduleName: 'rr_arb_comb_mux',
        params : senderSysRspArbParams,
        verilogParams: {},
        ports: instance_ports_for_sender_sysrsp_arb,
        portsDelimiter: '\n    '
    })=\

assign evt_sender_sysrsp_cmstatus     = sender_sysrsp_cmstatus;
assign evt_sender_sysrsp_initiator_id = sender_sysrsp_initiator_id;

assign evt_sender_sysrsp_valid          = sender_sysrsp_valid & (sender_sysrsp_rmessage_id == EVT_SENDER_MESSAGE_ID);

assign sender_sysrsp_arb__sink_valid[0] = sender_sysrsp_valid & (sender_sysrsp_rmessage_id == BCT_SENDER_MESSAGE_ID);
assign sender_sysrsp_arb__sink_valid[1] = coh_receiver_sysrsp_valid;

assign sender_sysrsp_arb__sink_last[0] = 1'b1;
assign sender_sysrsp_arb__sink_last[1] = 1'b1;

assign coh_receiver_sysrsp_ready        = sender_sysrsp_arb__sink_ready[1];


assign bct_sender_sysrsp_valid = sender_sysrsp_arb__source_valid;

assign sender_sysrsp_arb__source_ready = bct_sender_sysrsp_ready;


assign sender_sysrsp_ready = (evt_sender_sysrsp_ready & (sender_sysrsp_rmessage_id == EVT_SENDER_MESSAGE_ID))
                           | (sender_sysrsp_arb__sink_ready[0]);

assign bct_sender_sysrsp_initiator_id = sender_sysrsp_arb__sink_grant[1] ? coh_receiver_sysrsp_target_id
                                                                         : sender_sysrsp_initiator_id;

assign bct_sender_sysrsp_rmessage_id  = sender_sysrsp_arb__sink_grant[1] ? coh_receiver_sysrsp_rmessage_id
                                                                         : sender_sysrsp_rmessage_id;

assign bct_sender_sysrsp_cmstatus     = sender_sysrsp_arb__sink_grant[1] ? coh_receiver_sysrsp_cmstatus
                                                                         : sender_sysrsp_cmstatus;

\js//TODO: assertion to check sender_sysrsp_rmessage_id


\jsbegin
//=============================================================================
// Receiver SysReq, SysRsp
//=============================================================================
\jsend

wire [1:0] receiver_sysrsp_arb__sink_ready;
wire [1:0] receiver_sysrsp_arb__sink_valid;
wire [1:0] receiver_sysrsp_arb__sink_last;
wire [1:0] receiver_sysrsp_arb__sink_grant;
wire receiver_sysrsp_arb__source_ready;
wire receiver_sysrsp_arb__source_valid;
wire receiver_sysrsp_arb__source_last;

\jsbegin
    var receiverSysRspArbParams = {
        num_inputs  : 2
    };
    var instance_ports_for_receiver_sysrsp_arb = {
        clk                 : 'clk',
        reset_n             : 'reset_n',
        sink_ready          : 'receiver_sysrsp_arb__sink_ready',
        sink_valid          : 'receiver_sysrsp_arb__sink_valid',
        sink_last           : 'receiver_sysrsp_arb__sink_last',
        sink_grant          : 'receiver_sysrsp_arb__sink_grant',
        source_ready        : 'receiver_sysrsp_arb__source_ready',
        source_valid        : 'receiver_sysrsp_arb__source_valid',
        source_last         : 'receiver_sysrsp_arb__source_last'
    };
\jsend
    \=u.instance({
        instanceName: 'receiver_sysrsp_arb',
        moduleName: 'rr_arb_comb_mux',
        params : receiverSysRspArbParams,
        verilogParams: {},
        ports: instance_ports_for_receiver_sysrsp_arb,
        portsDelimiter: '\n    '
    })=\

assign receiver_sysrsp_arb__sink_valid[0] = evt_receiver_sysrsp_valid;
assign receiver_sysrsp_arb__sink_valid[1] = bct_receiver_sysrsp_valid;

assign evt_receiver_sysrsp_ready = receiver_sysrsp_arb__sink_ready[0];
assign bct_receiver_sysrsp_ready = receiver_sysrsp_arb__sink_ready[1];

assign receiver_sysrsp_arb__sink_last[0] = 1'b1;
assign receiver_sysrsp_arb__sink_last[1] = 1'b1;

assign receiver_sysrsp_valid             = receiver_sysrsp_arb__source_valid;
assign receiver_sysrsp_arb__source_ready = receiver_sysrsp_ready;

assign receiver_sysrsp_target_id   = receiver_sysrsp_arb__sink_grant[0] ? evt_receiver_sysrsp_target_id   : bct_receiver_sysrsp_target_id;
assign receiver_sysrsp_rmessage_id = receiver_sysrsp_arb__sink_grant[0] ? evt_receiver_sysrsp_rmessage_id : bct_receiver_sysrsp_rmessage_id;
assign receiver_sysrsp_cmstatus    = receiver_sysrsp_arb__sink_grant[0] ? evt_receiver_sysrsp_cmstatus    : bct_receiver_sysrsp_cmstatus;


assign evt_receiver_sysreq_valid = receiver_sysreq_valid & (receiver_sysreq_op == SYSREQ_OP_EVENT);
assign bct_receiver_sysreq_valid = receiver_sysreq_valid & ((receiver_sysreq_op == SYSREQ_OP_ATTACH) | (receiver_sysreq_op == SYSREQ_OP_DETACH));

assign receiver_sysreq_ready = (evt_receiver_sysreq_valid & evt_receiver_sysreq_ready) |
                               (bct_receiver_sysreq_valid & bct_receiver_sysreq_ready);

assign evt_receiver_sysreq_initiator_id = receiver_sysreq_initiator_id;
assign evt_receiver_sysreq_requestor_id = receiver_sysreq_requestor_id;
assign evt_receiver_sysreq_message_id   = receiver_sysreq_message_id;
assign evt_receiver_sysreq_cmstatus     = receiver_sysreq_cmstatus;
assign evt_receiver_sysreq_op           = receiver_sysreq_op;

assign bct_receiver_sysreq_initiator_id = receiver_sysreq_initiator_id;
assign bct_receiver_sysreq_requestor_id = receiver_sysreq_requestor_id;
assign bct_receiver_sysreq_message_id   = receiver_sysreq_message_id;
assign bct_receiver_sysreq_cmstatus     = receiver_sysreq_cmstatus;
assign bct_receiver_sysreq_op           = receiver_sysreq_op;

\jsbegin
//=============================================================================
// Busy status
//=============================================================================
\jsend


assign busy = 1'b0
            | evt_sender_busy
            | evt_receiver_busy
            | coh_receiver_busy
            | bct_busy
            ;

endmodule
