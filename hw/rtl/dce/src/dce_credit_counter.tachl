\jsbegin
//=============================================================================
// Copyright (C) 2022 Arteris, Inc.
// All rights reserved.
//=============================================================================
// dce_credit_counter
//=============================================================================

var u = obj.lib;
var m = obj.userLib;

let ASSERT_ON = m.ParamDefaultGet(u, 'assertOn', 'int', 0);

let W_TARG_ID = m.ParamDefaultGet(u, 'wTargetId', 'int', 8);
let N_CREDITS = m.ParamDefaultGet(u, 'nCreditsPerTarget', 'int', 8);

let W_N_CREDITS = Math.max(Math.floor(Math.log2(N_CREDITS))+1, 1);

u.port('input', 'clk', 1);
u.port('input', 'reset_n', 1);
u.port('input', 'att_targ_ids', W_TARG_ID);
u.port('output','credits_not_zero', 1);

u.port('input', 'credit_req_valid', 1);
u.port('output','credit_req_ready', 1);

u.port('input', 'att_void_credit', 1);
u.port('input', 'att_void_credit_id', W_TARG_ID);

\jsend

module \=u.getModuleName()=\ (\=u.getPorts()=\ );

localparam
  N_CREDITS = \=N_CREDITS=\,
  W_N_CREDITS = \=W_N_CREDITS=\;

wire credit_inc;
wire credit_dec;
wire credit_en;
wire [W_N_CREDITS-1:0] credit_count_in;
wire [W_N_CREDITS-1:0] credit_count;

assign credit_inc = credit_req_valid & credit_req_ready;
assign credit_dec = att_void_credit & (att_void_credit_id == att_targ_ids);
assign credit_en  = credit_inc | credit_dec;
assign credit_count_in = ( credit_inc & ~credit_dec) ? (credit_count + \=W_N_CREDITS=\'d1) :
                         (~credit_inc &  credit_dec) ? (credit_count - \=W_N_CREDITS=\'d1) :
                                                        credit_count; 

\=u.dffre(W_N_CREDITS, 'credit_count', 'credit_count_in', "{W_N_CREDITS{1'b0}}", 'credit_en', 'clk', 'reset_n')=\

assign credit_req_ready = ~(credit_count == \=W_N_CREDITS=\'d\=N_CREDITS=\);

assign credits_not_zero = {|{credit_count}};

endmodule 
