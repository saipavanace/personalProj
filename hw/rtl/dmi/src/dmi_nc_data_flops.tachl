\jsbegin
//=============================================================================
// Copyright(C) 2024 Arteris, Inc.
// All rights reserved
//=============================================================================
// DMI RTT and WTT flops that are moved to the top level for protection
//
// Filename: dmi_tt_flops.tachl
//=============================================================================

var u = obj.lib;
var m = obj.userLib;
var bundleFunctions = obj.userLib.bundleFunctions;

let ASSERT_ON    = m.ParamDefaultGet(u, 'assertOn', 'int', 0);

let N_RB                      = u.getParam('N_RB');
let rb_data_alloc_bundle_width = u.getParam('rb_data_alloc_bundle_width');



u.port('input',  'clk', 1);
u.port('input',  'reset_n', 1);
u.port('input',  'en_data_buffer_vec',  N_RB);
u.port('input',  'd_data_buffer_vec', rb_data_alloc_bundle_width);
u.port('output', 'q_data_buffer_vec', N_RB * rb_data_alloc_bundle_width);


\jsend

module \=u.getModuleName()=\ (\=u.getPorts()=\);

  \js for (var i=0; i < N_RB; i++) {
  
wire [\=rb_data_alloc_bundle_width-1=\:0] q_data_buffer_bundle\=i=\;
wire en_data_buffer_bundle\=i=\;

assign q_data_buffer_vec[\=(rb_data_alloc_bundle_width*(i+1))-1=\ : \=rb_data_alloc_bundle_width*i=\] = q_data_buffer_bundle\=i=\;
assign en_data_buffer_bundle\=i=\ = en_data_buffer_vec[\=i=\];

\=u.dffre(rb_data_alloc_bundle_width, 'q_data_buffer_bundle'+i, 'd_data_buffer_vec', "{"+rb_data_alloc_bundle_width+"{1'b0}}", 'en_data_buffer_bundle'+i, 'clk', 'reset_n')=\

  \js }
  
endmodule
