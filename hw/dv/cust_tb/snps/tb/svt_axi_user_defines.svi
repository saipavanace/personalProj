<%const chipletObj = obj.lib.getAllChipletRefs();%>

<%let max_id_width=0;%>
<%for(let i=0; i< chipletObj[0].nAIUs; i+= 1){
    if(!chipletObj[0].AiuInfo[i].fnNativeInterface.includes('CHI')) {
        if (Array.isArray(chipletObj[0].AiuInfo[i].interfaces.axiInt)) {
            for (let j=0; j<chipletObj[0].AiuInfo[i].interfaces.axiInt.length; j+=1){
                if(chipletObj[0].AiuInfo[i].interfaces.axiInt[j].params.wAwId > max_id_width) {
                    max_id_width = chipletObj[0].AiuInfo[i].interfaces.axiInt[j].params.wAwId;
                    //console.log("sai_debug1");
                }
                if(chipletObj[0].AiuInfo[i].interfaces.axiInt[j].params.wArId > max_id_width) {
                    max_id_width = chipletObj[0].AiuInfo[i].interfaces.axiInt[j].params.wArId;
                    //console.log("sai_debug2"); // FIXME: check why this print is not printed when the above print is printed after uncommenting
                }
            }
        }else{
            if(chipletObj[0].AiuInfo[i].interfaces.axiInt.params.wAwId > max_id_width) {
                max_id_width = chipletObj[0].AiuInfo[i].interfaces.axiInt.params.wAwId;
            }
            if(chipletObj[0].AiuInfo[i].interfaces.axiInt.params.wArId > max_id_width) {
                max_id_width = chipletObj[0].AiuInfo[i].interfaces.axiInt.params.wArId;
            }
        }
    }
}%>
<%for(let i=0; i< chipletObj[0].nDMIs; i+=1){
    if(chipletObj[0].DmiInfo[i].interfaces.axiInt.params.wAwId > max_id_width){
        max_id_width = chipletObj[0].DmiInfo[i].interfaces.axiInt.params.wAwId;
    }
    if(chipletObj[0].DmiInfo[i].interfaces.axiInt.params.wArId > max_id_width){
        max_id_width = chipletObj[0].DmiInfo[i].interfaces.axiInt.params.wArId;
    }
}%>
<%for(let i=0; i< chipletObj[0].nDIIs; i+=1){
    if(chipletObj[0].DiiInfo[i].interfaces.axiInt.params.wAwId > max_id_width){
        max_id_width = chipletObj[0].DiiInfo[i].interfaces.axiInt.params.wAwId;
    }
    if(chipletObj[0].DiiInfo[i].interfaces.axiInt.params.wArId > max_id_width){
        max_id_width = chipletObj[0].DiiInfo[i].interfaces.axiInt.params.wArId;
    }
}%>

///////////////////////////////////////////////////////////
// Overriding ACE VIP defines with Concerto system defines
///////////////////////////////////////////////////////////

`ifndef SVT_AXI_INCLUDE_USER_DEFINES

`define SVT_AXI_INCLUDE_USER_DEFINES

`define SVT_AXI_MAX_ADDR_WIDTH                  <%=chipletObj[0].Widths.Concerto.Ndp.Body.wAddr%> 
`define SVT_AXI_MAX_DATA_WIDTH                  <%=chipletObj[0].Widths.Concerto.Dp.Data.wDpData%>
`define SVT_AXI_MAX_ID_WIDTH                    <%=max_id_width%>
`define SVT_AXI_MAX_BURST_LENGTH_WIDTH          8
`define SVT_AXI4_MAX_BURST_LENGTH               256 
`define SVT_AXI_LOCK_WIDTH                      1
`define SVT_AXI_LOCK_WIDTH_AS_ONE               1
`define SVT_AXI_SIZE_WIDTH                      3
`define SVT_AXI_BURST_WIDTH                     2
`define SVT_AXI_CACHE_WIDTH                     4
`define SVT_AXI_PROT_WIDTH                      3
`define SVT_AXI_QOS_WIDTH                       4
`define SVT_AXI_WSTRB_WIDTH                     `SVT_AXI_MAX_DATA_WIDTH/8
`define SVT_AXI_RESP_WIDTH                      4
`define SVT_AXI_MAX_CACHE_LINE_SIZE             64 
`define SVT_AXI_MAX_ADDR_USER_WIDTH             32
`define SVT_AXI_MAX_DATA_USER_WIDTH             8
`define SVT_AXI_MAX_BRESP_USER_WIDTH            8
`define SVT_AXI_MAX_NUM_CACHE_LINES             2048
`define SVT_AXI_MAX_ARVALID_DELAY 0
`define SVT_AXI_MAX_RVALID_DELAY 100
`define SVT_AXI_MAX_RREADY_DELAY 0
`define SVT_AXI_MAX_BVALID_DELAY 0
`define SVT_AXI_MAX_BREADY_DELAY 0
`define SVT_AXI_MAX_ACREADY_DELAY 0
`define SVT_AXI_MAX_CDVALID_DELAY 0
`define SVT_AXI_MAX_CRVALID_DELAY 0
`define SVT_AXI_MAX_ACVALID_DELAY 0
`define SVT_AXI_MAX_CRREADY_DELAY 0
`define SVT_AXI_MAX_CDREADY_DELAY 0
`define SVT_AXI_MAX_RACK_DELAY 0
`define SVT_AXI_MAX_WACK_DELAY 0
`define SVT_AXI_MAX_ARREADY_DELAY 0
`define SVT_AXI_MAX_AWREADY_DELAY 0
`define SVT_AXI_MAX_AWVALID_DELAY 0
`define SVT_AXI_INACTIVE_CHAN_LOW_VAL 0


`define SVT_AXI_MAX_WVALID_DELAY 0
`define SVT_AXI_MAX_WDATA_DELAY 0
`define SVT_AXI_MAX_WREADY_DELAY 0
`define SVT_AXI_MAX_READ_DATA_INTERLEAVE_SIZE   0
`define SVT_AXI_MAX_READ_DATA_REORDERING_DEPTH  1
`define SVT_AXI_MAX_NUM_SLAVES_128  1
`define SVT_AXI_MAX_NUM_MASTERS_128 1
`define SVT_AXI_MAX_NUM_OUTSTANDING_XACT        128
`define SVT_ACE5_ENABLE

`endif
