{
    "version": "0.1",
    "iter": "1",
    "plusargs": {
        "+UVM_MAX_QUIT_COUNT": "1",
        "+UVM_VERBOSITY": "UVM_NONE",
        "+UVM_TIMEOUT": "10000000000",
        "+max_interleave":"1",
        "+en_excl_txn":1,
        "+k_targ_src_id_chk_en": 1
    },
    "defines": "ASSERT_ON,COVER_ON,INHOUSE_APB_VIP,RESILIENCY_TESTING,INHOUSE_AXI",
    "ignoreJson": "$WORK_TOP/rtl/top/ignore.json",
    "tbTopTachl": "$WORK_TOP/rtl/chi_aiu/src/aiu_top.tachl",
    "pkgPath"   : "chi_aiu/tb/dvPkg.json",
    "rtlTopCoverage": "tb_top/dut.",
    "configlist": {
        "hw_cfg_resiltech_connectivity_3_fix": {
            "purpose": "Connectivity interleaving feature verification",
            "tcl_lib": "hw_config_resiltech",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_resiltech",
            "instance" : "caiu0 ",
            "exclusionsDoFile": "",
            "patFile": "",
            "label": ["weekly"],
            "qrsimoptions": "",
            "compile_args": ""
        },
        "hw_d2d_config_01": {
            "purpose": "D2D Bringup",
            "tcl_lib": "hw_d2d_config_01",
            "tcl_dir": "$MAESTRO_EXAMPLES/../base_configs/hw_d2d_config_01",
            "instance": "RNF0",
            "chiplet": "DIE_1",
            "compile_args": ""
        },
        "hw_cfg_nxpauto": {
            "purpose": "nightly regression: NXP auto config",
            "tcl_lib": "hw_config_nxpauto",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_nxpauto",
            "instance" : "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_nxpauto_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_nxpauto_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_nxpauto_waiver.json",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_nxpauto_xprop_pass": {
            "purpose": "nightly regression: NXP auto config with xprop",
            "tcl_lib": "hw_config_nxpauto",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_nxpauto",
	    "instance" : "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_config_two": {
            "purpose": "bringup",
            "tcl_lib": "hw_config_02",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_config_two", 
            "instance": "caiu1",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_two_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_config_two_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_two_waiver.json",
            "label": ["tachl_cover","regr_cov"],
            "compile_args": ""
        },
        "hw_config_two_event": {
            "purpose": "bringup",
            "defines": "FORCE_SENDER,ASSERT_ON,COVER_ON,INHOUSE_APB_VIP,RESILIENCY_TESTING,INHOUSE_AXI",
            "tcl_lib": "hw_config_02",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_config_two", 
            "instance": "caiu1",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_two_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_config_two_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_two_waiver.json",
            "label": ["tachl_cover","regr_cov"],
            "compile_args": ""
        },
        "hw_cfg_41": {
            "purpose": "bringup",
	    "tcl_lib": "hw_config_41",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_cfg_41",
            "instance": "caiu7",
            "compile_args": "",
            "label":["tachl_cover","weekly"]
        },
        "hw_cfg_41_event": {
            "purpose": "bringup",
            "defines": "FORCE_SENDER,ASSERT_ON,COVER_ON,INHOUSE_APB_VIP,RESILIENCY_TESTING,INHOUSE_AXI",           
	        "tcl_lib": "hw_config_41",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_41",
            "instance": "caiu7",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_41_1": {
            "purpose": "bringup",
	    "tcl_lib": "hw_config_41_1",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_41_1",
            "instance": "caiu7",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_41_2": {
            "purpose": "bringup",
	    "tcl_lib": "hw_config_41_2",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_41_2",
            "instance": "caiu7",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_42": {
            "purpose": "bringup",
	    "tcl_lib": "hw_config_42",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_42",
            "instance": "caiu0",
            "label": ["tachl_cover","weekly"],
            "compile_args": ""
        },
        "hw_config_two_xprop_pass": {
            "purpose": "bringup",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_2",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_20": {
            "purpose": "bringup and q_channel_testing",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_cfg_20 -y hw_config_20",
            "instance": "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_20_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_20_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_20_waiver.json",
            "label": ["tachl_cover","regr_cov"],
            "enCover": "1",
            "compile_args": ""
        },
        "hw_cfg_20_event": {
            "purpose": "bringup and q_channel_testing",
            "defines": "FORCE_SENDER,ASSERT_ON,COVER_ON,INHOUSE_APB_VIP,RESILIENCY_TESTING,INHOUSE_AXI",           
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_cfg_20 -y hw_config_20",
            "instance": "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_20_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_20_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_20_waiver.json",
            "label": ["tachl_cover","regr_cov"],
            "enCover": "0",
            "compile_args": ""
        },
        "hw_cfg_20_xprop_pass": {
            "purpose": "bringup and q_channel_testing",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_20 -y hw_config_20",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_7": {
            "purpose": "bringup and q_channel_testing",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/hw_cfg_7 -y hw_config_07", 
            "instance": "caiu3",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_7_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_waiver.json",
            "enCover": "0",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_7_xprop_xtrap": {
            "purpose": "xprop xtrap mode",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7 -y hw_config_07",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "xtrap",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_7_xprop_resolve": {
            "purpose": "xprop resolve mode",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7 -y hw_config_07",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "resolve",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_7_xprop_pass": {
            "purpose": "xprop pass mode",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7 -y hw_config_07",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_7_all_ecc": {
            "purpose": "nxp_config",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_all_ecc -y hw_config_07",
	    "instance" : "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_all_ecc_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_7_all_ecc_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_all_ecc_waiver.json",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_7_all_ecc_xprop_pass": {
            "purpose": "nxp_config",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_all_ecc -y hw_config_07",
	    "instance" : "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_cfg_7_all_parity": {
            "purpose": "nxp_config",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_all_parity -y hw_config_07",
	    "instance" : "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_all_parity_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_cfg_7_all_parity_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_cfg_7_all_parity_waiver.json",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_7_all_parity_xprop_pass": {
            "purpose": "nxp_config",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_all_parity -y hw_config_07",
	    "instance" : "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "hw_config_resiliency_placeholder": {
            "purpose": "nightly regression",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_parity -y hw_config_07",
            "compile_args": "",
	    "instance" : "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_resiliency_placeholder_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_hw_config_resiliency_placeholder_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/hw_config_resiliency_placeholder_waiver.json",
            "label": ["tachl_cover","regr_cov"],
            "defines" : "AXI4_XCHECK_OFF,ASSERT_OFF,OVL_ASSERT_OFF"
        },
        "hw_config_resiliency_placeholder_2": {
            "purpose": "nightly regression",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_2_duplication -y hw_config_02",
            "compile_args": "",
	    "instance" : "caiu0",
            "defines" : "AXI4_XCHECK_OFF,ASSERT_OFF,OVL_ASSERT_OFF",
            "label":["weekly"]
        },
        "hw_config_resiliency_placeholder_xprop_pass": {
            "purpose": "nightly regression",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_7_parity -y hw_config_07",
            "compile_args": "",
	    "instance" : "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "defines" : "AXI4_XCHECK_OFF,ASSERT_OFF,OVL_ASSERT_OFF"
        },
        "hw_cfg_7_snps": {
            "purpose": "bringup",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_config_07_synthesis/default_design -y hw_config_07",
            "instance": "caiu5",
            "enCover": "0",
            "compile_args": "",
            "label":["weekly"]
        },
        "hw_cfg_7_snps_xprop_pass": {
            "purpose": "bringup",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_config_07_synthesis/default_design -y hw_config_07",
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        },
        "config256bit": {
            "purpose": "bringup regression",
            "tcl_dir": "$MAESTRO_EXAMPLES/../chiaiu_config/config256bit -y hw_config_22", 
            "instance": "caiu0",
            "exclusionsDoFile": "$WORK_TOP/rtl/chi_aiu/exclusions/config256bit_exclusions.do,$WORK_TOP/rtl/chi_aiu/exclusions/ccov_chi_aiu_config256bit_exclude_coverCheck.do",
            "patFile": "$WORK_TOP/rtl/chi_aiu/exclusions/config256bit_waiver.json",
            "compile_args": "",
            "label":["weekly"]
        },
         "hw_cfg_42_e": {
            "purpose": "bringup",
            "tcl_lib": "hw_config_42_e",
            "instance": "caiu0",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_42_e",
            "label": ["tachl_cover","weekly"],
            "compile_args": ""
        },
        "hw_cfg_42_mix": {
            "purpose": "bringup",
            "tcl_lib": "hw_config_42_mix",
            "instance": "caiu0",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_42_mix",
            "label": ["tachl_cover","weekly"],
            "compile_args": ""
        }, 
        "hw_cfg_42_e_qos": {
            "purpose": "nightly regression",
            "tcl_lib": "hw_config_42_e_qos",
            "instance": "caiu0",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_42_e_ss",
            "label": ["tachl_cover","weekly"],
            "compile_args": ""
        },
        "config256bit_xprop_pass": {
            "purpose": "bringup regression",
            "tcl_dir": "$MAESTRO_EXAMPLES/../fsys_config/hw_cfg_22 -y hw_config_22", 
            "instance": "caiu0",
            "enCover": "0",
            "xprop_mode": "pass",
            "label": ["weekly"],
            "compile_args": ""
        }
    },
    "testlist": {
        "random_tcl_migration": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test. Same as random test. Tests tcl_migration",
            "config": [
                "hw_cfg_resiltech_connectivity_3_fix",
                "hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
                "hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_snoop": "250"
            },
            "label": [
                "tcl_migration"
            ]
        },
        "checkin_0": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random ",
            "config": {
                "hw_cfg_nxpauto":{
                    "flavors":{
                        "test0":{"label": ["checkin"], "seed": 890654650,"iter":1},
                        "test1":{"label": ["checkin"], "seed": 654321486,"iter":1}
                    }
                } ,
                "hw_cfg_20":{
                    "flavors":{
                        "test0":{"label": ["checkin"], "seed": 990526160,"iter":1},
                        "test1":{"label": ["checkin"], "seed": 654321486,"iter":1}
                    }
                }  ,
                "config256bit":{
                    "flavors":{
                        "test0":{"label": ["checkin"], "seed": 271591234,"iter":1}
                    }
                }   ,
                "hw_config_two":{
                    "flavors":{
                        "test0":{"label": ["checkin"], "seed": 27159160,"iter":1},
                        "test1": {"label": ["checkin"], "seed": 990526160,"iter":1}
                    }
                } 

            },
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_snoop": "500",
                "+k_targ_src_id_chk_en":null,
                "+en_excl_txn":null
            },
            "label": [],
            "flavors":{}
        },
        "checkin_1": {
            "name": "perf_cnt_test",
            "purpose": "Random ",
            "config": {
                "hw_config_two":{
                    "flavors":{
                        "test0":{"label": ["checkin"], "seed": 18430028,"iter":1}
                    }
                } 
            },
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_snoop": "20",
                "+k_num_requests":"100",
                "+k_targ_src_id_chk_en":"1",
                "+en_excl_txn":null,
                "+event_first":"1",
                "+event_second":"0",
                "+counter_control":"0",
                "+ssr_count":"0",
                "+UVM_MAX_QUIT_COUNT":"150"

            },
            "label": [],
            "flavors":{}
        },
        "sysreq_event_tcl_migration" : {
            "name": "chi_aiu_bringup_test",
            "purpose": "sysreq event related test cases. Same as sysreq_event. Tests tcl_migration",
            "config": [
                "hw_cfg_41"
            ],
            "iter": 1,
            "plusargs": {
                "+k_num_requests": "100",
                "+k_num_snoop": "100",
                "+k_timeout": "2000000",
                "+k_csr_seq": "chiaiu_csr_sysreq_event_seq"
            },
            "label": [
                "regr", "weekly",
                "regr_temp",
                    "tcl_migration"
            ]
        },
        "resiliency_placeholder_test_tcl_migration": {
            "name": "chi_aiu_resiliency_test",
            "purpose": "placeholder test. Same as resiliency_placeholder_test. Tests tcl_migration",
            "config": [
            	"hw_config_resiliency_placeholder",
            	"hw_config_resiliency_placeholder_2"
            ],
            "iter": 1,
            "plusargs": {
                "+test_placeholder_connectivity": "1",
                "+ph_check_native_intf": "0",
                "+random_txn_test": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "tcl_migration"
            ]
        },
        "connectivity_loop": {
            "name": "connectivity_test",
            "purpose": "Test connectivity interleaving feature",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto"
            ],
            "iter": 20,
            "plusargs": {
                "+UVM_MAX_QUIT_COUNT": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+max_interleave":"1",
                "+start_ix": "1",
                "+unmapped_add_access": "0",
                "+k_csr_seq": "csr_connectivity_seq",
                "+cfg_seq_iter": "1",
                "+chi_intf_b2b": null,
                "+k_dvm_opert_pct":"0", 
                "+k_device_type_mem_pct": "50",
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "flavors": {
                "csr_dec_err_no_det_no_int": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "all_loop_possible":"1",
                        "+cfg_seq_iter": "1",
                        "+connectivity_dec_err_det": "0",
                        "+connectivity_dec_err_int": "0"
                    },
                    "label": []
                },
                "csr_dec_err_det_only": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "all_loop_possible":"1",
                        "+cfg_seq_iter": "1",
                        "+connectivity_dec_err_int": "0"
                    },
                    "label": []
                },
                "csr_dec_err_int_only": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "all_loop_possible":"1",
                        "+cfg_seq_iter": "1",
                        "+connectivity_dec_err_det": "0"
                    },
                    "label": []
                },
                "write_txns": {
                    "purpose": "Test connectivity feature when writes",
                    "plusargs": {
                        "+write_txn_test": null,
                        "all_loop_possible":"1"

                    },
                    "label": ["connectivity_write"]
                },
                "read_txns": {
                    "purpose": "Test connectivity feature when reads",
                    "plusargs": {
                        "+read_txn_test": null,
                        "+start_ix": "ignore",
                        "+en_excl_txn":0,
                        "all_loop_possible":"1"
                    },
                    "label": ["connectivity_read"]
                },
                "atomic_txns": {
                    "purpose": "Test connectivity feature when atomic txns",
                    "plusargs": {
                        "+atomic_txn_test": null,
                        "+force_coh_atomic": null,
                        "+k_coh_addr_pct": "100",
                        "+k_noncoh_addr_pct": "0",
                        "+k_num_requests": "50",
                        "all_loop_possible":"1"
                    },
                    "label": ["connectivity","connectivity_atomic"]
                },
                "dataless": {
                    "purpose": "Test connectivity feature when dataless txns",
                    "plusargs": {
                        "+dataless_txn_test": null,
                        "+start_ix": "ignore",
                        "+en_excl_txn":0,
                        "all_loop_possible":"1"
                    },
                    "label": ["connectivity_dataless"]
                }
           },
            "label": ["connectivity","tachl_cover","regr", "weekly","regr_cov"]
        },
        "connectivity": {
            "name": "connectivity_test",
            "purpose": "Test connectivity interleaving feature",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto"
            ],
            "iter": 1,
            "plusargs": {
                "+UVM_MAX_QUIT_COUNT": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+max_interleave":"1",
                "+start_ix": "1",
                "+unmapped_add_access": "0",
                "+k_csr_seq": "csr_connectivity_seq",
                "+cfg_seq_iter": "1",
                "+chi_intf_b2b": null,
                "+k_dvm_opert_pct":"0", 
                "+k_device_type_mem_pct": "50",
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "flavors": {
                "dvm": {
                    "purpose": "Test connectivity feature when dvm txns",
                    "plusargs": {
                        "+dvm_op_test": null,
                        "+main_seq_iter": "1",
                        "+cfg_seq_iter": "1",
                        "+connectivity_dec_err_det": "0",
                        "+connectivity_dec_err_int": "0",
                        "+hexAiuDceDefault": "0x0",
                        "+hexAiuDmiDefault": "0x0",
                        "+hexAiuDiiDefault": "0x0",
                        "+hexAiuDceItr": "0x0",
                        "+hexAiuDmiItr": "0x0",
                        "+hexAiuDiiItr": "0x0"
                    },
                    "label": ["connectivity_dvm"]
                },
               "dce_check_all_coh_cmd_type": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+coherent_test": null,
                        "+force_coh_atomic": null,
                        "+k_coh_addr_pct": "100",
                        "+k_noncoh_addr_pct": "0",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "10",
                        "+dce_connectivity_check": "1",
                        "+hexAiuDmiDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0xffffffff",
                        "+hexAiuDceDefault": "0x0",
                        "+hexAiuDmiItr": "0xffffffff",
                        "+hexAiuDiiItr": "0xffffffff",
                        "+hexAiuDceItr": "0x0"
                    },
                    "label": []
                },
                "dmi_check_all_coh_cmd_type": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+coherent_test": null,
                        "+force_coh_atomic": null,
                        "+k_coh_addr_pct": "100",
                        "+k_noncoh_addr_pct": "0",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "10",
                        "+dmi_connectivity_check": "1",
                        "+hexAiuDceDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0xffffffff",
                        "+hexAiuDmiDefault": "0x0",
                        "+hexAiuDceItr": "0xffffffff",
                        "+hexAiuDiiItr": "0xffffffff",
                        "+hexAiuDmiItr": "0x0",
                        "+k_device_type_mem_pct": "0"
                    },
                    "label": []
                },
                "dmi_check_all_non_coh_cmd_type": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+non_coherent_test": null,
                        "+k_coh_addr_pct": "0",
                        "+k_noncoh_addr_pct": "100",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "10",
                        "+dmi_connectivity_check": "1",
                        "+hexAiuDceDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0xffffffff",
                        "+hexAiuDmiDefault": "0x0",
                        "+hexAiuDceItr": "0xffffffff",
                        "+hexAiuDiiItr": "0xffffffff",
                        "+hexAiuDmiItr": "0x0",
                        "+k_device_type_mem_pct": "0"
                    },
                    "label": []
                },
                "dii_check_non_coh_cmd_type": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+non_coherent_test": null,
                        "+k_coh_addr_pct": "0",
                        "+k_noncoh_addr_pct": "100",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "1",
                        "+dii_connectivity_check": "1",
                        "+hexAiuDceDefault": "0xffffffff",
                        "+hexAiuDmiDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0x0",
                        "+hexAiuDceItr": "0xffffffff",
                        "+hexAiuDmiItr": "0xffffffff",
                        "+hexAiuDiiItr": "0x0",
                        "+k_device_type_mem_pct": "100"

                    },
                    "label": []
                },
                "addr_no_hit_priority": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+addr_no_hit_check": "1",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "10",
                        "+hexAiuDceDefault": "0xffffffff",
                        "+hexAiuDmiDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0xffffffff",
                        "+hexAiuDceItr": "0xffffffff",
                        "+hexAiuDmiItr": "0xffffffff",
                        "+hexAiuDiiItr": "0xffffffff",
                        "+unmapped_add_access": "100"
                    },
                    "label": []
                },
                "addr_illegal_dii_txn_priority": {
                    "purpose": "Test connectivity feature",
                    "plusargs": {
                        "+atomic_txn_test": null,
                        "+enable_dii_atomic": null,
                        "+unsupported_atomic_txn_to_dii": null,
                        "+illegal_dii_access_check": "1",
                        "+k_coh_addr_pct": "0",
                        "+k_noncoh_addr_pct": "100",
                        "+k_device_type_mem_pct": "100",
                        "+hexAiuDceDefault": "0xffffffff",
                        "+hexAiuDmiDefault": "0xffffffff",
                        "+hexAiuDiiDefault": "0xffffffff",
                        "+hexAiuDceItr": "0xffffffff",
                        "+hexAiuDmiItr": "0xffffffff",
                        "+hexAiuDiiItr": "0xffffffff",
                        "+main_seq_iter": "10",
                        "+cfg_seq_iter": "10"
                    },
                    "label": []
                }
           },
            "label": ["connectivity","tachl_cover","regr", "weekly","regr_cov"]
        },

        "csr_bit_bash": {
            "name": "chi_aiu_csr_bit_bash_test",
            "purpose": "uvm built in bit bash seq for all regs",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
            },
            "label": [
                "regr", "weekly",
                "csr",
		"tachl_cover",
                "regr_cov",
                "bit_bash"
            ]
        },
        "csr_hw_reset": {
            "name": "chi_aiu_csr_all_reg_rd_reset_val_test",
            "purpose": "uvm built in hw reset values of all regs",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
                "csr",
                "hw_reset"
            ]
        },
        "default_knobs": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test",
            "config": {
		        "hw_config_two": {
				    "flavors": {
					    "chi_checkin_test": {"label": ["checkin"],"plusargs": {"+k_num_snoop": "500","+random_txn_test": "1"},"iter": 1}
					}
				},
                "hw_cfg_7": {},
                "hw_cfg_20": {},
            	"hw_cfg_7_all_ecc": {},
            	"hw_cfg_7_all_parity": {},
                "hw_cfg_7_snps": {},
                "hw_cfg_nxpauto": {},
	            "hw_config_resiliency_placeholder": {},
                "config256bit": {}
            },
            "iter": 10,
            "plusargs": {
                "+max_interleave":"1"
            },
			"flavors": {},
            "label": [
                "regr", "weekly",
		"regr_cov",
		"regr_sanity",
                "default"
            ]
        },
        "default_knobs_xprop_1": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_cfg_7",
            "config": [
                "hw_cfg_7_xprop_xtrap",
                "hw_cfg_7_xprop_resolve",
                "hw_cfg_7_xprop_pass",
                "hw_cfg_7_snps_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_7_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_2": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_config_two",
            "config": [
		"hw_config_two_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_2_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_3": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_cfg_20",
            "config": [
                "hw_cfg_20_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_20_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_4": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_cfg_7_all_ecc",
            "config": [
                "hw_cfg_7_all_ecc_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_7_all_ecc_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_5": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on hw_cfg_7_all_parity",
            "config": [
                "hw_cfg_7_all_parity_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_7_all_parity_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_6": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_config_resiliency_placeholder",
            "config": [
		"hw_config_resiliency_placeholder_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_resiliency_placeholder_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_7": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for config256bit",
            "config": [
                "config256bit_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/config256bit_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },
        "default_knobs_xprop_8": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test with xprop on for hw_cfg_nxpauto",
            "config": [
                "hw_cfg_nxpauto_xprop_pass"
            ],
            "iter": 1,
            "plusargs": {
            },
            "xpropargs": {
                "xprop_init_disable_time": "10ns",
                "xprop_exclude_file": "$WORK_TOP/dv/chi_aiu/xprop_exclude_file/hw_cfg_nxpauto_exclude_file"
            },
            "label": [
                "regr_xprop"
            ]
        },

        "default_knobs_tachl": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Default test",
            "config": [
		"hw_config_two",
                "hw_cfg_7",
                "hw_cfg_20",
                "hw_cfg_42_mix",
                "hw_cfg_42_e",
                "hw_cfg_42_e_qos",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps",
                "hw_cfg_nxpauto",
                "hw_cfg_42",
		"hw_config_resiliency_placeholder",
                "config256bit"
            ],
            "iter": 1,
            "plusargs": {
            },
            "label": [
		"tachl_cover"
            ]
        },
        "unmapped_CSR_addr_access": {
            "name": "chi_aiu_bringup_test",
            "purpose": "access unmapped csr address",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+k_csr_seq":"access_unmapped_csr_addr",
                "+random_txn_test": null,
                "+k_num_snoop": "1"
            },
            "label": [
		"tachl_cover",
                "regr_cov",
                "regr", "weekly",
                "csr"
            ]
        },
        "random": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
		"hw_config_resiliency_placeholder",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.4.Security.NonSecureAccess",
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_snoop": "3000",
                "+k_num_requests": "3000"
            },
			"flavors": {
			    "long_smi_burst_delay": {"iter": 10,"plusargs": {"+smi_burst_delay_mode": 1}, "label": ["burst_test"]}
			},
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_addr_boundary": {
            "name": "chi_aiu_bringup_test",
            "purpose": "address boundary testing",
            "config": {
		"hw_config_two" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "40"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "9", "+gpra_max_size": "39"}, "label": ["regr", "weekly"]}
                     }
                 },
		"hw_cfg_41_1" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+hw_cfg_41_cov": null, "+memregion_min_size": "41", "+gpra_mem_size": "0"}, "label": ["regr_boundary_41"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+hw_cfg_41_cov": null, "+memregion_min_size": "41", "+gpra_mem_size": "31"}, "label": ["regr_boundary_41"]},
                         "gpra_size_random" : {"iter": 10,"plusargs": {"+hw_cfg_41_cov": null, "+memregion_min_size": "41", "+memregion_rand_size": null}, "label": ["regr_boundary_41"]}
                     }
                 },
		"hw_cfg_41_2" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": {"+hw_cfg_41_cov": null,  "+memregion_min_size": "41", "+gpra_mem_size": "0"}, "label": ["regr_boundary_41"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": {"+hw_cfg_41_cov": null, "+memregion_min_size": "41", "+gpra_mem_size": "31"}, "label": ["regr_boundary_41"]},
                         "gpra_size_random" : {"iter": 10,"plusargs": {"+hw_cfg_41_cov": null,  "+memregion_min_size": "41", "+memregion_rand_size": null}, "label": ["regr_boundary_41"]}
                     }
                 },
		"hw_config_resiliency_placeholder" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "38"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "10", "+gpra_max_size": "37"}, "label": ["regr", "weekly"]}
                     }
                 },
                "hw_cfg_nxpauto" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "41"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "40"}, "label": ["regr", "weekly"]}
                     }
                },
                "config256bit" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "36"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "35"}, "label": ["regr", "weekly"]}
                     }
                },
                "hw_cfg_7" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "36"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "35"}, "label": ["regr", "weekly"]}
                     }
                },
		"hw_cfg_20" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "37"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "36"}, "label": ["regr", "weekly"]}
                     }
                },
            	"hw_cfg_7_all_ecc" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "38"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "37"}, "label": ["regr", "weekly"]}
                     }
                },
            	"hw_cfg_7_all_parity" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "38"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "37"}, "label": ["regr", "weekly"]}
                     }
                },
                "hw_cfg_7_snps" : {
                     "flavors": {
                         "gpra_size_min" : {"iter": 1,"plusargs": { "+memregion_min_size": "10"}, "label": ["regr", "weekly"]},
                         "gpra_size_max" : {"iter": 1,"plusargs": { "+memregion_min_size": "38"}, "label": ["regr", "weekly"]},
                         "gpra_size_random" : {"iter": 1,"plusargs": { "+memregion_rand_size": null, "+gpra_min_size": "11", "+gpra_max_size": "37"}, "label": ["regr", "weekly"]}
                     }
                }
            },
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.4.Security.NonSecureAccess",
            "plusargs": {
                "+random_txn_test": null,
                "+pick_boundary_addr": null,
                "+max_interleave": "1",
                "+k_num_request": "1000",
                "+k_num_snoop": "0"
            },
            "flavors": {},
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_sp_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.4.Security.NonSecureAccess",
            "plusargs": {
                "+random_txn_test": null,
                "+wt_snp_inv": "90",
                "+k_num_snoop": "1000"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_allow_retry_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+allow_retry_rand": "1",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "atomic_noncoh_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_cfg_20"
            ],
            "iter": 2,
            "comment": "#Stimulus.CHIAIU.v3.4.Security.NonSecureAccess",
            "plusargs": {
               "+atomic_txn_test": null,
               "+enable_dii_atomic": null,
               "+unsupported_atomic_txn_to_dii": null,
               "+illegal_dii_access_check": "1",
               "+k_coh_addr_pct": "0",
               "+k_noncoh_addr_pct": "100",
               "+k_device_type_mem_pct": "100",
                "+max_interleave":"1",
                "+start_ix": "1",
                "+unmapped_add_access": "0",
                "+k_csr_seq": "csr_connectivity_seq",
               "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_secure_non_secure_access_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+random_txn_test": null,
                "+non_secure_access_test": null,
                "+all_gpra_secure": null,
                "+start_ix": "1",
                "+use_copyback" : "1",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_secure_access"
            },
            "comment": "#Stimulus.CHIAIU.v3.4.Security.SecureAccess",
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"regr_ns",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_gprar_nsx_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+random_txn_test": null,
                "+non_secure_access_test": null,
                "+random_gpra_secure": null,
                "+start_ix": "1",
                "+use_copyback" : "1",
                "+k_num_requests": "2000",
                "+k_noncoh_addr_pct": "50",
                "+k_csr_seq": "chi_aiu_csr_secure_access"
            },
            "comment": "#Stimulus.CHIAIU.v3.4.Security.RandomSecureAccess",
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"regr_ns",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_gprar_nsx_read_txn_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 5,
            "plusargs": {
                "+read_txn_test": null,
                "+non_secure_access_test": null,
                "+all_gpra_secure": null,
                "+start_ix": "1",
                "+k_coh_addr_pct": "50",
                "+use_copyback" : "1",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_secure_access"
            },
            "comment": "#Stimulus.CHIAIU.v3.4.Security.RandomSecureAccess",
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"regr_ns",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_gprar_nsx_dataless_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+dataless_txn_test": null,
                "+non_secure_access_test": null,
                "+all_gpra_secure": null,
                "+start_ix": "1",
                "+use_copyback" : "1",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_secure_access"
            },
            "comment": "#Stimulus.CHIAIU.v3.4.Security.RandomSecureAccess",
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"regr_ns",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_gprar_nsx_dataless_test_1": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 5,
            "plusargs": {
                "+dataless_txn_test": null,
                "+non_secure_access_test": null,
                "+all_gpra_secure": null,
                "+start_ix": "1",
		"+k_dt_ls_upd_pct": "100",
		"+k_dt_ls_cmo_pct": "0",	
                "+use_copyback" : "1",
		"+en_excl_txn": "0",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_secure_access"
            },
            "comment": "#Stimulus.CHIAIU.v3.4.Security.RandomSecureAccess",
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"regr_ns",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "event_message_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Event Message test",
            "config": [
		"hw_config_two",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
		"hw_cfg_41",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_event_msg": "250",
                "+k_num_snoop": "1000"
            },
            "label": [
                "sys_event_regr_old"
            ]
        },
        "sys_event_timeout": {
            "defines": "FORCE_SENDER,ASSERT_ON,COVER_ON,INHOUSE_APB_VIP,RESILIENCY_TESTING,INHOUSE_AXI",
            "name": "chi_aiu_bringup_test",
            "purpose": "Event Message test",
            "config": [
		"hw_config_two_event",
		"hw_cfg_20_event",
		"hw_cfg_41_event"
            ],
            "iter": 1,
            "plusargs": {
                "+k_num_requests": "100",
                "+k_num_snoop": "100",
                "+k_timeout": "200000",
                "+k_csr_seq": "chiaiu_csr_sysreq_event_seq",
                "+k_num_event_msg" : 0,
                "+enable_ev_timeout" : null
            },
            "label": [
                "sys_event_regr"
            ]
        },
        "sysreq_event" : {
            "name": "chi_aiu_bringup_test",
            "purpose": "sysreq event related test cases",
            "config": [
                "hw_config_two",
                "config256bit",
                "hw_cfg_7",
                "hw_cfg_20",
                "hw_cfg_41",
                "hw_cfg_7_all_ecc",
                "hw_cfg_nxpauto",
                "hw_config_resiliency_placeholder",
                "hw_cfg_7_all_parity"
            ],
            "iter": 10,
            "flavors": {
                "bringup" : {
                    "plusargs": {
                        "+k_num_event_msg" : 5
                    }
                },
                "ack_rand_delay" : {
                    "plusargs": {
                        "+k_num_event_msg" : 5,
                        "+rand_event_delay" : null
                    }
                },
                "enable_disable" : {
                    "plusargs" : {
                        "+k_num_event_msg" : 50,
                        "+ev_enable_toggle" : null
                    }
                },
                "timeout" : {
                    "plusargs" :{
                        "+k_num_event_msg" : 50,
                        "+enable_ev_hdshak_timeout" : null
                    }
                },
                "max_ack_delay" : {
                    "plusargs" : {
                        "+k_num_event_msg" : 2,
                        "+max_event_delay" : null
                    }
                },
                "max_ack_delay_with_en_toggle" : {
                    "plusargs" : {
                        "+k_num_event_msg" : 50,
                        "+max_event_delay" : null,
                        "+ev_enable_toggle" : null
                    }
                },
                "random" : {
                    "plusargs" : {
                        "+k_num_event_msg" : 500,
                        "+rand_event_delay" : null,
                        "+ev_enable_toggle" : null
                    }
                }
            },
            "plusargs": {
                "+k_num_requests": "200",
                "+k_num_snoop": "100",
                "+k_timeout": "200000",
                "+max_interleave": "1",
                "+k_csr_seq": "chiaiu_csr_sysreq_event_seq"
            },
            "label": [
                "regr", "weekly",
		            "tachl_cover",
		            "regr_cov",
		            "sys_event_regr"
            ]
        },
        "ttrig": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Ncore initiated trigger with nTraceRegisters = 1 configs",
            "config": [
                "config256bit",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps",
		"hw_cfg_20",
                "hw_cfg_nxpauto",
		"hw_config_two",
		"hw_config_resiliency_placeholder"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+ttrig_reg_prog_en": null,
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "1000"
            },
            "comment": "Most flavors will be run with test ttrig_tcap, not ttrig only. Any trigger register not specified in the flavors below will be randomized",
            "flavors": { 
              "random"                              : {"plusargs": {}},
              "random_trigger"                      : {"plusargs": {"+trigger_random": "1"}},
              "tctrlr_0"                            : {"plusargs": {"+tctrlr0_value": "0x00000000"}},
              "native_match_only"                   : {"plusargs": {"+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "addr_match_only_rand"                : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "memattr_match_only_rand"             : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "opcode_match_only_rand"              : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "target_type_dii_match_only_rand"     : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "1"}},
              "target_type_dmi_match_only_rand"     : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0"}},
              "user_match_only_rand"                : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "user_match_only_mask_1"              : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1", "+tubmr0_value": "0x00000001"}},
              "all_match"                           : {"plusargs": {"+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match"                : {"plusargs": {"+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}}
            },
            "label": [
            ]
        },
        "ttrig_tcap": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Ncore initiated trigger + capture with nTraceRegisters=1 configs",
            "config": [
                "config256bit",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps",
                "hw_cfg_nxpauto"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+tcap_scb_en": "1",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "5000",
                "+k_num_snoop": "2000"
            },
            "comment": "Any trigger or capture register not specified in the flavors below will be randomized",
            "flavors": { 
              "random"                                      : {"plusargs": {}},
              "random_capture_all"                          : {"plusargs": {"+cctrlr_enables": "0x000000ff"}},
              "trigger_random"                              : {"plusargs": {                                 "+trigger_random": "1"}},
              "random_trigger_capture_all"                  : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trigger_random": "1"}}
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"trace_capture",
		"trace_capture_1set",
		"trace_debug",
		"trace_debug_1set",
		"tcap_regr"
            ]
        },
        "ttrig_tcap_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Ncore initiated trigger + capture with nTraceRegisters=1 configs",
            "config": [
		"hw_cfg_20",
		"hw_config_two",
		"hw_config_resiliency_placeholder"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+tcap_scb_en": "1",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "5000",
                "+k_num_snoop": "2000"
            },
            "comment": "Any trigger or capture register not specified in the flavors below will be randomized",
            "flavors": { 
              "random"                                      : {"plusargs": {}},
              "random_capture_all"                          : {"plusargs": {"+cctrlr_enables": "0x000000ff"}},
              "trigger_random"                              : {"plusargs": {                                 "+trigger_random": "1"}},
              "random_trigger_capture_all"                  : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trigger_random": "1"}},
              "tctrlr_0"                                    : {"plusargs": {                                 "+tctrlr0_value": "0x00000000"}},
              "native_match_only"                           : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "native_match_only_capture_all"               : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "native_match_only_capture_all_non_dmi"       : {"plusargs": {"+cctrlr_enables": "0x000000cf", "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "native_match_only_capture_TXall"             : {"plusargs": {"+cctrlr_enables": "0x00000045", "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "native_match_only_capture_RXall"             : {"plusargs": {"+cctrlr_enables": "0x0000008a", "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "native_match_only_capture_none"              : {"plusargs": {"+cctrlr_enables": "0x00000000", "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "addr_match_only_rand"                        : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "addr_match_only_base_rand_size_00"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+trace_addr_match_size": "00"}},
              "addr_match_only_base_rand_size_0f"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+trace_addr_match_size": "0f"}},
              "addr_match_only_base_rand_size_1f"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+trace_addr_match_size": "1f"}},
              "addr_match_only_base_0s_size_rand"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000"}},
              "addr_match_only_base_0s_size_00"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "00"}},
              "addr_match_only_base_0s_size_1f_capture_all" : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f"}},
              "addr_match_only_base_fs_size_rand"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0xff", "+tbalr0_value": "0xffffffff"}},
              "addr_match_only_base_fs_size_00"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0xff", "+tbalr0_value": "0xffffffff", "+trace_addr_match_size": "00"}},
              "addr_match_only_base_fs_size_1f"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0xff", "+tbalr0_value": "0xffffffff", "+trace_addr_match_size": "1f"}},
              "memattr_match_only_rand"                     : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "opcode_match_only_rand"                      : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "opcode_match_only_rand_capture_all"          : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "opcode_match_only_no_valids"                 : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+topcr00_value": "0x00000014", "+topcr10_value": "0x00220030"}},
              "target_type_match_only_rand"                 : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "target_type_match_only_rand_capture_all"     : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "target_type_dii_match_only_rand"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "1"}},
              "target_type_dmi_match_only_rand"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0"}},
              "user_match_only_rand"                        : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "user_match_only_rand_capture_all"            : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "match_native_addr_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f"}},
              "match_native_memattr_likely_match"           : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+trace_memattr_match_value": "0"}},
              "match_native_opcode_likely_match"            : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+topcr00_value": "0x80108020", "+topcr10_value": "0x80008011"}},
              "match_native_target_likely_match"            : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0"}},
              "match_native_user_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1", "+tubmr0_value": "0x00000001", "+tubr0_value": "0x00000000"}},
              "match_addr_memattr_likely_match"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f", "+trace_memattr_match_value": "0"}},
              "match_addr_opcode_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f", "+topcr00_value": "0x80108020", "+topcr10_value": "0x80008011"}},
              "match_addr_target_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0"}},
              "match_addr_user_likely_match"                : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1", "+tbahr0_value": "0x00", "+tbalr0_value": "0x00000000", "+trace_addr_match_size": "1f", "+tubmr0_value": "0x00000001", "+tubr0_value": "0x00000000"}},
              "match_memattr_opcode_likely_match"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+trace_memattr_match_value": "0", "+topcr00_value": "0x80108020", "+topcr10_value": "0x80008011"}},
              "match_memattr_target_likely_match"           : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_memattr_match_value": "0", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0"}},
              "match_memattr_user_likely_match"             : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1", "+trace_memattr_match_value": "0", "+tubmr0_value": "0x00000001", "+tubr0_value": "0x00000000"}},
              "match_opcode_target_likely_match"            : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+topcr00_value": "0x80108020", "+topcr10_value": "0x80008011", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0"}},
              "match_opcode_user_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1", "+topcr00_value": "0x80108020", "+topcr10_value": "0x80008011", "+tubmr0_value": "0x00000001", "+tubr0_value": "0x00000000"}},
              "match_target_user_likely_match"              : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0", "+tubmr0_value": "0x00000001", "+tubr0_value": "0x00000000"}},
              "match_native_addr_rand"                      : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_opcode_rand"                   : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_user_rand"                 : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "match_native_memattr_target_type_rand"       : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_addr_opcode_user_rand"                 : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "all_match_rand"                              : {"plusargs": {                                 "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_match_rand_capture_all"                  : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match_rand"                   : {"plusargs": {                                 "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match_rand_capture_all"       : {"plusargs": {"+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}} 
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov",
		"trace_capture",
		"trace_capture_1set",
		"trace_debug",
		"trace_debug_1set",
		"tcap_regr"
            ]
        },
        "ttrig_tcap_modReg_native_match_only": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Ncore initiated trigger + capture with nTraceRegisters=1 configs",
            "config": [
                "hw_cfg_7",
            	"hw_cfg_7_all_parity",
		"hw_cfg_20",
                "hw_cfg_nxpauto",
		"hw_config_two"
            ],
            "iter": 1,
            "comment": "The user can set the following regs to his/her desired value given nTraceRegisters=1 ::: caiu_tctrlr0_val, caiu_tbalr0_val caiu_tbahr0_val, caiu_tubr0_val, caiu_topcr00_val, caiu_topcr10_val, caiu_tubmr0_val",

            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+caiu_cctrlr_mod":  null,
                "+tcap_scb_en": "1",
                "+caiu_tubr0_val":  "dead",
                "+caiu_tubmr0_val": "face",
                "+native_trace_weight": "100",
                "+trace_native_match_en": "1",
                "+trace_addr_match_en": "0",
                "+trace_memattr_match_en": "0",
                "+trace_opcode_match_en": "0", 
                "+trace_target_type_match_en": "0",
                "+trace_user_match_en": "0",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "300",
                "+k_num_snoop": "300"
            },
            "label": [
            ]
        },
        "ttrig_2sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger for nTraceRegisters = 2",
            "config": [
		"hw_config_two"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+ttrig_reg_prog_en": null,
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "1000"
            },
            "comment": "2 sets of trigger registers, trigger-only, no capture",
            "flavors": { 
              "trig_random_capture_random"               : {                                             "comment": "random trigger 2 sets, random capture"}
            },
            "label": [
            ]
        },
        "ttrig_tcap_2sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger for nTraceRegisters = 2",
            "config": [
		"hw_config_two"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+tcap_scb_en": "1",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "1000"
            },
            "comment": "2 sets of trigger registers, trigger+capture",
            "flavors": { 
              "trig_random_capture_random"                  : {                                               "comment": "random trigger 2 sets, random capture"},
              "trig_random_capture_all"                     : {"plusargs": {"+cctrlr_enables": "0x000000ff"}, "comment": "random trigger 2 sets, capture all IFs"},
              "trig_random_capture_all_non_dmi"             : {"plusargs": {"+cctrlr_enables": "0x000000cf"}, "comment": "random trigger 2 sets, capture all CHI IFs"},
              "trig_random_capture_none"                    : {"plusargs": {"+cctrlr_enables": "0x00000000"}, "comment": "random trigger 2 sets, capture none"},
              "trigger_random"                              : {"plusargs": {                                  "+trigger_random": "1"}},
              "tctrlr_00"                                   : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000000"}},
              "master_init_only_01"                         : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000001"}},
              "master_init_only_10"                         : {"plusargs": {                                  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000000"}},
              "master_init_only_11"                         : {"plusargs": {                                  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000001"}},
              "master_init_only_11_capture"                 : {"plusargs": {"+cctrlr_enables": "0x000000cf",  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000001"}},
              "match_addr_2sets_rand"                       : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_2sets_rand"                    : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_2sets_rand"                     : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_2sets_rand"                     : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_user_2sets_rand"                       : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "match_native_memattr_rand"                   : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_target_type_rand"                 : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_user_rand"                      : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_native_01_conflict_match_en"           : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_01_conflict_match_en"             : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_01_conflict_match_en"          : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_01_conflict_match_en"           : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_01_conflict_match_en"      : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_target_type_01_conflict_dmi_dii"       : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hut": "1"}},
              "match_user_01_conflict_match_en"             : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_user_01_conflict_tubr"                 : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tubr0_value":  "0x000000fa", "+tubr1_value":  "0x00000005"}},
              "match_user_01_conflict_tubmr"                : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0", "+tubmr0_value": "0x00000003", "+tubmr1_value": "0xfffffffc"}},
              "mixed_match_rand_1"                          : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "mixed_match_rand_2"                          : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "all_match_rand"                              : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match_rand"                   : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}}
            },
            "label": [
            ]
        },
        "ttrig_3sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger for nTraceRegisters = 3",
            "config": [
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+ttrig_reg_prog_en": null,
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "1000"
            },
            "comment": "3 sets of trigger registers, trigger-only, no capture",
            "flavors": { 
              "trig_random_capture_random"               : {                                             "comment": "random trigger 3 sets, random capture"}
            },
            "label": [
            ]
        },
        "ttrig_tcap_3sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger for nTraceRegisters = 3",
            "config": [
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+tcap_scb_en": "1",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "1000"
            },
            "comment": "3 sets of trigger registers, trigger+capture",
            "flavors": { 
              "trig_random_capture_random"                  : {                                               "comment": "random trigger 3 sets, random capture"},
              "trig_random_capture_all"                     : {"plusargs": {"+cctrlr_enables": "0x000000ff"}, "comment": "random trigger 3 sets, capture all IFs"},
              "trig_random_capture_all_non_dmi"             : {"plusargs": {"+cctrlr_enables": "0x000000cf"}, "comment": "random trigger 3 sets, capture all CHI IFs"},
              "trig_random_capture_none"                    : {"plusargs": {"+cctrlr_enables": "0x00000000"}, "comment": "random trigger 3 sets, capture none"},
              "trigger_random"                              : {"plusargs": {                                  "+trigger_random": "1"}},
              "tctrlr_000"                                  : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000000"}},
              "master_init_only_001"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000001"}},
              "master_init_only_010"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000001", "+tctrlr2_value": "0x00000000"}},
              "master_init_only_011"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000001", "+tctrlr2_value": "0x00000001"}},
              "master_init_only_100"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000000"}},
              "master_init_only_101"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000001"}},
              "master_init_only_110"                        : {"plusargs": {                                  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000001", "+tctrlr2_value": "0x00000000"}},
              "master_init_only_111_capture"                : {"plusargs": {"+cctrlr_enables": "0x000000cf",  "+tctrlr0_value": "0x00000001", "+tctrlr1_value": "0x00000001", "+tctrlr2_value": "0x00000001"}},
              "match_native_012_rand"                       : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_012_rand"                         : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_012_rand"                      : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_012_rand"                       : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_012_rand"                  : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_user_012_rand"                         : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "match_native_012_conflict_match_en"          : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_type_012_conflict_match_en"       : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_type_012_conflict_match_en"    : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_012_conflict_match_en"          : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_012_conflict_match_en"     : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_user_012_conflict_match_en"            : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "mixed_match_rand_1"                          : {"plusargs": {"+cctrlr_enables": "0x000000ff",  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_match_rand"                              : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match_rand"                   : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}}
 
            },
            "label": [
            ]
        },
        "ttrig_4sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger for nTraceRegisters = 4",
            "config": [
		"config256bit",
		"hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+ttrig_reg_prog_en": null,
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "500",
                "+k_num_snoop": "1000"
            },
            "comment": "4 sets of trigger registers, trigger-only, no capture, most of tests will be trigger+capture",
            "flavors": { 
              "trig_random"                              : {"plusargs": {}, "comment": "random trigger for all sets of trigger registers"},
              "trigger_random"                           : {"plusargs": {"+trigger_random": "1"}},
              "tctrlr_0000"                              : {"plusargs": {"+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000000", "+tctrlr3_value": "0x00000000"}}
            },
            "label": [
            ]
        },
        "ttrig_tcap_4sets": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Trigger and Capture for nTraceRegisters = 4",
            "config": [
		"config256bit",
		"hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+tcap_scb_en": "1",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+k_num_requests": "500",
                "+k_num_snoop": "1000"
            },
            "comment": "4 sets of trigger registers, trigger+capture",
            "flavors": { 
              "trig_random_capture_random"                  : {                                               "comment": "random trigger 4 sets, random capture"},
              "trig_random_capture_all"                     : {"plusargs": {"+cctrlr_enables": "0x000000ff"}, "comment": "random trigger 4 sets, capture all IFs"},
              "trig_random_capture_all_non_dmi"             : {"plusargs": {"+cctrlr_enables": "0x000000cf"}, "comment": "random trigger 4 sets, capture all CHI IFs"},
              "trig_random_capture_none"                    : {"plusargs": {"+cctrlr_enables": "0x00000000"}, "comment": "random trigger 4 sets, capture none"},
              "trigger_random"                              : {"plusargs": {                                  "+trigger_random": "1"}},
              "tctrlr_0000"                                 : {"plusargs": {                                  "+tctrlr0_value": "0x00000000", "+tctrlr1_value": "0x00000000", "+tctrlr2_value": "0x00000000", "+tctrlr3_value": "0x00000000"}},
              "match_native_0123_rand"                      : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_0123_rand"                        : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_0123_rand"                     : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_0123_rand"                      : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_0123_rand"                 : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0"}},
              "match_user_0123_rand"                        : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "1"}},
              "match_native_0123_conflict_match_en"         : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_addr_type_0123_conflict_match_en"      : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_memattr_type_0123_conflict_match_en"   : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_opcode_0123_conflict_match_en"         : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_target_type_0123_conflict_match_en"    : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "match_user_0123_conflict_match_en"           : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "0", "+trace_user_match_en": "0"}},
              "mixed_match_rand_1"                          : {"plusargs": {"+cctrlr_enables": "0x000000ff",  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_match_rand"                              : {"plusargs": {                                  "+trace_native_match_en": "1", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}},
              "all_ncore_init_match_rand"                   : {"plusargs": {                                  "+trace_native_match_en": "0", "+trace_addr_match_en": "1", "+trace_memattr_match_en": "1", "+trace_opcode_match_en": "1", "+trace_target_type_match_en": "1", "+trace_user_match_en": "1"}}
            },
            "label": [
            ]
        },
        "random_link_ctrl_strv_mode": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Use strv_mode for link control",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
            	"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 5,
            "plusargs": {
                "+random_txn_test": null,
                "+lnk_credit_strv_mode": null
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "tcap_fcov_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "For TCAP functional coverage points.",
            "config": ["hw_cfg_20"],
            "iter": 1,
            "plusargs": {
                "+k_timeout": "2000000",
                "+random_txn_test": null, "+tcap_reg_prog_en": null, "+ttrig_reg_prog_en": null,
                "+k_num_requests": "1000", "+k_num_snoop": "1000",
                "+max_interleave":"1",
                "+tctrlr0_value": "0x1",
                "+tcap_scb_en": "1",
                "+cctrlr_value": "0xabc300c3",
                "+trace_native_match_en": "1",
                "+axi_trace_weight" : "90",
                "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                "+counter_control": "0"
            },
            "comment": "This set of test help TCAP reach is maximum points for functional coverage.",
            "flavors": { 
              "cctrlr_00"  : {"plusargs": {"+cctrlr_value": "0x0fe417c6"}}, 
              "cctrlr_01"  : {"plusargs": {"+cctrlr_value": "0x7bc8ffd5"}}, 
              "cctrlr_02"  : {"plusargs": {"+cctrlr_value": "0x00dac4f3"}}, 
              "cctrlr_03"  : {"plusargs": {"+cctrlr_value": "0x169c0081"}}, 
              "cctrlr_04"  : {"plusargs": {"+cctrlr_value": "0x052e73cc"}}, 
              "cctrlr_05"  : {"plusargs": {"+cctrlr_value": "0x006091bf"}}, 
              "cctrlr_06"  : {"plusargs": {"+cctrlr_value": "0x03a170f3"}}, 
              "cctrlr_07"  : {"plusargs": {"+cctrlr_value": "0xbaab0ae7"}}, 
              "cctrlr_08"  : {"plusargs": {"+cctrlr_value": "0x207510c2"}}, 
              "cctrlr_09"  : {"plusargs": {"+cctrlr_value": "0x003680f7"}}, 
              "cctrlr_10"  : {"plusargs": {"+cctrlr_value": "0x011c09f3"}}, 
              "cctrlr_11"  : {"plusargs": {"+cctrlr_value": "0x43e9c09f"}}, 
              "cctrlr_12"  : {"plusargs": {"+cctrlr_value": "0x00130bcf"}}, 
              "cctrlr_13"  : {"plusargs": {"+cctrlr_value": "0x8a9f33f7"}}, 
              "cctrlr_14"  : {"plusargs": {"+cctrlr_value": "0xc3170063"}}, 
              "cctrlr_15"  : {"plusargs": {"+cctrlr_value": "0xb0fd57f5"}}, 
              "cctrlr_16"  : {"plusargs": {"+cctrlr_value": "0xe702aec3"}}
            },
            "label": []
        },
        "chi_aiu_link_ctrl_test": {
            "name": "chi_aiu_link_ctrl_test",
            "purpose": "Link ctrl state transition test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7",
                "hw_cfg_7_snps",
            	"hw_config_resiliency_placeholder",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+max_interleave": "1",
                "+link_ctrl_test": "1"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_aiu_qchannel_sanity_test": {
            "name": "chi_aiu_qchannel_test",
            "purpose": "Q channel sanity test",
            "config": [
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+chi_aiu_qchannel_sanity_test": "1",
                "+link_ctrl_test": "1",
                "+disable_pri_check": 1,
                "+k_num_requests": "300",
                "+k_num_snoop": "100"
            },
            "label": [
                "pma",
                "regr", "weekly",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_aiu_qchannel_req_during_cmd_test": {
            "name": "chi_aiu_qchannel_test",
            "purpose": "Q channel req during command test",
            "config": [
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+chi_aiu_qchannel_req_during_cmd_test": "1",
                "+link_ctrl_test": "1",
                "+disable_pri_check": 1,
                "+k_num_snoop": "100"
            },
            "label": [
                "pma",
                "regr", "weekly",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_aiu_qchannel_req_between_cmd_test": {
            "name": "chi_aiu_qchannel_test",
            "purpose": "Q channel req between command test",
            "config": [
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+chi_aiu_qchannel_req_between_cmd_test": "1",
                "+disable_pri_check": 1,
                "+k_num_snoop": "100"
            },
            "label": [
                "pma",
                "regr", "weekly",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_aiu_qchannel_multiple_request_test": {
            "name": "chi_aiu_qchannel_test",
            "purpose": "Q channel multiple req test",
            "config": [
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+chi_aiu_qchannel_multiple_request_test": "1",
                "+link_ctrl_test": "1",
                "+disable_pri_check": 1,
                "+k_num_requests": "300",
                "+k_num_snoop": "50"
            },
            "label": [
                "pma",
                "regr", "weekly",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_aiu_qchannel_reset_test": {
            "name": "chi_aiu_qchannel_test",
            "purpose": "Q channel reset test",
            "config": [
                "hw_cfg_nxpauto",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+chi_aiu_qchannel_reset_test": "1",
                "+disable_pri_check": 1,
                "+link_ctrl_test": "1",
                "+k_num_requests": "300",
                "+k_num_snoop": "10"
            },
            "label": [
                "pma",
                "regr", "weekly",
		        "regr_sanity_2",
		        "tachl_cover",
		        "regr_cov"
            ]
        },
	"larger_stt_skid_buffer_snp_srsp_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "hold back SNP SRSP so that larger STT get filled and excess SNPreq stored in skid buffer.",
            "config": [
		        "hw_cfg_41"
            ],
            "iter": 15,
            "plusargs": {
                "+random_txn_test": null,
                "+snp_srsp_delay": null,
		        "+max_stt_fill_count": "1",
                "+k_num_requests": "500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "larger_stt",
                "regr",
		        "regr_cov"
            ]
        },
	"larger_stt_multiple_skid_buffer_snp_srsp_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "hold back SNP SRSP so that larger STT get filled and excess SNPreq stored in skid buffer.",
            "config": [
		        "hw_cfg_41"
            ],
            "iter": 15,
            "plusargs": {
                "+random_txn_test": null,
                "+snp_srsp_delay": null,
		        "+max_stt_fill_count": "10",
                "+k_num_requests": "500",
                "+k_num_snoop": "5000"
            },
            "label": [
                "larger_stt",
                "regr",
		        "regr_cov"
            ]
        },
        "resiliency_placeholder_test": {
            "name": "chi_aiu_resiliency_test",
            "purpose": "placeholder test",
            "config": [
            	"hw_config_resiliency_placeholder",
            	"hw_config_resiliency_placeholder_2"
            ],
            "iter": 1,
            "plusargs": {
                "+test_placeholder_connectivity": "1",
                "+ph_check_native_intf": "0",
                "+random_txn_test": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
                "resiliency",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
       "resiliency_smi_uncorr_err": {
            "name": "chi_aiu_resiliency_test",
            "purpose": "transport protection fault injection",
            "config": [
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_all_ecc"
                ,"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+disable_pri_check": 1,
                "+inject_smi_uncorr_error": 1,
                "+random_txn_test": null,
                "+drop_smi_uce_pkt": null,
                "+collect_resiliency_cov" : 1,
                "+RDY_NOT_ASSERTED_TIMEOUT": 150000,
                "+k_num_requests": "3000",
                "+k_num_snoop": "5000"
            },
            "comment": "3 flavors will be exercised. NDP/DP/HDR",
            "flavors": {
              "singl_hdr_c_cmdrsp"   : { "plusargs": {"+check_hdr_msg_type" : null, "+ccmd_rsp_err_inj"  : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_nc_cmdrsp"  : { "plusargs": {"+check_hdr_msg_type" : null, "+nccmd_rsp_err_inj" : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_snpreq"     : { "plusargs": {"+no_dvm_snoop_test": null, "+check_hdr_msg_type" : null, "+snp_req_err_inj"   : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_strreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+str_req_err_inj"   : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_dtrreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtr_req_err_inj"   : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_dtwrsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtw_rsp_err_inj"   : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_hdr_cmprsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+cmp_rsp_err_inj"   : null, "+smi_hdr_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_c_cmdrsp"   : { "plusargs": {"+check_hdr_msg_type" : null, "+ccmd_rsp_err_inj"  : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_nc_cmdrsp"  : { "plusargs": {"+check_hdr_msg_type" : null, "+nccmd_rsp_err_inj" : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_snpreq"     : { "plusargs": {"+no_dvm_snoop_test": null, "+check_hdr_msg_type" : null, "+snp_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_strreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+str_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_dtrreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtr_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_dtwrsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtw_rsp_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_ndp_cmprsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+cmp_rsp_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },
              "singl_dp"             : { "plusargs": {"+smi_dp_ecc_inj" : 1, "+single_err_inj" : 1, "+uncorr_error_inj_pcnt" : 100} },

              "multi_all_c_cmdrsp"   : { "plusargs": {"+check_hdr_msg_type" : null, "+ccmd_rsp_err_inj"  : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_nc_cmdrsp"  : { "plusargs": {"+check_hdr_msg_type" : null, "+nccmd_rsp_err_inj" : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_snpreq"     : { "plusargs": {"+no_dvm_snoop_test": null, "+check_hdr_msg_type" : null, "+snp_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_strreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+str_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_dtrreq"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtr_req_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_dtwrsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+dtw_rsp_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_dtwdbgrsp"  : { "plusargs": {"+check_hdr_msg_type" : null, "+dtw_dbg_rsp_err_inj" : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1, "+tcap_reg_prog_en": null, "+ttrig_reg_prog_en": null, "+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0"} },
              "multi_all_cmprsp"     : { "plusargs": {"+check_hdr_msg_type" : null, "+cmp_rsp_err_inj"   : null, "+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_hdr_random"     : { "plusargs": {"+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_ndp_random"     : { "plusargs": {"+smi_ndp_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_dp_random"      : { "plusargs": {"+smi_dp_ecc_inj"  : 1, "+uncorr_error_inj_pcnt" : 1} },
              "multi_all_random"     : { "plusargs": {"+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+uncorr_error_inj_pcnt" : 1} }
            },
            "label": [
                "resiliency",
                "regr", "weekly",
                "regr_sanity_2",
                "tachl_cover",
                "regr_cov"
            ]
        },
       "chi_resiliency_smi_prot_corr_err": {
            "name": "chi_aiu_resiliency_test",
            "purpose": "transport protection fault injection",
            "config": [
                "hw_config_two",
                "hw_cfg_7_all_ecc"
            ],
            "iter": 1,
            "plusargs": {
                "+inj_cntl":1,
                "+random_txn_test": null,
                "+collect_resiliency_cov" : 1,
                "+k_num_requests": "100",
                "+k_num_snoop": "50"
            },
            "comment": "3 flavors will be exercised. NDP/DP/HDR",
            "flavors": {
              "multi_ndp"         : { "plusargs": {"+smi_ndp_err_inj" : 1, "+corr_error_inj_pcnt" : 30} },
              "multi_hdr"         : { "plusargs": {"+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 30} },
              "multi_dp"          : { "plusargs": {"+smi_dp_ecc_inj"  : 1, "+corr_error_inj_pcnt" : 30} },
              "multi_all"         : { "plusargs": {"+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 30} },
              "multi_all_cov"     : { "plusargs": {"+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 30, "+collect_resiliency_cov" : 1} },
              "multi_all_cov_dtwdbg_rsp"     : { "plusargs": {"+smi_ndp_err_inj" : 1, "+dtw_dbg_rsp_err_inj" : null, "+tmp_fix_dtwdbgrsp" : null, "+tcap_reg_prog_en": null,  "+cctrlr_enables": "0x000000ff", "+trace_native_match_en": "0", "+trace_addr_match_en": "0", "+trace_memattr_match_en": "0", "+trace_opcode_match_en": "0", "+trace_target_type_match_en": "1", "+trace_user_match_en": "0", "+trace_target_type_match_hut": "0", "+trace_target_type_match_hui": "0", "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 30, "+collect_resiliency_cov" : 1} },
              "multi_all_100p"    : { "plusargs": {"+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 100} },
              "multi_all_err_cnt" : { "plusargs": {"+smi_ndp_err_inj" : 1, "+smi_dp_ecc_inj" : 1, "+smi_hdr_err_inj" : 1, "+corr_error_inj_pcnt" : 1, "check_corr_err_cnt" : null, "+res_corr_err_threshold" : 25} }
            },
            "label": [
                "resiliency",
                "regr", "weekly",
                "regr_sanity_2",
                "tachl_cover",
                "regr_cov"
            ]
        },
       "resiliency_unitduplication": {
            "name": "chi_aiu_resiliency_test",
            "purpose": "unitDuplication protection fault injection",
            "config": [
		    "hw_cfg_7_all_ecc",
		    "hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+test_unit_duplication": 1,
                "+k_smi_cov_en": "0",
                "+random_txn_test": null,
                "+k_num_requests": "0",
                "+k_num_snoop": "0"
            },
            "label": [
                "resiliency",
                "regr", "weekly",
		"regr_sanity_2",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "chi_wdata_flit_with_poison": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate random poison on chi tx wdata flit and check smi_cmstatus on DTWreq/DTRreq = 8'b10000011.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.poisonondatflit",
            "plusargs": {
                "+wt_chi_data_flit_with_poison": "20",
                "+no_stash_snoop_test": null,
                "+write_txn_test": null,
                "+start_ix": "1",
                "+use_copyback" : "1",
                "+max_interleave": "1",
                "+k_num_snoop": "1"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr",
                "error"
            ]
        },
        "data_error_on_chi_flit": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate data error on chi tx data flit and check smi_cmstatus on DTWreq/DTRreq = 8'b10000011.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.derrondatflit",
            "plusargs": {
                "+chi_data_flit_data_err": "50",
                "+no_stash_snoop_test": null,
                "+k_rd_noncoh_pct":"0", 
                "+k_rd_rdonce_pct":"0", 
                "+k_rd_ldrstr_pct":"0", 
                "+k_dt_ls_upd_pct":"0", 
                "+k_dt_ls_cmo_pct":"0", 
                "+k_dt_ls_sth_pct":"0", 
                "+k_wr_noncoh_pct":"100", 
                "+k_wr_cohunq_pct":"100", 
                "+k_wr_cpybck_pct":"0",
                "+k_atomic_st_pct":"0", 
                "+k_atomic_ld_pct":"0", 
                "+k_atomic_sw_pct":"0", 
                "+k_atomic_cm_pct":"0", 
                "+k_dvm_opert_pct":"0", 
                "+k_pre_fetch_pct":"0", 
                "+max_interleave": "1",
                "+k_num_requests": "500",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr",
                "error"
            ]
        },
        "chi_snp_rsp_data_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate resperr = data error on chi interface.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 5,
            "comment": "#Stimulus.CHIAIU.v3.snpsrsperr",
            "plusargs": {
                "+SNPrsp_with_data_error":"80",
                "+random_txn_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_ProtErrDetEn_seq",
                "+k_num_snoop": "1500"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "chi_snp_rsp_non_data_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate resperr = non-data error on chi interface.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 2,
            "plusargs": {
                "+SNPrsp_with_non_data_error":"90",
                "+random_txn_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_ProtErrDetEn_seq",
                "+k_num_requests": "500",
                "+k_num_snoop": "100"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "error_in_atomic_txn": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate Atomic txns and drop non-coh atomic part if error reported through StrReq cmstatus in coherent part and indicate error in CRESP and CHI DATA, STRreq.cmstatus will not indicate error for non-coh atomic txn",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.erronatomictxn",
            "plusargs": {
                "+strreq_cmstatus_with_error":"10",
                "+atomic_txn_test": null,
                "+start_ix" : "1",
                "+k_num_requests": "500",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_cmprsp_cmstatus_with_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTWrsp from system sequence to have random error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_config_resiliency_placeholder",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+cmprsp_cmstatus_with_error":"50",
                "+dvm_op_test": null,
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_strreq_cmstatus_with_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate StrReq from system sequence to have random values.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.strcmstatuserror",
            "plusargs": {
                "+strreq_cmstatus_with_error":"10",
                "+read_txn_test": null,
                "+start_ix" : "1",
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtwrsp_cmstatus_with_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTWrsp from system sequence to have random error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+dtwrsp_cmstatus_with_error":"40",
                "+write_txn_test": null,
                "+atomic_txn_test": null,
                "+start_ix" : "1",
                "+use_copyback" : "1",
                "+k_num_snoop": "1"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtrreq_cmstatus_with_data_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq from system sequence to have data error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.derrondtrreq",
            "plusargs": {
                "+dtrreq_cmstatus_with_error":null,
                "+cmstatus_data_error":"50",
                "+atomic_txn_test": null,
                "+read_txn_test": null,
                "+k_num_requests": "10",
                "+start_ix": "1",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtrreq_cmstatus_with_non_data_error": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq from system sequence to have non data error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.nderrondtrreq",
            "plusargs": {
                "+dtrreq_cmstatus_with_error":null,
                "+cmstatus_non_data_error":"50",
                "+read_txn_test": null,
                "+atomic_txn_test": null,
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dbad_on_DTRreq": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random dbad on DTRreq error tests",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.dbadondtr",
            "plusargs": {
                "+random_dbad_value":"50",
                "+start_ix": "1",
                "+k_num_snoop": "1"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "csr_uuecr_sw_write": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Checking alias register write priority over error injection, Error injection: Generate CMDrsp with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.transporterr.v3.cmdrsp",
            "plusargs": {
                "+random_txn_test": null,
                "+k_csr_seq": "chi_aiu_csr_uuecr_sw_write_seq",
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "wrong_target_id_on_CMDrsp": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate CMDrsp with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_cmdrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+disable_sb_objection": null,
                "+check_error_test_pending_txn": null,
                "+k_num_requests": "10",
                "+k_num_snoop": "0"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_CMDrsp_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate CMDrsp with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_cmdrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "csr_timeout_error_test_snp_rsp_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Time out error test: hold back SNPrsp so that timeout occure in STT.",
            "config": [
		"hw_config_two","config256bit",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+no_stash_snoop_test": null,
                "+k_csr_seq": "chi_aiu_csr_time_out_error_seq",
                "+SNPrsp_time_out_test": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "to_inc_in_ncore_3_2"
            ]
        },
        "csr_timeout_error_test_str_req_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Time out error test: hold back STRreq so that timeout occure in OTT.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 10,
            "plusargs": {
                "+write_txn_test": null,
                "+read_txn_test": null,
                "+k_csr_seq": "chi_aiu_csr_time_out_error_seq",
                "+STRreq_time_out_test": null,
                "+start_ix": "1",
                "+k_num_requests": "50",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "csr_multiple_timeout_error_test_str_req_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Multiple Time out error test: hold back STRreq so that timeout occure in OTT.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_csr_seq": "chi_aiu_csr_time_out_error_seq",
                "+STRreq_time_out_test": null,
                "+start_ix": "1",
                "+k_num_requests": "25",
                "+en_excl_txn":0,
                "+k_num_timeout_err": "5",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "csr_timeout_error_test_cmd_rsp_delayed": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Time out error test: hold back CMDrsp so that timeout occure in OTT.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+write_txn_test": null,
                "+read_txn_test": null,
                "+start_ix": "1",
                "+k_csr_seq": "chi_aiu_csr_time_out_error_seq",
                "+boot_sysco_st": 0,
                "+CMDrsp_time_out_test": null,
                "+k_num_requests": "1",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "wrong_target_id_on_DTWrsp": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTWrsp with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+write_txn_test": null,
                "+wrong_dtwrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+disable_sb_objection": null,
                "+check_error_test_pending_txn": null,
                "+max_interleave":"1",
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated, #Stimulus.CHIAIU.transporterr.v3.dtwrsp",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_DTWrsp_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTWrsp with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+write_txn_test": null,
                "+wrong_dtwrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_DTRrsp_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRrsp with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_config_resiliency_placeholder",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+no_stash_snoop_test": null,
                "+wrong_dtrrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated, #Stimulus.CHIAIU.transporterr.v3.dtrrsp",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_SNPreq": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate SNPrsp with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_snpreq_target_id": null,
                "+no_stash_snoop_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+disable_sb_objection": null,
                "+k_num_snoop": "1"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated, #Stimulus.CHIAIU.transporterr.v3.snpreq",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_SNPreq_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate SNPrsp with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_snpreq_target_id": null,
                "+no_stash_snoop_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_DTRreq": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+wrong_dtrreq_target_id": null,
                "+no_stash_snoop_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+disable_sb_objection": null,
                "+check_error_test_pending_txn": null,
                "+k_num_requests": "10",
                "+k_num_snoop": "0"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated, #Stimulus.CHIAIU.transporterr.v3.dtrreq",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_DTRreq_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+wrong_dtrreq_target_id": null,
                "+no_stash_snoop_test": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_STRreq": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate STRreq with wrong target ID on AIU's rx port.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_strreq_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+disable_sb_objection": null,
                "+check_error_test_pending_txn": null,
                "+k_num_requests": "10",
                "+k_num_snoop": "0"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated, #Stimulus.CHIAIU.transporterr.v3.strreq",
            "flavors": {
              "uedr0_resiliency" : {"plusargs": {"dis_uedr_ted_4resiliency": null}}
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_STRreq_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate STRreq with wrong target ID on AIU's rx port & resend the correct pkt later too.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_strreq_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov",
		"regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_SYSrsp": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate SYSrsp with wrong target ID on AIU's rx port.",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20", "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_sysrsp_target_id": null,
                "+disable_sb_objection": null,
                "+k_num_requests": "1000",
                "+k_num_snoop": "100"
            },
            "comment": "1 flavors will be exercised. without xUEDR configuration, fault should be generated",
            "flavors": {
              "TranP_attach_detach_uedr"             : {"comment": "#Stimulus.CHIAIU.sysco.sysrsperrattach", "plusargs": {"+check4_attach" : null, "+check4_detach" : null, "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq"}},
              "TranP_attach_detach_uedr0_resiliency" : {"plusargs": {"+check4_attach" : null, "+check4_detach" : null, "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq", "dis_uedr_ted_4resiliency": null}},
              "TimeO_attach_uedr"                    : {"comment": "#Stimulus.CHIAIU.sysco.sysrsptimeout", "plusargs": {"+check4_attach" : null, "+k_csr_seq": "chi_aiu_csr_time_out_error_seq", "+SYSrsp_time_out_test" : null, "+wti_err_inj_once" : null}},
              "TranP_detach_uedr"                    : {"comment": "#Stimulus.CHIAIU.sysco.sysrsperrdetach", "plusargs": {"k_toggle_sysco" : null, "+check4_detach" : null, "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq"}},
              "TranP_detach_uedr0_resiliency"        : {"plusargs": {"k_toggle_sysco" : null, "+check4_detach" : null, "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq", "dis_uedr_ted_4resiliency": null}},
              "TimeO_detach_uedr"                    : {"comment": "#Stimulus.CHIAIU.sysco.sysrsptimeout", "plusargs": {"k_toggle_sysco" : null, "+check4_detach" : null, "+k_csr_seq": "chi_aiu_csr_time_out_error_seq", "+SYSrsp_time_out_test" : null, "+wti_err_inj_once" : null}}
            },
            "label": [
                "regr", "weekly",
                "tachl_cover",
                "regr_cov",
                "regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_SYSreq": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate SYSreq with wrong target ID on AIU's rx port.",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20", "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_event_msg" : 50,
                "+wrong_sysreq_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+resend_correct_target_id": null,
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
                "tachl_cover",
                "regr_cov",
                "regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_DTWdbgrsp": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate SYSrsp with wrong target ID on AIU's rx port.",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20", "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_DtwDbg_rsp_target_id": null,
                "+tcap_reg_prog_en": null,
                "+ttrig_reg_prog_en": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+cctrlr_enables": "0x000000ff", 
                "+trace_native_match_en": "0", 
                "+trace_addr_match_en": "0", 
                "+trace_memattr_match_en": "0", 
                "+trace_opcode_match_en": "0", 
                "+trace_target_type_match_en": "1", 
                "+trace_user_match_en": "0", 
                "+trace_target_type_match_hut": "0", 
                "+trace_target_type_match_hui": "0",
                "+resend_correct_target_id": null,
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
                "tachl_cover",
                "regr_cov",
                "regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "wrong_target_id_on_SYSrsp_resend": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate CMDrsp with wrong target ID on AIU's rx port.",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20", "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+wrong_sysrsp_target_id": null,
                "+k_csr_seq": "chi_aiu_csr_caiuuedr_TransErrDetEn_seq",
                "+check4_attach" : null,
                "+check4_detach" : null,
                "+resend_correct_target_id": null,
                "+k_num_requests": "1500",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
                "tachl_cover",
                "regr_cov",
                "regr_sanity_1",
                "resiliency_tt",
                "csr"
            ]
        },
        "random_unmapped_add": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.decerr.v3.unmappaddr",
            "plusargs": {
                "+random_txn_test": null,
                "+ASSERT_OFF": null,
                "+start_ix": "1",
                "+unmapped_add_access": "50",
                "+k_csr_seq": "chi_aiu_csr_no_address_hit_seq",
                "+k_num_requests": "500",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"regr_cov",
                "csr"
            ]
        },
        "read_txn_unmapped_add": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+ASSERT_OFF": null,
                "+chi_intf_b2b": null,
                "+lnk_credit_strv_mode": null,
                "+start_ix": "1",
                "+unmapped_add_access": "90",
                "+k_csr_seq": "chi_aiu_csr_no_address_hit_seq",
                "+k_num_requests": "1000",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"regr_cov",
                "csr"
            ]
        },
        "unsupported_txn": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.decerr.v3.unsupportedtxn",
            "plusargs": {
                "+unsupported_txn": "50",
                "+k_num_requests" : "500",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"regr_cov",
                "csr"
            ]
        },
        "csr_addr_region_overlap_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Decode error: Address overlap (Multiple address hit) sequence",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.csroverlaptest",
            "plusargs": {
                "+k_num_requests" : "2",
                "+k_num_snoop": "0",
                "+random_txn_test": null,
                "+start_ix": "1",
                "+user_addr_for_csr": null,
                "+use_seq_user_addrq": null,
                "+use_user_addrq": "1",
                "+k_csr_seq": "chi_aiu_csr_address_region_overlap_seq"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"regr_cov",
                "csr"
            ]
        },
        "perf_read": {
            "name": "chi_aiu_perf_test",
            "purpose": "Read performance",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_7_snps",
                "hw_cfg_7",
		"hw_config_resiliency_placeholder",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "perf_write": {
            "name": "chi_aiu_perf_test",
            "purpose": "Write performance",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_7_snps",
                "hw_cfg_7",
		"hw_config_resiliency_placeholder",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+max_interleave": "1",
                "+write_txn_test": null
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "latency_test": {
            "name": "chi_aiu_perf_test",
            "purpose": "Latency measurement test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+latency_test": null,
                "+en_cmd_to_cmdreq_latency_chk": null,
                "+en_chi_data_to_dtwreq_latency_chk": null,
                "+en_dtrreq_to_chi_data_latency_chk": null,
                "+en_strreq_to_chi_rsp_latency_chk": null,
                "+en_snpreq_to_chi_snoop_latency_chk": null,
                "+en_chi_rsp_to_snprsp_latency_chk": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "weekly",
		"tachl_cover"
            ]
        },
        "latency_test_1": {
            "name": "chi_aiu_perf_test",
            "purpose": "Latency measurement test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+en_chi_data_to_dtrReq_latency_chk": null,
                "+wt_snp_inv": "95",
                "+wt_snp_nitc": "95",
                "+wt_snp_inv_dtw": "90",
                "+k_num_request": "1000",
                "+k_num_snoop": "500"
            },
            "label": [
                "weekly",
		"tachl_cover"
            ]
        },
        "random_256bit": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
                "config256bit"
            ],
            "iter": 10,
            "plusargs": {
                "+random_txn_test": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "dataless": {
            "name": "chi_aiu_bringup_test",
            "purpose": "dataless test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
                "hw_cfg_7_snps",
                "hw_cfg_7"
            ],
            "iter": 5,
            "plusargs": {
                "+dataless_txn_test": null,
                "+en_excl_txn":0,
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "sysco": {
            "name": "chi_aiu_bringup_test",
            "purpose": "",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
                "hw_cfg_7"
            ],
            "iter": 5,
            "plusargs": {
                "+random_txn_test": null,
		"+no_dvm_snoop_test": null,
                "+k_num_requests": "2000",
                "+k_num_snoop": "1500"
            },
            "comment": "#Stimulus.CHIAIU.sysco.attachwithtraffic",
            "flavors": {
              "attach" : {"plusargs": {"+boot_sysco_st": 1
                          }
              },
              "csr_attach" : {"plusargs": {"+k_csr_seq":"chi_aiu_ral_sysco_seq",
                                           "+boot_sysco_st": 0
                             }
              },
              "toggle_delay" : {"plusargs": { "+k_toggle_sysco": null,
                                              "+change_delays_over_time": 0,
                                              "+k_burst_pct": 0
                               }
              },
              "toggle" : {"comment": "#Stimulus.CHIAIU.sysco.detachwithtraffic", "plusargs": { "+k_toggle_sysco": null
                         }
              },
              "csr_toggle" : {"plusargs": {"+k_csr_seq":"chi_aiu_ral_sysco_seq",
                                           "+boot_sysco_st": 0,
                                           "+csr_boot_sysco_st": 0,
                                           "+k_toggle_sysco": null
                             }
              }
            },
            "label": [
                "regr", "weekly",
                "regr_sysco",
		"tachl_cover",
                "regr_cov"
            ]
        },
        "random_scm_test": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Randomly configure credits for all targets and generate transactions on each targets",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+random_txn_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "50",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "10",
                "+k_delay_min": "100",
                "+k_delay_max": "250",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_zero_nonzero_crd_test": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Test feature with randomly configuring zero-nonzero credits",
            "config": [
		        "hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		        "hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		        "hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 5,
            "plusargs": {
                "+random_txn_test": null,
                "+zero_nonzero_crd_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "50",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "1",
                "+k_delay_min": "100",
                "+k_delay_max": "250",
                "+k_coh_addr_pct": "50",
                "+k_noncoh_addr_pct": "50",
                "+k_device_type_mem_pct": "50",
                "+no_stash_snoop_test": null,
                "+k_num_requests": "1000",
                "+k_num_snoop": "100",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"crd_regr",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_scm_dii_test": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Randomly configure credits and drive transactions to dii",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.4.SCM/CounterStateDirectedTest",
            "plusargs": {
                "+random_txn_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "50",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "10",
                "+k_delay_min": "100",
                "+k_delay_max": "250",
                "+non_coherent_test": null,
                "+k_coh_addr_pct": "0",
                "+k_noncoh_addr_pct": "100",
                "+k_device_type_mem_pct": "100",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_num_requests": "1000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"crd_regr",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_scm_dmi_test": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Randomly configure the credits and drive transactions to dmi",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.4.SCM/CounterStateDirectedTest",
            "plusargs": {
                "+random_txn_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "50",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "10",
                "+k_delay_min": "100",
                "+k_delay_max": "250",
                "+non_coherent_test": null,
                "+k_coh_addr_pct": "0",
                "+k_noncoh_addr_pct": "100",
                "+k_device_type_mem_pct": "0",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_num_requests": "2000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"crd_regr",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_scm_dmi_test_fcov": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Randomly configure the credits and drive transactions to dmi",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.4.SCM/CounterStateDirectedTest",
            "plusargs": {
                "+random_txn_test": null,
                "+scm_bckpressure_test": null,
                "+dmi_state_fcov": null,
                "+k_chi_init_credit_val": "30",
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "50",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "10",
                "+k_delay_min": "100",
                "+k_delay_max": "250",
                "+non_coherent_test": null,
                "+k_coh_addr_pct": "0",
                "+k_noncoh_addr_pct": "100",
                "+k_device_type_mem_pct": "0",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_num_requests": "2000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"crd_regr",
                "crd_fcov",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_scm_dce_test_0": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+scm_bckpressure_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "100",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "1",
                "+k_coh_addr_pct": "80",
                "+k_noncoh_addr_pct": "0",
                "+k_chi_init_credit_val": "10",
                "+use_user_addrq": "250",
                "+use_seq_user_addrq": "1",
                "+use_single_memregion": "1",
                "+max_interleave": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
                "regr_scm_dce",
		"crd_regr",
		"regr_sanity",
		"scm_cover",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_scm_dce_test_0_fcov": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Random txn test",
            "config": [
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_cfg_20",
		"hw_config_resiliency_placeholder"
            ],
            "iter": 10,
            "plusargs": {
                "+chi_intf_b2b":"1",
                "+scm_bckpressure_test": null,
                "+k_burst_pct": "100",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "10",
                "+k_coh_addr_pct": "100",
                "+k_noncoh_addr_pct": "0",
                "+dce_state_fcov" : null,
                "+k_chi_init_credit_val": "30",
                "+max_interleave": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "weekly",
                "regr_scm_dce",
		"crd_regr",
		"regr_sanity",
		"scm_cover",
                "crd_fcov",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "random_scm_dce_test_1": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+scm_bckpressure_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "100",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "1",
                "+k_coh_addr_pct": "80",
                "+k_noncoh_addr_pct": "0",
                "+k_chi_init_credit_val": "1",
                "+use_user_addrq": "250",
                "+use_seq_user_addrq": "1",
                "+use_single_memregion": "1",
                "+max_interleave": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
                "regr_scm_dce",
		"regr_sanity",
		"crd_regr",
		"tachl_cover",
		"scm_cover",
		"regr_cov"
            ]
        },
        "random_scm_dce_test_2": {
            "name": "chi_credit_sw_mgr_test",
            "purpose": "Random txn test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 10,
            "plusargs": {
                "+scm_bckpressure_test": null,
                "+chi_intf_b2b":"1",
                "+k_burst_pct": "100",
                "+main_seq_iter": "1",
                "+cfg_seq_iter": "2",
                "+k_coh_addr_pct": "80",
                "+k_noncoh_addr_pct": "0",
                "+k_chi_init_credit_val": "31",
                "+use_user_addrq": "250",
                "+use_seq_user_addrq": "1",
                "+use_single_memregion": "1",
                "+max_interleave": "1",
                "+UVM_TIMEOUT": "10000000000",
                "+k_timeout":   "10000000000",
                "+k_csr_seq": "chi_aiu_csr_scm_seq"
            },
            "label": [
                "regr", "weekly",
                "regr_scm_dce",
		"crd_regr",
		"regr_sanity",
		"scm_cover",
		"tachl_cover",
		"regr_cov"
            ]
        },

        "read": {
            "name": "chi_aiu_bringup_test",
            "purpose": "read test",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
            	"hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 10,
            "plusargs": {
                "+read_txn_test": null,
                "+en_excl_txn":0,
                "+k_num_snoop": "3000",
                "+k_num_requests": "3000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "write": {
            "name": "chi_aiu_bringup_test",
            "purpose": "write test",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
            	"hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 10,
            "plusargs": {
                "+write_txn_test": null,
                "+wr_dat_cancel_pct": "90",
                "+max_interleave": "1",
                "+k_num_snoop": "3000",
                "+k_num_requests": "3000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "write_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "write test",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 40,
            "plusargs": {
                "+write_txn_test": null,
                "+write_cpbck_cov": null,
                "+wr_dat_cancel_pct": "90",
                "+max_interleave": "1",
                "+k_num_snoop": "1000"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "snp_resp_data_ptl": {
            "name": "chi_aiu_bringup_test",
            "purpose": "write test",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_7",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 10,
            "plusargs": {
                "+write_txn_test": null,
                "+wr_dat_cancel_pct": "90",
                "+wr_snp_cmd_req_addr": "90",
                "+use_copyback" : "1",
                "+force_snpdataptl" : "1",
                "+max_interleave": "1",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "snp_resp_data_ptl_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "write test",
            "config": [
                "hw_config_resiliency_placeholder"
            ],
            "iter": 50,
            "plusargs": {
                "+write_txn_test": null,
                "+wr_dat_cancel_pct": "90",
                "+use_copyback" : "1",
                "+placeholder_snprspdata_ptl" : "1",
                "+force_snpdataptl" : "1",
                "+k_num_snoop": "3000"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "snp_data_resp": {
            "name": "chi_aiu_bringup_test",
            "purpose": "random test",
            "config": [
                "hw_cfg_7",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder"
            ],
            "iter": 5,
            "plusargs": {
                 "+random_txn_test": null,
                 "+snp_data_rsp" :null,
                 "+k_num_snoop": "1000"

            },
            "label": [
                "regr", "weekly",
		"regr_cov"
            ]
        },
        "read_same_addr": {
            "name": "chi_aiu_bringup_test",
            "purpose": "read test with same address to fill up the linked list",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_7",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
                "+read_txn_test": null,
                "+use_user_addrq": "1",
                "+max_interleave": "1",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
                "regr_local",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "read_noncoh_same_addr": {
            "name": "chi_aiu_bringup_test",
            "purpose": "read non coherent test with same address to fill up the linked list",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
                "+read_noncoh_txn_test": null,
                "+use_user_addrq": "1",
                "+max_interleave": "1",
                "+k_num_snoop": "0"
            },
            "label": [
                "regr", "weekly",
                "regr_local",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "write_same_addr": {
            "name": "chi_aiu_bringup_test",
            "purpose": "write test with same address to fill up the linked list",
            "config": [
                "hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity",
                "hw_config_resiliency_placeholder",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
                "+write_coh_noncoh_txn_test": null,
                "+use_user_addrq": "1",
                "+max_interleave": "1",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "atomic": {
            "name": "chi_aiu_bringup_test",
            "purpose": "atomic test",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 10,
            "plusargs": {
                "+atomic_txn_test": null,
                "+atomic_fcov": null,
                "+start_ix": "1",
                "+k_num_snoop": "100"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "atomic_err_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "coherent atomic commands with address dependency and strreq cmstatus error",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 5,
            "plusargs": {
                "+atomic_err_txn_test": null,
                "+strreq_cmstatus_with_error":"50",
                "+use_user_addrq": "1",
                "+max_interleave": "1",
                "+en_excl_txn":0,
                "+start_ix": "1",
                "+k_num_snoop": "100"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "atomic_small": {
            "name": "chi_aiu_bringup_test",
            "purpose": "atomic test",
            "config": [
            	"hw_config_two",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
		"config256bit"
            ],
            "iter": 1,
            "plusargs": {
                "+atomic_txn_test": null,
                "+start_ix": "1",
                "+k_num_snoop": "0",
                "+k_num_requests": "5"
            },
            "label": [
                "regr", "weekly",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "DVM_same_addr": {
            "name": "chi_aiu_bringup_test",
            "purpose": "DVM only test with same address to fill up the linked list",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
                "hw_config_resiliency_placeholder",
                "hw_cfg_7_all_ecc",
                "hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+use_same_dvm_addr": null,
                "+dvm_op_test": null
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "DVM": {
            "name": "chi_aiu_bringup_test",
            "purpose": "DVM only test",
            "comment": "#Stimulus.CHI.v3.6.DVM.max_ott",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
                "hw_cfg_7_snps",
                "hw_config_resiliency_placeholder",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 5,
            "plusargs": {
                "+dvm_op_test": null
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "DVM_SNP": {
            "name": "chi_aiu_bringup_test",
            "purpose": "DVM snoop stress test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
                "hw_cfg_7_snps",
                "hw_config_resiliency_placeholder",
                "hw_cfg_41",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 1,
            "plusargs": {
                "+dvm_op_test": null,
                "+k_en_dvm_snoops": null,
                "+k_num_requests": "1",
                "+k_num_snoop": "1000",
                "+k_rq_lcrdrt_pct": "0",
                "+k_burst_pct": "100",
                "+start_ix": "1",
                "+dvm_snp_test": null
            },
            "flavors": {
              "all_sync_snoop" : {"plusargs": {"+k_snp_dvm_msg_not_sync": 0}},
              "equal_mix_sync_non_sync_snoop" : {"plusargs": {"+k_snp_dvm_msg_not_sync": 50}},
              "all_non_sync_snoop" : {"plusargs": {"+k_snp_dvm_msg_not_sync": 100}}
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "DVM_addr_region_overlap": {
            "name": "chi_aiu_bringup_test",
            "purpose": "DVM only test with DVM command address falling into NRS/GPRA/BOOT region or random values",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
                "hw_cfg_20",
                "hw_cfg_7_snps",
                "hw_config_resiliency_placeholder",
                "hw_cfg_7",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity"
            ],
            "iter": 5,
            "plusargs": {
                "+dvm_addr_region_overlap": null,
                "+dvm_op_test": null
            },
            "flavors": {
                "all_secure" : {"plusargs": { "+all_gpra_secure": null }, "label": ["regr", "weekly"]},
                "random_secure" : {"plusargs": { "+random_gpra_secure": null }, "label": ["regr", "weekly"]}
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "DVM_addr_region_overlap_mix_traffic": {
            "name": "chi_aiu_bringup_test",
            "purpose": "DVM + mix traffic test with DVM command address falling into NRS/GPRA/BOOT region or random values",
            "config": [
		"hw_config_two",
		"hw_config_resiliency_placeholder",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
                "hw_cfg_7_snps"
            ],
            "iter": 5,
            "plusargs": {
                "+random_txn_test": null,
                "+cache_state_wrbkptl": null,
                "+k_num_requests": "2000",
                "+k_dvm_opert_pct": "100",
                "+k_num_snoop": "1000",
                "+max_interleave": "1",
                "+dvm_addr_region_overlap": null
            },
            "flavors": {
                "all_secure" : {"plusargs": { "+all_gpra_secure": null, "+non_secure_access_test": null, "+k_csr_seq":"chi_aiu_csr_secure_access"}, "label": ["regr", "weekly"]},
                "random_secure" : {"plusargs": { "+random_gpra_secure": null, "+non_secure_access_test": null, "+k_csr_seq":"chi_aiu_csr_secure_access"}, "label": ["regr", "weekly"]}
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "perfmon_counter_bw_filter": {
            "name": "perf_cnt_test",
            "purpose": "bringup test for bandwidth counter with enabling bandwidth filter",
            "config": [
                "hw_cfg_7_all_ecc"
            ],
            "iter": 1,
            "plusargs": {         
                "+k_num_requests": "1000",
                "+k_num_snoop": "20",
                "+random_txn_test": null,
                "+max_interleave": "1",
                "+UVM_MAX_QUIT_COUNT": "150",
                "+perfmon_directed_rand":null,
                "+perfmon_32bit_mode":null,
                "+pmon_bw_user_bits":null,
                "+filter_enable":"1",
                "+event_second":"30",
                "+ssr_count":"4",
                "+counter_control":"4",
                "+min_stall_period":"0",
                "+pmon_bw_test":null
            },
            "flavors": {
                "user_bits_cmd_req_wr_semi_directed": {
                "plusargs": {         
                    "+write_txn_test": null,  
                    "+bw_filter_select":"0",
                    "+event_first":"17",
                    "+bw_filter_mask":"FFFF"
                    }
                },
                "user_bits_cmd_req_wr_fully_directed": {
                "plusargs": {         
                    "+write_txn_test": null,  
                    "+event_first":"17",
                    "+bw_filter_value":"0a",
                    "+bw_filter_mask":"FFFF"
                    }
                },
                "user_bits_cmd_req_read_semi_directed": {
                "plusargs": {         
                    "+read_txn_test": null,  
                    "+bw_filter_select":"0",
                    "+event_first":"18",
                    "+bw_filter_mask":"FFFF"
                    }
                },
                "user_bits_cmd_req_read_fully_directed": {
                "iter": 1,
                "plusargs": {         
                    "+read_txn_test": null,  
                    "+event_first":"18",
                    "+bw_filter_select":"0",
                    "+bw_filter_value":"0a",
                    "+bw_filter_mask":"FFFF"
                    }
                }
            },
            "label": [
            "perf_mon_bw","perf_mon_regr","regr", "weekly"

            ]
        },
        "perfmon": {
            "name": "perf_cnt_test",
            "purpose": "Default Test",
            "config": [
                "hw_config_two"
            ],
            "iter": 10,
            "_comment0": "Below all plusargs only for CHI AIU",
            "plusargs": {
                "+k_num_requests": "100",
                "+k_num_snoop": "20",
                "+max_interleave":"1",
                "+random_txn_test": null,
                "+no_event_check_dis":"1",
                "+UVM_MAX_QUIT_COUNT": "150"
            },
            "_comment1": "Below all plusargs only for PERF MON",
            "_comment2": "######## START FLAVORS ###########",
            "flavors": {
                "counter_mode_32bit": {
                    "purpose": "Check 32 bit counter mode",
                    "iter": 1,
                    "plusargs": {         
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"1",
                        "+event_second":"2",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0"
                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_local_clear": {
                    "purpose": "Pmon test that configure local clear registers",
                    "iter": 1,
                    "plusargs": {
                        "+perfmon_directed_rand":null,
                        "+perfmon_event": "2",
                        "+counter_control": "0",
                        "+min_stall_period":"0",
                        "+ssr_count":"1",
                        "+main_seq_iter":"2",
                        "+perfmon_local_count_clear":null
                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_bw_bringup": {
                    "purpose": "bringup test for bandwidth counter",
                    "iter": 1,
                    "plusargs": {         
                        "+k_num_requests": "1000",
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"18",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+pmon_bw_test":null
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_cmd_req_write": {
                    "purpose": "test for cmr_req_write event",
                    "iter": 1,
                    "plusargs": {         
                        "+k_num_requests": "1000",
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"17",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+pmon_bw_test":null
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_cmd_req_read": {
                    "purpose": "test for cmr_req_read event",
                    "iter": 1,
                    "plusargs": {         
                        "+k_num_requests": "1000",
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"18",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+pmon_bw_test":null
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_snp_rsp": {
                    "purpose": "test for snp_rsp event",
                    "iter": 1,
                    "plusargs": {         
                        "+k_num_requests": "1000",
                        "+k_num_snoop": "1000",
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"19",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+pmon_bw_test":null
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_filter_rand": {
                    "purpose": "Test for bandwidth counter with enabling bandwidth filter",
                    "iter": 10,
                    "plusargs": {
                        "+k_num_requests": "1000",       
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+filter_enable":"1",
                        "+pmon_bw_test":null
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_filter_bringup_funit_id_directed": {
                    "purpose": "Test for bandwidth counter with enabling bandwidth filter based on funit id",
                    "iter": 10,
                    "plusargs": {
                        "+write_txn_test": null,  
                        "+k_num_requests": "1000",       
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"17",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+bw_filter_mask":"FFFF",
                        "+filter_enable":"1",
                        "+pmon_bw_test":null,
                        "+bw_filter_select":"1",
                        "+bw_filter_value":"05"
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_bw_filter_bringup_funit_id_random": {
                    "purpose": "Test for bandwidth counter with enabling bandwidth filter based on funit id",
                    "iter": 10,
                    "plusargs": {
                        "+write_txn_test": null,  
                        "+k_num_requests": "1000",       
                        "+perfmon_directed_rand":null,
                        "+perfmon_32bit_mode":null,
                        "+event_first":"17",
                        "+event_second":"30",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+min_stall_period":"0",
                        "+bw_filter_mask":"FFFF",
                        "+filter_enable":"1",
                        "+pmon_bw_test":null,
                        "+bw_filter_select":"1"
                    },
                    "label": [
                        "perf_mon_bw"
                    ]
                },
                "counter_latency_bringup": {
                    "purpose": "Bringup test tfor latency counter",
                    "iter": 10,
                    "plusargs": {
                        "+perfmon_directed_rand":null,
                        "+perfmon_event": "2",
                        "+min_stall_period":"0",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+latency_count_enable":null,
                        "+pmon_latency_test":null,
                        "+perfmon_local_count_enable":null,
                        "+perfmon_32bit_mode":null,              
                        "+perfmon_local_count_clear":null,
                        "+lct_bin_offset":"00",
                        "+lct_pre_scale":"0",
                        "+lct_type":"1"
                    },
                    "label": [
                        "perf_mon_regr","perf_mon_lct"
                    ]
                },
                "counter_latency_bringup_offset": {
                    "purpose": "Bringup test for latency counter with latency offset defined",
                    "iter": 10,
                    "plusargs": {
                        "+perfmon_directed_rand":null,
                        "+perfmon_event": "2",
                        "+min_stall_period":"0",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+latency_count_enable":null,
                        "+pmon_latency_test":null,
                        "+perfmon_local_count_enable":null,
                        "+perfmon_32bit_mode":null,              
                        "+perfmon_local_count_clear":null,
                        "+lct_bin_offset":"70",
                        "+lct_pre_scale":"0",
                        "+lct_type":"1"
                    },
                    "label": [
                        "perf_mon_regr","perf_mon_lct"
                    ]
                },
                "counter_latency_rand": {
                    "name": "perf_cnt_test",
                    "purpose": "random test tfor latency counter",
                    "iter": 10,
                    "plusargs": {
                        "+perfmon_directed_rand":null,
                        "+perfmon_event": "2",
                        "+min_stall_period":"0",
                        "+ssr_count":"4",
                        "+counter_control":"4",
                        "+latency_count_enable":null,
                        "+pmon_latency_test":null,
                        "+perfmon_local_count_enable":null,
                        "+perfmon_32bit_mode":null,
                        "+perfmon_local_count_clear":null
                    },
                    "label": [
                        "perf_mon_regr","perf_mon_lct"
                    ]
                },       
                "bringup_test": {
                    "purpose": "bringup perfmon",
                    "plusargs": {
                        "+event_first": "1",
                        "+event_second": "0",
                        "+counter_control": "0",
                        "+ssr_count": "0"
                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_overflow_32b_with_interrupt": {
                    "purpose": "Counter 32b in NORMAL mode : event Divide_16_counter / Test overflow status register with interruption",
                    "plusargs": {
                        "+perfmon_event": "30",
                        "+counter_control": "0",
                        "+ssr_count": "0",
                        "+interrupt_enable": "1",
                        "+k_num_snoop": "0",
                        "+overflow_test": "1"
                    },
                    "label": [
                        "perf_mon_overflow"
                    ]
                },
                "counter_overflow_32b_without_interrupt": {
                    "purpose": "Counter 32b in NORMAL mode : event Divide_16_counter / Test overflow status register without interruption",
                    "plusargs": {
                        "+event_first": "30",
                        "+event_second": "0",
                        "+counter_control": "0",
                        "+interrupt_enable": "0",
                        "+ssr_count": "0",
                        "+k_num_snoop": "0",
                        "+overflow_test": "1"
                    },
                    "label": [
                        "perf_mon_overflow"
                    ]
                },
                "counter_overflow_64b_with_interrupt": {
                    "purpose": "Counter 64b in NORMAL mode : event Divide_16_counter / Test overflow status register with interruption",
                    "plusargs": {
                        "+event_first": "30",
                        "+event_second": "0",
                        "+counter_control": "0",
                        "+ssr_count": "1",
                        "+k_num_snoop": "0",
                        "+interrupt_enable": "1",
                        "+overflow_test": "1"
                    },
                    "label": [
                        "perf_mon_overflow"
                    ]
                },
                "counter_overflow_64b_without_interrupt": {
                    "purpose": "Counter 64b in NORMAL mode : event Divide_16_counter / Test overflow status register without interruption",
                    "plusargs": {
                        "+event_first": "30",
                        "+event_second": "0",
                        "+counter_control": "0",
                        "+ssr_count": "1",
                        "+k_num_snoop": "0",
                        "+interrupt_enable": "0",
                        "+overflow_test": "1"
                    },
                    "label": [
                        "perf_mon_overflow"
                    ]
                },
                "counter_normal": {
                    "purpose": "Counter in NORMAL mode",
                    "plusargs": {
                        "+counter_control": "0",
                        "+event_first": "1",
                        "+event_second": "2"

                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_and": {
                    "purpose": "Counter in AND mode",
                    "plusargs": {
                        "+counter_control": "1",
                        "+event_first": "1",
                        "+event_second": "2"

                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_xor": {
                    "purpose": "Counter in XOR mode",
                    "plusargs": {
                        "+counter_control": "2",
                        "+event_first": "1",
                        "+event_second": "2"

                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_no_event": {
                    "purpose": "Check event 0 is selecting no event",
                    "plusargs": {
                        "+event_first": "0",
                        "+event_second": "0"
                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "counter_min_stall": {
                    "purpose": "test all value of min stall",
                    "plusargs": {
                        "+main_seq_iter": 4,
                        "+event_first": "1",
                        "+event_second": "0",
                        "+ssr_count": "0"
                    },
                    "label": [
                        "perf_mon_counter_mode"
                    ]
                },
                "evt_all_SMI_TX": {
                    "purpose": "events TX SMI",
                    "plusargs": {
                        "+caiu0_event_first": "0v1n1v2n2v3n3v0n4v0n5v0n6v0n7v0",
                        "+caiu1_event_first": "0v1n1v2n2v3n3v0n4v0n5v0n6v0n7v0",
                        "+event_second": "0",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_TX0": {
                    "purpose": "events TX0 SMI",
                    "plusargs": {
                        "+perfmon_event": "1",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_TX1": {
                    "purpose": "events TX1 SMI",
                    "plusargs": {
                        "+perfmon_event": "2",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_TX2": {
                    "purpose": "events TX2 SMI",
                    "plusargs": {
                        "+perfmon_event": "3",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_all_SMI_RX": {
                    "purpose": "events RX SMI",
                    "plusargs": {
                        "+caiu0_event_first": "0v5n1v6n2v7n3v0n4v0n5v0n6v0n7v0",
                        "+caiu1_event_first": "0v5n1v6n2v7n3v0n4v0n5v0n6v0n7v0",
                        "+event_second": "0",
                        "+min_stall_period": "0",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_RX0": {
                    "purpose": "events RX0 SMI",
                    "plusargs": {
                        "+perfmon_event": "5",
                        "+min_stall_period": "0",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_RX1": {
                    "purpose": "events RX1 SMI",
                    "plusargs": {
                        "+perfmon_event": "6",
                        "+min_stall_period": "0",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_SMI_RX2": {
                    "purpose": "events RX2 SMI",
                    "plusargs": {
                        "+perfmon_event": "7",
                        "+min_stall_period": "0",
                        "+ssr_count": "1",
                        "+counter_control": "0"                        
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },  
                "evt_OTT": {
                    "purpose": "event OTT active",
                    "plusargs": {
                        "+event_first": "20",
                        "+event_second": "0",
                        "+counter_control": "3",
                        "+ssr_count": "2",
                        "+filter_select": "0",
                        "+xtt_entries_tolerance_pct":"20",
                        "+queue_check_dis" : "1"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_captured_smi_pkt": {
                    "purpose": "event captured SMI packet",
                    "plusargs": {
                        "+perfmon_event": "22",
                        "+ssr_count": "1",
                        "+k_num_requests": "2000",
                        "+k_num_snoop": "200",
                        "+cctrlr_value": "0x000000ff",
                        "+tctrlr0_value": "0x00000020",
                        "+tcap_reg_prog_en": "1",
                        "+ttrig_reg_prog_en": "1",
                        "+tcap_scb_en": "1",
                        "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_dropped_smi_pkt": {
                    "purpose": "event dropped SMI packet",
                    "plusargs": {
                        "+perfmon_event": "23",
                        "+ssr_count": "1",
                        "+k_num_requests": "10000",
                        "+k_num_snoop": "2000",
                        "+cctrlr_value": "0x000000ff",
                        "+tctrlr0_value": "0x00000020",
                        "+tcap_reg_prog_en": "1",
                        "+ttrig_reg_prog_en": "1",
                        "+tcap_scb_en": "1",
                        "+k_csr_seq": "chi_aiu_csr_trace_debug_seq",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_agent_event_counter": {
                    "purpose": "event Agent event counter",
                    "plusargs": {
                        "+perfmon_event": "26",
                        "+ssr_count": "1",
                        "+k_num_requests": "100",
                        "+k_num_snoop": "100",
                        "+k_num_event_msg": "100",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_noc_event_counter": {
                    "purpose": "event Noc event counter",
                    "plusargs": {
                        "+perfmon_event": "27",
                        "+ssr_count": "1",
                        "+k_num_requests": "100",
                        "+k_num_snoop": "100",
                        "+k_num_event_msg": "100",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_address_collision": {
                    "purpose": "Address collision event",
                    "plusargs": {
                        "+perfmon_event": "24",
                        "+tolerance_pct":"15", 
                        "+ssr_count": "1",   
                        "+k_num_requests": "50",
                        "+k_num_snoop": "0",
						"+k_new_addr_pct": "100",
                        "+perf_test":null,
                        "+counter_control": "0",
                        "+use_seq_user_addrq": null,
                        "+use_user_addrq": "1",
                        "+max_interleave": "1"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_interleaved_data": {
                    "purpose": "Interleaved data event",
                    "plusargs": {
                        "+event_first": "25",
                        "+event_second": "0",
                        "+counter_control": "3",
                        "+ssr_count": "3",
                        "+max_interleave": "8",
                        "+k_num_requests": "30",
                        "+k_num_snoop": "0",
                        "queue_check_dis" : "1"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                },
                "evt_divide_16_counter": {
                    "purpose": "Divide 16 counter event",
                    "plusargs": {
                        "+perfmon_event": "30",
                        "+ssr_count": "1",
                        "+counter_control": "0"
                    },
                    "label": [
                        "perf_mon_events"
                    ]
                }
            },
            "_comment3": "############ END FLAVORS ############",
            "label": ["perf_mon_regr","regr", "weekly","regr_cov"]
        },
        "perfmon_counter_LPF": {
            "name": "perf_cnt_test",
            "purpose": "Test all coefficient filter, CNTSR as LPF (only for OTT)",
            "config": [
                "hw_config_two"
            ],
            "iter": 10,
            "plusargs": {
                "+k_num_requests": "100",
                "+k_num_snoop": "20",
                "+random_txn_test": null,
                "+UVM_MAX_QUIT_COUNT": "150",
                "+main_seq_iter": "1",
                "+ssr_count": "2",
                "+queue_check_dis":"1",
                "+test_only_lpf":"1",
                "+event_first": "20",
                "+event_second": "0",
                "+filter_select":"0"
            },
            "flavors": {
                "filter_select_coef_1" : {"plusargs": {"+filter_select":"1"}},
                "filter_select_coef_2" : {"plusargs": {"+filter_select":"2"}},
                "filter_select_coef_3" : {"plusargs": {"+filter_select":"3"}},
                "filter_select_coef_4" : {"plusargs": {"+filter_select":"4"}},
                "filter_select_coef_5" : {"plusargs": {"+filter_select":"5"}},
                "filter_select_coef_6" : {"plusargs": {"+filter_select":"6"}},
                "filter_select_coef_7" : {"plusargs": {"+filter_select":"7"}}
            },        
            "label": ["perf_mon_regr","regr", "weekly","regr_cov"]
        },
        "perfmon_qos_starvation": {
            "name": "perf_cnt_test",
            "purpose": "Number of QoS starvations event",
            "config": [
                "hw_cfg_nxpauto",
                "hw_cfg_20"
            ],
            "iter": 10,
            "plusargs": {
                "+random_txn_test": null,
                "+no_event_check_dis":"1",
                "+k_num_requests": "1000",
                "+k_burst_pct": "50",
                "+k_delay_min": "200",
                "+k_delay_max": "500",
                "+perfmon_event": "31",
                "+ssr_count": "1",
                "+counter_control": "0"
            },
            "label": [
                "perf_mon_regr","regr", "weekly","regr_cov"
            ]
        },
        "qos_starv_test": {
            "name": "chi_aiu_bringup_test",
            "purpose": "QoS Starvation test",
            "config": [
                "hw_cfg_nxpauto",
                "config256bit",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_cfg_20"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+k_burst_pct": "50",
                "+k_delay_min": "300",
                "+k_delay_max": "500",
                "+en_qos_starv": null,
                "+k_timeout": "3000000",
                "+k_csr_seq": "chi_aiu_qossr_status",
                "+k_num_snoop": "1000"
            },
            "flavors": {
                "overflow" : {
                    "plusargs": {
                        "+force_overflow_count" : null 
                    }
                }
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover"
            ]
        },
        "csr_access_rd": {
            "name": "chi_aiu_bringup_test",
            "purpose": "CSR read test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "comment": "#Stimulus.CHIAIU.v3.4.Security.CSRSecureaccess",
            "plusargs": {
                "+random_txn_test": null,
                "+add_selfid_rd": null,
                "+csr_addr_offset": "4",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "boot_access_rd": {
            "name": "chi_aiu_bringup_test",
            "purpose": "CSR read test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+add_selfid_rd": null,
                "+boot_addr_offset": "4",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "illegal_csr_access_rd_1": {
            "name": "chi_aiu_bringup_test",
            "purpose": "NRS Selfid read test",
            "config": [
		"hw_config_two"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+add_selfid_rd": null,
                "+illegal_csr_access_rd": null,
                "+csr_addr_offset": "4",
                "+k_csr_seq": "chi_aiu_illegal_csr_access",
                "+k_num_snoop": "1000"
            },
            "label": [
                "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "illegal_csr_access_rd": {
            "name": "chi_aiu_bringup_test",
            "purpose": "NRS Selfid read test",
            "config": [
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+add_selfid_rd": null,
                "+illegal_csr_format_uncrr": null,
                "+illegal_csr_access_rd": null,
                "+csr_addr_offset": "4",
                "+k_csr_seq": "chi_aiu_illegal_csr_access",
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "nrs_selfid_rd": {
            "name": "chi_aiu_bringup_test",
            "purpose": "NRS Selfid read test",
            "config": [
		"hw_config_two",
                "hw_cfg_nxpauto",
                "config256bit",
                "hw_cfg_7",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7_snps"
            ],
            "iter": 1,
            "plusargs": {
                "+random_txn_test": null,
                "+add_selfid_rd": null,
                "+k_num_snoop": "1000"
            },
            "label": [
                "regr", "weekly",
		"regr_sanity",
		"tachl_cover",
		"regr_cov"
            ]
        },
        "data_error_on_chi_flit_dvmop_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate data error on chi tx data flit and check smi_cmstatus on DTWreq/DTRreq = 8'b10000011.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20" 
            ],
            "iter": 5,
            "plusargs": {
                "+chi_data_flit_data_err": "50",
                "+no_stash_snoop_test": null,
                "+k_rd_noncoh_pct":"0", 
                "+k_rd_rdonce_pct":"0", 
                "+k_rd_ldrstr_pct":"0", 
                "+k_dt_ls_upd_pct":"0", 
                "+k_dt_ls_cmo_pct":"0", 
                "+k_dt_ls_sth_pct":"0", 
                "+k_wr_noncoh_pct":"0", 
                "+k_wr_cohunq_pct":"0", 
                "+k_wr_cpybck_pct":"0",
                "+k_atomic_st_pct":"0", 
                "+k_atomic_ld_pct":"0", 
                "+k_atomic_sw_pct":"0", 
                "+k_atomic_cm_pct":"0", 
                "+k_dvm_opert_pct":"100", 
                "+k_pre_fetch_pct":"0", 
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr",
                "error"
            ]
        },
        "random_strreq_cmstatus_with_error_atomic_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate StrReq from system sequence to have random values.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 10,
            "plusargs": {
                "+strreq_cmstatus_with_error":"10",
                "+atomic_txn_test": null,
                "+start_ix" : "1",
                "+k_num_requests": "1000",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"check_cov",
		"fcov_err_test",
		"dataless_derr",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtrreq_cmstatus_with_data_error_on_atomic_txn_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq from system sequence to have data error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 10,
            "plusargs": {
                "+dtrreq_cmstatus_with_error":null,
                "+cmstatus_data_error":"50",
                "+atomic_txn_test": null,
                "+k_num_requests": "100",
                "+start_ix": "1",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"check_cov",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtrreq_cmstatus_with_non_data_error_on_atomic_txn_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq from system sequence to have non data error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 10,
            "plusargs": {
                "+dtrreq_cmstatus_with_error":null,
                "+cmstatus_non_data_error":"50",
                "+atomic_txn_test": null,
                "+k_num_requests": "1000",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
       "data_error_on_chi_flit_atomic_txn_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate data error on chi tx data flit and check smi_cmstatus on DTWreq/DTRreq = 8'b10000011.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 20,
            "plusargs": {
                "+chi_data_flit_data_err": "30",
                "+atomic_txn_test": null,
                "+start_ix" : "1",
                "+max_interleave": "1",
                "+k_num_requests": "1000",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr",
                "error"
            ]
        },
        "random_strreq_cmstatus_with_error_dataless_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate StrReq from system sequence to have random values.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 20,
            "plusargs": {
                "+strreq_cmstatus_with_error":"40",
                "+dataless_txn_test": null,
                "+en_excl_txn":0,
                "+start_ix" : "1",
                "+k_num_requests": "1000",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"dataless_derr",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_unmapped_add_read_txn_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Random txn test",
            "config": [
                "hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20",
            	"hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 20,
            "plusargs": {
                "+read_txn_test": null,
                "+en_excl_txn":0,
                "+ASSERT_OFF": null,
                "+start_ix": "1",
                "+unmapped_add_access": "50",
                "+k_csr_seq": "chi_aiu_csr_no_address_hit_seq",
                "+k_num_requests": "500",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"regr_sanity_1",
		"tachl_cover",
		"fcov_err_test",
                "regr_unmap_test",
		"regr_cov",
                "csr"
            ]
        },
        "random_dtrreq_cmstatus_with_data_error_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTRreq from system sequence to have data error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 20,
            "plusargs": {
                "+dtrreq_cmstatus_with_error":null,
                "+cmstatus_data_error":"50",
                "+read_txn_test": null,
                "+en_excl_txn":0,
                "+k_num_requests": "1000",
                "+start_ix": "1",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
        "random_dtwrsp_cmstatus_with_error_write_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate DTWrsp from system sequence to have random error values in cm_status.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 10,
            "comment": "#Stimulus.CHIAIU.v3.dtwrspmstatuserror",
            "plusargs": {
                "+dtwrsp_cmstatus_with_error":"40",
                "+write_txn_test": null,
                "+k_wr_noncoh_pct":"0", 
                "+k_wr_cohunq_pct":"100", 
                "+k_wr_cpybck_pct":"100",
                "+max_interleave":"1",
                "+start_ix" : "1",
                "+use_copyback" : "1",
                "+k_num_snoop": "1"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr"
            ]
        },
       "random_strreq_cmstatus_with_error_write_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate StrReq from system sequence to have random values.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 5,
            "plusargs": {
                "+strreq_cmstatus_with_error":"40",
                "+no_stash_snoop_test": null,
                "+k_rd_noncoh_pct":"0", 
                "+k_rd_rdonce_pct":"0", 
                "+k_rd_ldrstr_pct":"0", 
                "+k_dt_ls_upd_pct":"0", 
                "+k_dt_ls_cmo_pct":"0", 
                "+k_dt_ls_sth_pct":"0", 
                "+k_wr_noncoh_pct":"0", 
                "+k_wr_cohunq_pct":"100", 
                "+k_wr_cpybck_pct":"100",
                "+k_atomic_st_pct":"0", 
                "+k_atomic_ld_pct":"0", 
                "+k_atomic_sw_pct":"0", 
                "+k_atomic_cm_pct":"0", 
                "+k_dvm_opert_pct":"0", 
                "+k_pre_fetch_pct":"0", 
                "+k_num_requests": "500",
                "+k_num_snoop": "0"
            },
            "label": [
            ]
        },
       "data_error_on_chi_flit_write_fcov": {
            "name": "chi_aiu_bringup_test",
            "purpose": "Generate data error on chi tx data flit and check smi_cmstatus on DTWreq/DTRreq = 8'b10000011.",
            "config": [
		"hw_config_two","config256bit",
                "hw_cfg_nxpauto",
		"hw_cfg_20", "hw_cfg_7_all_ecc",
            	"hw_cfg_7_all_parity",
		"hw_config_resiliency_placeholder",
                "hw_cfg_7"
            ],
            "iter": 5,
            "plusargs": {
                "+chi_data_flit_data_err": "20",
                "+no_stash_snoop_test": null,
                "+k_rd_noncoh_pct":"0", 
                "+k_rd_rdonce_pct":"0", 
                "+k_rd_ldrstr_pct":"0", 
                "+k_dt_ls_upd_pct":"0", 
                "+k_dt_ls_cmo_pct":"0", 
                "+k_dt_ls_sth_pct":"0", 
                "+k_wr_noncoh_pct":"0", 
                "+k_wr_cohunq_pct":"0", 
                "+k_wr_cpybck_pct":"100",
                "+k_atomic_st_pct":"0", 
                "+k_atomic_ld_pct":"0", 
                "+k_atomic_sw_pct":"0", 
                "+k_atomic_cm_pct":"0", 
                "+k_dvm_opert_pct":"0", 
                "+k_pre_fetch_pct":"0", 
                "+k_num_requests": "100",
                "+k_num_snoop": "0"
            },
            "label": [
                "weekly",
		"tachl_cover",
		"fcov_err_test",
		"regr_cov",
		"regr_sanity_1",
                "csr",
                "error"
            ]
        }
    }
}

