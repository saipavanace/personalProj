{
  "name": "giu",
  "version": "3.0",
  "csr": {
    "addressWidth": "12",
    "width": 32,
    "spaceBlock": [
      {
        "baseAddress": "0x0",
        "registers": [
          {
            "name": "GIUUIDR",
            "description": "GIU Identification Register",
            "csrDescription": "GIU Identification Register",
            "addressOffset": "0x0",
            "offsetStep": 0,
            "fields": [
              {
                "name": "RPN",
                "bitOffset": 0,
                "bitWidth": "8",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "GIU Register Page Number (within its NRR)",
                "reset": "0x0",
                "resetOverloadFn": "return (Array.isArray(primary.rpn) && primary.rpn.length === 1) ? primary.rpn[0] : primary.rpn"
              },
              {
                "name": "NRRI",
                "bitOffset": 8,
                "bitWidth": "4",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Identifier of the Ncore 3 Register Region\nin which this GIU resides",
                "resetOverloadFn": "return primary.nrri",
                "reset": "0x0"
              },
              {
                "name": "NUnitId",
                "bitOffset": 12,
                "bitWidth": "4",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Ncore 3 Unit identifier. ",
                "resetOverloadFn": "return primary.nUnitId",
                "reset": "0x0"
              },
              {
                "name": "ConnectedChipletId",
                "bitOffset": 17,
                "bitWidth": "2",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "ConnectedNUnitID is the NUnitId of the remote GIU that this GIU is connected to. This needs to be programmed at boot according to the configuration the chip is booting in.",
                "reset": "0x0"
              },
                            {
                "name": "LinkId",
                "bitOffset": 28,
                "bitWidth": "2",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "LinkId assigned to this GIU. This needs to be programmed at boot according to the configuration the chip is booting in.",
                "reset": "0x0"
              },
              {
                "name": "Valid",
                "bitOffset": 31,
                "bitWidth": "1",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Value of 1 validates this register. This bit\nis set to 1 if the GIU is implemented.",
                "reset": "0x1"
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIUUFUIDR",
            "description": "GIU Fabric Unit Identification Register",
            "csrDescription": "GIU Fabric Unit Identification Register",
            "addressOffset": "0x4",
            "offsetStep": 0,
            "fields": [
              {
                "name": "FUnitId",
                "bitOffset": 0,
                "bitWidth": "16",
                "access": "RO",
                "hardware": "RO",
                "reset": "0x0",
                "resetOverloadFn": "return primary.fUnitId",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Fabric Unit Identifier of the unit"
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIUCXSLR",
            "description": "GIU CXS Link Register",
            "csrDescription": "GIU CXS Link Register",
            "addressOffset": "0x40",
            "offsetStep": 0,
            "fields": [
              {
                "name": "CXS_RX_en",
                "bitOffset": 0,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Setting this bit to 1 will allow the GIU to respond to an activation request from the receiver on its RX link. \n When in RUN state it will send a deactivation request to the transmitter"
              },
              {
                "name": "CXS_RX_status",
                "bitOffset": 1,
                "bitWidth": "2",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "This register represents the status of teh CXS TX link \n 0x0 : Stop state \n 0x1 : ACTIVATE state \n 0x2 RUN state \n 0x3 DEACTIVATE state"
              },
                              {
                  "name": "CXS_RX_deactivation_Error",
                  "bitOffset": 3,
                  "bitWidth": 1,
                  "access": "RO",
                  "hardware": "RW",
                  "reset": 0,
                  "linkOp": "NULL",
                  "opOrder": "NULL",
                  "scope": "",
                  "description": "Reserved"
                },
              {
                "name": "CXS_TX_en",
                "bitOffset": 4,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "When the TX link status is STOP, setting this bit to 1 will allow the GIU to trigger an activation sequence on the CXS link.\n When the Status is RUN state, setting this bit to 0 will trigger a deactivation request."
              },
              {
                "name": "CXS_TX_status",
                "bitOffset": 5,
                "bitWidth": "2",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "This register represents the status of teh CXS TX link \n 0x0 : Stop state \n 0x1 : ACTIVATE state \n 0x2 RUN state \n 0x3 DEACTIVATE state"
              },
                              {
                  "name": "CXS_TX_deactivation_Error",
                  "bitOffset": 7,
                  "bitWidth": 1,
                  "access": "RO",
                  "hardware": "RW",
                  "reset": 0,
                  "linkOp": "NULL",
                  "opOrder": "NULL",
                  "description": "CXS_TX_status",
                  "scope": "All"
                },
                                {
                  "name": "CXS_TX_REFUSE_DEACTHINT",
                  "bitOffset": 8,
                  "bitWidth": 1,
                  "access": "RW",
                  "hardware": "RO",
                  "reset": 0,
                  "linkOp": "NULL",
                  "opOrder": "NULL",
                  "description": "CXS_TX_status",
                  "scope": "All"
                }
            ],
            "condition": "return true"
          },
          {
            "name": "GIUUTAR",
            "description": "GIU Transaction Activity Register",
            "csrDescription": "GIU Transaction Activity Register",
            "addressOffset": "0x44",
            "offsetStep": 0,
            "fields": [
              {
                "name": "TransActv",
                "bitOffset": 0,
                "bitWidth": "1",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "This bit is set when GIU is performing any activity."
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIULCSTR",
            "description": "GIU LoopBack control and status register",
            "csrDescription": "GIU Transaction Activity Register",
            "addressOffset": "0x48",
            "offsetStep": 0,
            "fields": [
              {
                "name": "LoopBackEn",
                "bitOffset": 0,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "1'b1 : loopback is enabled, 1'b0 : functional mode"
              },
              {
                "name": "NearLoopEn",
                "bitOffset": 1,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "1'b1 : the loopback is internal to the GIU, 1'b0 : the loopback is external to the GIU"
              },
                            {
                "name": "FarLoopEn",
                "bitOffset": 2,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "The incoming CXS flits are looped back to the controller and are never propagated inside the GIU."
              },
              {
                "name": "RepeatMode",
                "bitOffset": 3,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "1'b1 : Repetitive mode, the data will be loopbacked continuously, 1'b0 : single mode, only one packet will be loop back"
              },
                           {
                "name": "ShiftStart",
                "bitOffset": 4,
                "bitWidth": "2",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "2'b00 : shifting teh start value by one bit, 2'b01 : shifting the start value by 4 bits, 2'b10 : shifting the start value by 8 bits, 2'b11 : shifting teh start value by 16 bits. The shift will wrap arount."
              },
                                        {
                "name": "DelayCounter",
                "bitOffset": 6,
                "bitWidth": "2",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "This field has two functions: if the loopback is set as single issue mode, this field is served as a delay counter for a group of loopback flits to be sent after the loopback is enabled; if the loopback is set as repetitive mode, the same delay counter is also served as the idle/delay counter before the next group of loopback flits is scheduled to send from a GIU. \n 2b00 delayed by 16 GIU clock cycles \n 2b01 delayed by 32 GIU clock cycles\n 2b10 delayed by 64 GIU clock cycles\n 2b11 delayed by 128 GIU clock cycles"
              }, 
              {
                "name": "NumberOfTest",
                "bitOffset": 8,
                "bitWidth": "2",
                "access": "RW",
                "hardware": "RO",
                "reset": "1",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "This field only has effects when the loopback is set as in repetitive mode, it is ignored otherwise. \n 2b00: The loopback test repeats forever till it is stopped\n 2b01: The loop back test repeats two times\n 2b10: The loop back test repeats four times\n 2b11: The loop back test repeats eight times"
              },
                            {
                "name": "MatchStatus",
                "bitOffset": 10,
                "bitWidth": "1",
                "access": "RO",
                "hardware": "RW",
                "reset": "1",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "1’b1: Means the data comparison(s) between the transmitted and received data is(are) the same.\n 1’b0: Means the data comparison between the transmitted and received data is different."
              },
                                          {
                "name": "MismatchPosition",
                "bitOffset": 11,
                "bitWidth": "4",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Each bit in Mismatch[3:0] indicates which flit is mismatched, don’t care if the above bit is 1’b1 (matched)\n 4’b0101 implies flit 0 and 2 are different between what is sent and received. \n This field is cleared every time a loopback packet is sent. \n And it records the LAST mismatch if a repetitive loopback mode is configured."
              },
                                                        {
                "name": "LoopCycleCounter",
                "bitOffset": 15,
                "bitWidth": "17",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "The counter that records how many GIU clock cycles to send and receive the data.\n Every time a test packet is generated, this counter will be reset it and keep incrementing till an expected data is received. It records the last loopback cycle count if it is set as repetitive mode."
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIULDSR",
            "description": "GIU LoopBack data seed register",
            "csrDescription": "GIU LoopBack data seed register",
            "addressOffset": "0x4c",
            "offsetStep": 0,
            "fields": [
              {
                "name": "LoopStartDataValue",
                "bitOffset": 0,
                "bitWidth": "32",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": " 1.32-bit wide starting data for loopback, it is the lowest 32-bits of the first flit. Then the rest segments are put on top of it with the same 32-bit data repeated as many times as it needs to complete a flit either in 32-byte or 64-byte long. If the loopback is configured as in repetitive mode, the lowest 32-bit of the first flit of the 2nd packet will be incremented by one, and it keeps incrementing by one for next packets included in a repetitive mode testing.\n 2.The lowest 32-bit of the 2nd flit carries a value of the seed data shifted to the left with number specified in field [3:2] specified in Table 9-1. Then the rest segments are put on top of it with the same 32-bit data repeated as many times as it needs to complete a flit either in 32-byte or 64-byte long.\n 3.Step 2 is repeated till all the flits are generated to complete a packet as"
              }],
              "condition" : "return true"
          },
          {
            "name": "GIULDMSR",
            "description": "GIU LoopBack data seed register",
            "csrDescription": "GIU LoopBack data seed register",
            "addressOffset": "0x50",
            "condition" : "return 16",
            "offsetStep" : 4,
            "fields": [
              {
                "name": "FirstMismatchValue",
                "bitOffset": 0,
                "bitWidth": "32",
                "access": "RO",
                "hardware": "RW",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Mismatched flit, each register is an 8B slice of a 64B flit where GIULDMSRi has bits [i+31:i], i in [0,15] "
              }]
          },
          {
            "name": "GIUUEDR",
            "description": "GIU Uncorrectable Error Detect Register",
            "csrDescription": "Unit Uncorrectable Error Detect Register",
            "addressOffset": "0x100",
            "fields": [
              {
                "name": "ProtErrDetEn",
                "bitOffset": 0,
                "bitWidth": 1,
                "access": "RW",
                "hardware": "RO",
                "reset": "0x0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Protocol error detect enable: When set, errors will be detected from the protocol interface.",
                "scope": "All"
              },
              {
                "name": "TransErrDetEn",
                "bitOffset": 1,
                "bitWidth": 1,
                "access": "RW",
                "hardware": "RO",
                "reset": "0x0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Concerto Transport error detect enable: When set, errors will be detected from the Concerto Transport."
              },
              {
                "name": "MemErrDetEn",
                "bitOffset": 2,
                "bitWidth": 1,
                "access": "RW",
                "hardware": "RO",
                "reset": "0x0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "Engg",
                "description": "Memory protection error detection enable: When set,errors will be detected from any RAM memory arrays."
              },
              {
                "name": "DecErrDetEn",
                "bitOffset": 3,
                "bitWidth": 1,
                "access": "RW",
                "hardware": "RO",
                "reset": "0x0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Decode Error Enable. When set, this bit enables detection of address map uncorrectable error"
              },
              {
                "name": "TimeoutErrDetEn",
                "bitOffset": 4,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Timeout protection error detection enable: When set, timeout errors will be detected."
              },
              {
                "name": "SoftwareProgConfigErrDetEn",
                "bitOffset": 5,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Software Programming or Configuration Error Enable. When set to 1, this bit enables the detection and logging of Software Programming or Configuration Error."
              },
              {
                "name": "IntfCheckErrDetEn",
                "bitOffset": 6,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Interface Checker Error Enable. When set to 1, this bit enables the detection and logging of Interface Checker Error."
              }
            ],
            "specialImplementation": false,
            "condition": "return true"
          },
          {
            "name": "GIUUUEIR",
            "description": "GIU Uncorrectable Error Interrupt Register",
            "csrDescription": "GIU Uncorrectable Error Interrupt Register",
            "addressOffset": "0x104",
            "offsetStep": 0,
            "fields": [
              {
                "name": "ProtErrIntEn",
                "bitOffset": 0,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0x0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Protocol uncorrectable error interrupt enable.",
                "scope": "All"
              },
              {
                "name": "TransErrIntEn",
                "bitOffset": 1,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Concerto Transport error interrupt enable: When set, errors will be detected from the Concerto Transport."
              },
              {
                "name": "MemErrIntEn",
                "bitOffset": 2,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "Engg",
                "description": "Memory protection error interrupt enable: When set, errors will be detected from any RAM memory arrays."
              },
              {
                "name": "DecErrIntEn",
                "bitOffset": 3,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Decode Error Interrupt Enable. When set, this bit enables the assertion of address map Uncorrectable Error Interrupt signal."
              },
              {
                "name": "TimeOutErrIntEn",
                "bitOffset": 4,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Time Out Error Interrupt Enable. When set to 1, this bit enables the assertion of Time Out Error Interrupt signal. "
              },
              {
                "name": "SoftwareProgConfigErrIntEn",
                "bitOffset": 5,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Software Programming or Configuration Error Interrupt Enable. When set to 1, this bit enables the assertion of Software Programming or Configuration Error Interrupt signal"
              },
              {
                "name": "IntfCheckErrIntEn",
                "bitOffset": 6,
                "bitWidth": "1",
                "access": "RW",
                "hardware": "RO",
                "reset": "0",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "scope": "All",
                "description": "Interface Checker Error Interrupt Enable. When set to 1, this bit enables the assertion of Interface Checker Error Interrupt Signal."
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIUUUESR",
            "description": "GIU Uncorrectable Error Status Register",
            "csrDescription": "GIU Uncorrectable Error Status Register",
            "addressOffset": "0x108",
            "offsetStep": 0,
            "fields": {
              "descFields": [
                {
                  "name": "ErrType",
                  "description": "This field indicates the logged error type, if the Uncorrectable Error Valid bit is set.\n0x02: Native interface write response error\n0x03: Native interface read response error\n0x04: Native interface snoop response error\n0x07: Decode error\n0x08: Transport error \n0x09: Timeout error\nAll other encodings are reserved"
                },
                {
                  "name": "ErrInfo",
                  "description": "This field indicates additional information about logged error type, if the Uncorrectable Error Valid bit is set.\n\nIf it is a native interface write response error then\nbits 1:0   Response from the interface \nbit  2     Security attribute \nbits 15:3  Reserved\n\nIf it is a native interface read response error then \nbits 1:0   Response from the interface \nbit  2     Security attribute \nbits 15:3  Reserved\n\nIf it is a native interface snoop response error then \nbits 1:0   Response from the interface \nbit  2     Security attribute \nbits 15:3  Reserved \n\nIf it is a decode error then \nbits 3:0   Represent type of decode error \n    4'b0000: No address hit \n    4'b0001: Multiple address hit \n    4'b0010: Illegal CSR access format \n    4'b0011: Illegal DII access type\n    4'b0100: unconnected DMI unit access \n    4'b0101: unconnected DII unit access \n    4'b0110: unconnected DCE unit access \n 4'b0111: No credits configured for access \n 4'b1000: Illegal security access \nbits 5:4   Reserved \nbits 15:6  Transaction ID/ \n\nIf it is a transport error then \nbit  0     1'b0 represents wrong target ID; 1'b1 Reserved \nbits 5:1   Reserved \nbits 15:6  Represents source ID \n\nIf it is a time out error then \nbits 1:0   Reserved \nbit  2     Represents the security bit \nbits 15:3  Reserved \n"
                }
              ],
              "reference": "$HW_NCR_CSR/errCSR.json#xUESR"
            },
            "condition": "return true"
          },
          {
            "name": "GIUUELR0",
            "description": "GIU Uncorrectable Error Location Registers 0",
            "csrDescription": "GIU Uncorrectable Error Location Registers 0",
            "addressOffset": "0x10c",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/errCSR.json#xELR0"
            }
          },
          {
            "name": "GIUUELR1",
            "description": "GIU Uncorrectable Error Location Registers 1",
            "csrDescription": "GIU Uncorrectable Error Location Registers 1",
            "addressOffset": "0x110",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/errCSR.json#xELR1"
            }
          },
          {
            "name": "GIUUESAR",
            "description": "GIU Uncorrectable Error Status Alias Register",
            "csrDescription": "GIU Uncorrectable Error Status Alias Register",
            "addressOffset": "0x114",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/errCSR.json#xUESAR"
            },
            "condition": "return true"
          },
          {
            "name": "GIUCECR",
            "description": "GIU Correctable Error Control Register",
            "csrDescription": "GIU Correctable Error Control Register",
            "addressOffset": "0x140",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/errCSR.json#xCECR"
            },
            "condition": "return true"
          },
          {
            "name": "GIUCESR",
            "description": "GIU Correctable Error Status Register",
            "csrDescription": "GIU Correctable Error Status Register",
            "addressOffset": "0x144",
            "offsetStep": 0,
            "fields": {
              "descFields": [
                {
                  "name": "ErrType",
                  "description": "This field indicates the logged error type, if the Correctable Error Valid bit is set.\n0x08: Transport Error\nAll other encodings are reserved"
                },
                {
                  "name": "ErrInfo",
                  "description": "This field indicates additional information about logged error type, if the Correctable Error Valid bit is set.\nIf it is a Transport Error then\nbits  5:0 Reserved\nbits 15:6 Source Id\n19:16 Reserved"
                }
              ],
              "reference": "$HW_NCR_CSR/errCSR.json#xCESR"
            },
            "condition": "return true"
          },
          {
            "name": "GIUCESAR",
            "description": "GIU Correctable Error Status Alias Register",
            "csrDescription": "GIU Correctable Error Status Alias Register",
            "addressOffset": "0x150",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/errCSR.json#xCESAR"
            },
            "condition": "return true"
          },
          {
            "name": "GIUCRTR",
            "description": "GIU Correctable Resiliency Threshold Register",
            "csrDescription": "GIU Correctable Resiliency Threshold Register",
            "addressOffset": "0x180",
            "condition": "1",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/errCSR.json#xCRTR",
              "descFields": []
            }
          },
          {
            "name": "GIUNRSBAR",
            "description": "NRSBAR identifies the base address of the NRS",
            "csrDescription": "NRS Base Address Register",
            "addressOffset": "0x380",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/nrs_regionCSR.json#xNRSBAR",
              "descFields": []
            },
            "condition": "return true"
          },
          {
            "name": "GIUNRSBHR",
            "description": "NRSBHR is used to stage the writing of the Base address of the NRS",
            "csrDescription": "NRS Base Address Hold Register",
            "addressOffset": "0x384",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/nrs_regionCSR.json#xNRSBHR",
              "descFields": []
            },
            "condition": "return true"
          },
          {
            "name": "GIUNRSBLR",
            "description": "NRSBLR is used to load the NRSBAR from NRSBHR",
            "csrDescription": "NRS Base Address Load Register",
            "addressOffset": "0x388",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/nrs_regionCSR.json#xNRSBLR",
              "descFields": []
            },
            "condition": "return true"
          },
          {
            "name": "DMIAMIGR",
            "description": "Active Memory Interleave Group Register",
            "csrDescription": "Active Memory Interleave Group Register",
            "addressOffset": "0x3c0",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/regionCSR.json#xAMIGR",
              "descFields": []
            }
          },
          {
            "name": "DMIMIFSR",
            "description": "Memory Interleave Function Select Register",
            "csrDescription": "Memory Interleave Function Select Register",
            "addressOffset": "0x3c4",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/regionCSR.json#xMIFSR",
              "descFields": []
            }
          },
          {
            "name": "GIUBRAR",
            "description": "Boot Region Attribute Register",
            "csrDescription": "Boot Region Attribute Register",
            "addressOffset": "0x390",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/boot_regionCSR.json#xBRAR"
            }
          },
          {
            "name": "GIUBRBLR",
            "description": "Boot Region Base Address Low Register",
            "csrDescription": "Boot Region Base Address Low Register",
            "addressOffset": "0x394",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/boot_regionCSR.json#xBRBLR"
            }
          },
          {
            "name": "GIUBRBHR",
            "description": "Boot Region Base High Address Register",
            "csrDescription": "Boot Region Base Address Register",
            "addressOffset": "0x398",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/boot_regionCSR.json#xBRBHR"
            }
          },
          {
            "name": "GIUGPRAR",
            "description": "General Purpose Region Attribute Register",
            "csrDescription": "General Purpose Region Attribute Register",
            "addressOffset": "0x400",
            "condition": "return derived.nGPRA",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/regionCSR.json#xGPRAR"
            }
          },
          {
            "name": "GIUGPRBLR",
            "description": "General Purpose Region Base Address Low Register",
            "csrDescription": "General Purpose Region Base Address Low Register",
            "addressOffset": "0x404",
            "condition": "return derived.nGPRA",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/regionCSR.json#xGPRBLR"
            }
          },
          {
            "name": "GIUGPRBHR",
            "description": "General Purpose Region Base Address High Register",
            "csrDescription": "General Purpose Region Base Address High Register",
            "addressOffset": "0x408",
            "condition": "return derived.nGPRA",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/regionCSR.json#xGPRBHR"
            }
          },
           {
            "name": "GIUCCTRLR",
            "description": "AIU Unit Capture Control Register",
            "csrDescription": "AIU Unit Capture Control Register",
            "addressOffset": "0x800",
            "condition": "return true",
            "offsetStep": 0,
	        "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/trace_capture_CSR.json#xCCTRLR"
            }
          },
          {
            "name": "GIUCNTCR",
			"description": "PMON Counter Control Register",
			"csrDescription": "PMON Counter Control Register",
            "addressOffset": "0xb00",
            "condition": "return derived.nPerfCounters",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xCNTCR"
            }
          },
          {
            "name": "GIUCNTVR",
			"description": "PMON Counter Value Register",
			"csrDescription": "PMON Counter Value Register Register",
            "addressOffset": "0xb04",
            "condition": "return derived.nPerfCounters",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xCNTVR"
            }
          },
          {
            "name": "GIUCNTSR",
			"description": "PMON Counter Saturation Register",
			"csrDescription": "PMON Counter Saturation Register",
            "addressOffset": "0xb08",
            "condition": "return derived.nPerfCounters",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xCNTSR"
            }
          },
	      {
            "name": "GIUBCNTFR",
			"description": "PMON BandWidth Counter Filter Register",
			"csrDescription": "PMON BW Counter Filter Register",
            "addressOffset": "0xb0c",
            "condition": "return derived.nPerfCounters",
            "offsetStep": 16,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xBCNTFR"
            }
          },
	      {
            "name": "GIUBCNTMR",
			"description": "PMON BandWidth Counter Mask Register",
			"csrDescription": "PMON BW Counter Mask Register",
            "addressOffset": "0xbc0",
            "condition": "return derived.nPerfCounters",
            "offsetStep": 4,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xBCNTMR"
            }
          },
	  	  {
            "name": "GIUMCNTCR",
			"description": "PMON Main Counter Control Register",
			"csrDescription": "PMON Main Counter Control Register",
            "addressOffset": "0xc80",
            "condition": "return derived.nPerfCounters ? true : false",
            "offsetStep": 0,
            "fields": {
              "descFields": [],
              "reference": "$HW_NCR_CSR/ncr_pmon_CSR.json#xMCNTCR"
            }
          },
          {
            "name": "GIUNRSAR",
            "description": "GIU Ncore Register Space Attribute",
            "csrDescription": "GIU Ncore Register Space Attribute Register",
            "addressOffset": "0xff0",
            "condition": "return true",
            "offsetStep": 0,
            "fields": {
              "reference": "$HW_NCR_CSR/miscCSR.json#xNRSAR",
              "descFields": []
            }
          },
          {
            "name": "GIUUEVIR",
            "description": "GIU Unit Engineering Version Id Register",
            "csrDescription": "GIU Unit Engineering Version Id Register",
            "addressOffset": "0xff4",
            "offsetStep": 0,
            "fields": [
              {
                "name": "EngVerId",
                "bitOffset": 0,
                "bitWidth": "32",
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "The Engineering Version Identifier is a concatenation of two fields: {MPFHash[18:0], CHIP_ID[12:0]}. The CHIP_ID is obtained from a license file and the MPFHash is the last 19 bits obtained from the 128bit MD5 Hash.",
                "scope": "Engg",
                "reset": "return derived.system.engVerId"
              }
            ],
            "condition": "return true"
          },
          {
            "name": "GIUINFOR",
            "description": "GIU Information Register ",
            "csrDescription": "GIU Information Register ",
            "addressOffset": "0xffc",
            "offsetStep": 0,
            "fields": [
              {
                "name": "ImplVer",
                "bitOffset": 0,
                "bitWidth": 16,
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Implementation Version",
                "scope": "All",
                "reset": "return derived.system.implVerId"
              },
              {
                "name": "UT",
                "bitOffset": 16,
                "bitWidth": 4,
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Unit Type: specifies the Ncore unit type\n0x0 - CAIU\n0x1 - NCAIU\n0x2 - NCAIU with proxy cache\n0x3 - 0x7 - Reserved\n0x8 - DCE\n0x9 - DMI\n0xA - DII\n0xB - DVE \n 0xC  - GIU \n 0xD -  0xF - Reserved\n",
                "scope": "All",
                "reset": "0xD"
              },
              {
                "name": "UST",
                "bitOffset": 20,
                "bitWidth": 3,
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Unit Sub-Types",
                "scope": "All",
                "reset": "0"
              },
              {
                "name": "Valid",
                "bitOffset": 31,
                "bitWidth": 1,
                "access": "RO",
                "hardware": "RO",
                "linkOp": "NULL",
                "opOrder": "NULL",
                "description": "Implemented",
                "scope": "All",
                "reset": "0x1"
              }
            ],
            "condition": "return true"
          }
        ]
      }
    ]
  }
}
