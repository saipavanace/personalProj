#!/bin/csh

set TOTAL = `grep -RI "node" $WORK_TOP/dv/sub_sys/tb/testlist | grep -v "\-t" | grep -v "#" | wc -l`
set UNIT = `grep -RI "node" $WORK_TOP/dv/sub_sys/tb/testlist | grep -v "\-t" | grep -v "#" | awk '{print $4}'`
set NAME = `grep -RI "node" $WORK_TOP/dv/sub_sys/tb/testlist | grep -v "\-t" | grep -v "#" | awk '{print $12}'`
set CONFIG = `grep -RI "node" $WORK_TOP/dv/sub_sys/tb/testlist | grep -v "\-t" | grep -v "#" | awk '{print $14}'`

make clean

if ($1 != "run_only") then

rm -rf testlist
touch testlist

@ i = 1
while ($i <= $TOTAL)

    echo "node ../../../dv/scripts/rsim.js -m -a -e $UNIT[$i] -c -n $NAME[$i] -d RTL_DUT,INHOUSE_AXI,ASSERT_ON,DUMP_ON,V1 -r -C $CONFIG[$i]" >> testlist
    @ i++

end

tclsh ../../../dv/scripts/par_run.tcl -m 3 -e . -f testlist

endif

if ($1 != "compile_only") then

@ i = 1
while ($i <= $TOTAL)

    echo '`define CARBON' > ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/top1.v
    cat ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/no_project_name.v >> ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/top1.v
    mv ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/top1.v ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/no_project_name.v
    cp ../../../debug/$UNIT[$i]/$NAME[$i]/memory/* ../../../debug/$UNIT[$i]/$NAME[$i]/rtl/    

    make verilator NAME=$NAME[$i] RTL=../../../../debug/$UNIT[$i]/$NAME[$i]/rtl/no_project_name.v TOP=no_project_name DIR=../../../../debug/$UNIT[$i]/$NAME[$i]/rtl

    @ i++

end

endif

rm -rf verilator_sub_sys.js
touch verilator_sub_sys.js

echo "'use strict';" >> verilator_sub_sys.js
echo "var exec = require('child_process').exec," >> verilator_sub_sys.js
echo "expect = require('chai').expect;" >> verilator_sub_sys.js
echo "describe('Subsystem Verilator Report', function () {" >> verilator_sub_sys.js

@ i = 1
while ($i <= $TOTAL)

    echo "it('Subsystem Verilator $NAME[$i]', function (done) {" >> verilator_sub_sys.js
    echo "exec('grep -RI "\"%Error\"" rtl/top/verilator/verilator.$NAME[$i]/verilator.txt | grep -v "\"Exit\"" | wc -l', function (e, sto1, ste1) {" >> verilator_sub_sys.js
    echo "expect(sto1).to.equal('0\\n');" >> verilator_sub_sys.js
    echo "done();" >> verilator_sub_sys.js
    echo "});" >> verilator_sub_sys.js
    echo "});" >> verilator_sub_sys.js
    @ i++

end

echo "});" >> verilator_sub_sys.js
