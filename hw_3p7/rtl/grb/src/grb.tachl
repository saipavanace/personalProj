\jsbegin
//=============================================================================
// Copyright(C) 2018 Arteris, Inc.
// All rights reserved
//=============================================================================
// GRB Top Level
// Author: Boon Chuan
//=============================================================================

// Variables

var u = obj.lib;
var m = obj.userLib;
var utilFunctions      = obj.userLib;
var bundleFunctions    = obj.userLib.bundleFunctions;
var interfaceGen       = obj.userLib.interfaceGenerators;

//=============================================================================
// Top Level Parameters
//=============================================================================
var interfaces         = obj.lib.getParam('interfaces');

var csr                = obj.lib.getParam('csr');

//=============================================================================
// Interface Generation
//=============================================================================

// clk interface params generation
var interfaceFunc         = new obj.userLib[interfaces.clkInt.interface];
var clkInterface          = interfaceFunc.getSignals(interfaces.clkInt.params);
var clkInterfaceBundle    = interfaceFunc.getSignalsBundle(interfaces.clkInt.params);
var clkInterfaceName      = interfaces.clkInt.name;
var clkInterfaceDirection = interfaces.clkInt.direction;

// APB interface params generation
var interfaceFunc         = new obj.userLib[interfaces.apbInt.interface];
var apbInterface          = interfaceFunc.getSignals(interfaces.apbInt.params);
var apbInterfaceBundle    = interfaceFunc.getSignalsBundle(interfaces.apbInt.params);
var apbInterfaceName      = interfaces.apbInt.name;
var apbInterfaceDirection = interfaces.apbInt.direction;

// Register Protection interface params generation
var regProtectionInterfaceBundle = {};
var regProtectionInterfaceName   = '';
var regProtectionStyle           = null;

//=============================================================================
// Clock and Reset Interface
//=============================================================================

obj.lib.interface(clkInterfaceName, "slave", clkInterface);

//=============================================================================
// APB Interface
//=============================================================================

obj.lib.interface(apbInterfaceName, "slave", apbInterface);


obj.lib.setAttribute("csr", csr);

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

\jsbegin
// =======================================================
// Wires
// =======================================================
\jsend

\jsbegin
// =======================================================
// GRU Unit Instance
// =======================================================
\jsend

\jsbegin
    var UNIT_INTF = [];

    UNIT_INTF.push({
        modulePrefix: clkInterfaceName,
        localPrefix: clkInterfaceName,
        interface: clkInterfaceBundle,
        direction: clkInterfaceDirection
    });

    UNIT_INTF.push({
        modulePrefix: apbInterfaceName,
        localPrefix: apbInterfaceName,
        interface: apbInterfaceBundle,
        direction: apbInterfaceDirection
    });

    var grb_unit_params = {
            csr:                csr,
            regProtectionInterface:     regProtectionInterfaceBundle,
            regProtectionInterfaceName: regProtectionInterfaceName,
            regProtectionStyle:         regProtectionStyle,
            clkInterface:               clkInterfaceBundle,
            clkInterfaceName:           clkInterfaceName,
            apbInterface:               apbInterfaceBundle,
            apbInterfaceName:           apbInterfaceName
        };
\jsend

    \=obj.lib.instance({
        instanceName: 'unit',
        moduleName: 'grb_unit',
        params: grb_unit_params,
        verilogParams: {},
        ports: {},
        interfaces: UNIT_INTF,
        portsDelimiter: '\n        '
    })=\

endmodule
