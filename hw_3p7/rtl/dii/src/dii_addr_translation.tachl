//=============================================================================
// Copyright (C) 2018 Arteris, Inc.
// All rights reserved.
//=============================================================================
\jsbegin
// Dmi address translation Unit
// Author: Tso-Wei Chang
// 
//=========================================================================

var u = obj.lib;
var bundleFunctions = obj.userLib.bundleFunctions;
var wAddr = obj.lib.getParam('wAddr');
var useAddrTranslation = obj.lib.getParam('useAddrTranslation');
var nAddrTransRegisters = useAddrTranslation? obj.lib.getParam('nAddrTransRegisters') : 0;
var csrAddrTransInterface = obj.lib.getParam('csrAddrTransInterface');
\jsend

\jsbegin
//=============================================================================
// Ports
//=============================================================================
obj.lib.interface('', 'slave', csrAddrTransInterface);

u.port('input',  'in_addr'          , wAddr );
u.port('output', 'out_addr'         , wAddr );

\jsend

module \=obj.lib.getModuleName()=\ (\=obj.lib.getPorts('\n')=\);

\jsbegin
//=============================================================================
// Wires
//=============================================================================
if(useAddrTranslation) {
\jsend
\js for(var i =0; i < nAddrTransRegisters; i++) {
wire [\=wAddr-20-1=\:0] mask\=i=\;
assign mask\=i=\ = ((\=wAddr-20=\'b1 << csr_ATER_\=i=\_Mask) - \=wAddr-20=\'d1);

wire [\=wAddr-20-1=\:0] to_addr_masked\=i=\;
assign to_addr_masked\=i=\ = (in_addr[\=wAddr-1=\:20] & mask\=i=\) | (csr_RTAR_\=i=\_ToAddr[\=wAddr-20-1=\:0] & ~mask\=i=\);
\js }

assign out_addr = 
\js for(var i =0; i < nAddrTransRegisters; i++) {
    (((in_addr[\=wAddr-1=\:20] & ~mask\=i=\) == (csr_RFAR_\=i=\_FromAddr[\=wAddr-20-1=\:0] & ~mask\=i=\)) & csr_ATER_\=i=\_Valid)? {to_addr_masked\=i=\, in_addr[19:0]} :
\js }
    in_addr;
\js } else {
assign out_addr = in_addr;
\js }
endmodule
