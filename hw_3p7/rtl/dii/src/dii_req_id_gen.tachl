//=============================================================================
// Copyright (C) 2017 Arteris, Inc.
// All rights reserved.
//=============================================================================
\jsbegin
// Find first one
//
// Example:                                      find_first_one
// input[2:0]  output[2:0]  {output[1:0],1'b0}   {output[1:0],1'b0}^output[2:0]
// 001         111          110                  001
// 011         111          110                  001
// 101         111          110                  001
// 111         111          110                  001
// 010         110          100                  010
// 110         110          100                  010
// 100         100          000                  100
// 000         000          000                  000
//=========================================================================
\jsend

\jsbegin
var u = obj.lib;
\jsend

\jsbegin
//=========================================================================
// ports
//=========================================================================
u.port('input',  'invec',  'ID_NUM');
u.port('output', 'outvec', 'ID_NUM');
\jsend

module \=u.getModuleName()=\
# (
   parameter ID_NUM = \=u.getParam('id_num')=\
) (\=u.getPorts('\n    ')=\);

wire [ID_NUM-1:0] outvec0;

\=u.instance({
    instanceName: 'u_thermo',
    moduleName: 'thermo_fast',
    params: {
        width   : u.getParam('id_num')
    },
    ports: {
        invec       : 'invec',
        outvec      : 'outvec0'
    }
})=\

\jsbegin
// NUmber of Ids always greater than 1
/* istanbul ignore else env ncore_3p2,ncore_3p0,ncore_3p4,ncore_3p6,ncore_3p7 */
if (u.getParam('id_num') > 1) {
\jsend

assign outvec = {outvec0[ID_NUM-2:0], 1'b0} ^ outvec0[ID_NUM-1:0];

\jsbegin
} else {
\jsend

assign outvec = outvec0;

\jsbegin
}
\jsend

endmodule
